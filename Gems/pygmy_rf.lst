
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\Gems\pygmy_rf.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\Gems\pygmy_rf.o


Disassembly of section .text.rfGetID:

00000000 <rfGetID>:
rfGetID():
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <rfGetID+0x8>)
   2:	6818      	ldr	r0, [r3, #0]
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	00000000 	.word	0x00000000

Disassembly of section .text.rfInitSockets:

00000000 <rfInitSockets>:
rfInitSockets():
   0:	b508      	push	{r3, lr}
   2:	205c      	movs	r0, #92	; 0x5c
   4:	f7ff fffe 	bl	0 <sysAllocate>
   8:	4b02      	ldr	r3, [pc, #8]	; (14 <rfInitSockets+0x14>)
   a:	2200      	movs	r2, #0
   c:	6018      	str	r0, [r3, #0]
   e:	4b02      	ldr	r3, [pc, #8]	; (18 <rfInitSockets+0x18>)
  10:	701a      	strb	r2, [r3, #0]
  12:	bd08      	pop	{r3, pc}
	...

Disassembly of section .text.rfListSockets:

00000000 <rfListSockets>:
rfListSockets():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	2001      	movs	r0, #1
   4:	4927      	ldr	r1, [pc, #156]	; (a4 <rfListSockets+0xa4>)
   6:	f7ff fffe 	bl	0 <print>
   a:	2500      	movs	r5, #0
   c:	e045      	b.n	9a <rfListSockets+0x9a>
   e:	4b26      	ldr	r3, [pc, #152]	; (a8 <rfListSockets+0xa8>)
  10:	245c      	movs	r4, #92	; 0x5c
  12:	681b      	ldr	r3, [r3, #0]
  14:	2001      	movs	r0, #1
  16:	fb04 3405 	mla	r4, r4, r5, r3
  1a:	4924      	ldr	r1, [pc, #144]	; (ac <rfListSockets+0xac>)
  1c:	6b63      	ldr	r3, [r4, #52]	; 0x34
  1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
  20:	f7ff fffe 	bl	0 <print>
  24:	2001      	movs	r0, #1
  26:	4922      	ldr	r1, [pc, #136]	; (b0 <rfListSockets+0xb0>)
  28:	6aa2      	ldr	r2, [r4, #40]	; 0x28
  2a:	f7ff fffe 	bl	0 <print>
  2e:	2001      	movs	r0, #1
  30:	4920      	ldr	r1, [pc, #128]	; (b4 <rfListSockets+0xb4>)
  32:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
  34:	f7ff fffe 	bl	0 <print>
  38:	2001      	movs	r0, #1
  3a:	491f      	ldr	r1, [pc, #124]	; (b8 <rfListSockets+0xb8>)
  3c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
  40:	f7ff fffe 	bl	0 <print>
  44:	2001      	movs	r0, #1
  46:	491d      	ldr	r1, [pc, #116]	; (bc <rfListSockets+0xbc>)
  48:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
  4c:	f7ff fffe 	bl	0 <print>
  50:	2001      	movs	r0, #1
  52:	491b      	ldr	r1, [pc, #108]	; (c0 <rfListSockets+0xc0>)
  54:	f894 203a 	ldrb.w	r2, [r4, #58]	; 0x3a
  58:	f7ff fffe 	bl	0 <print>
  5c:	2001      	movs	r0, #1
  5e:	4919      	ldr	r1, [pc, #100]	; (c4 <rfListSockets+0xc4>)
  60:	f894 203b 	ldrb.w	r2, [r4, #59]	; 0x3b
  64:	f7ff fffe 	bl	0 <print>
  68:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
  6c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  70:	2b02      	cmp	r3, #2
  72:	d110      	bne.n	96 <rfListSockets+0x96>
  74:	2001      	movs	r0, #1
  76:	4914      	ldr	r1, [pc, #80]	; (c8 <rfListSockets+0xc8>)
  78:	f104 0218 	add.w	r2, r4, #24
  7c:	f7ff fffe 	bl	0 <print>
  80:	f994 3039 	ldrsb.w	r3, [r4, #57]	; 0x39
  84:	2b00      	cmp	r3, #0
  86:	da02      	bge.n	8e <rfListSockets+0x8e>
  88:	2001      	movs	r0, #1
  8a:	4910      	ldr	r1, [pc, #64]	; (cc <rfListSockets+0xcc>)
  8c:	e001      	b.n	92 <rfListSockets+0x92>
  8e:	4910      	ldr	r1, [pc, #64]	; (d0 <rfListSockets+0xd0>)
  90:	2001      	movs	r0, #1
  92:	f7ff fffe 	bl	0 <print>
  96:	3501      	adds	r5, #1
  98:	b2ed      	uxtb	r5, r5
  9a:	4b0e      	ldr	r3, [pc, #56]	; (d4 <rfListSockets+0xd4>)
  9c:	781b      	ldrb	r3, [r3, #0]
  9e:	42ab      	cmp	r3, r5
  a0:	d8b5      	bhi.n	e <rfListSockets+0xe>
  a2:	bd38      	pop	{r3, r4, r5, pc}
	...
  ac:	0000000f 	.word	0x0000000f
  b0:	00000029 	.word	0x00000029
  b4:	00000035 	.word	0x00000035
  b8:	00000042 	.word	0x00000042
  bc:	00000051 	.word	0x00000051
  c0:	00000062 	.word	0x00000062
  c4:	00000072 	.word	0x00000072
  c8:	00000080 	.word	0x00000080
  cc:	00000084 	.word	0x00000084
  d0:	00000088 	.word	0x00000088
  d4:	00000000 	.word	0x00000000

Disassembly of section .text.rfGetSocket:

00000000 <rfGetSocket>:
rfGetSocket():
   0:	4a0eb570 	.word	0x4a0eb570
   4:	4603      	mov	r3, r0
   6:	f64a 20aa 	movw	r0, #43690	; 0xaaaa
   a:	6010      	str	r0, [r2, #0]
   c:	4a0c      	ldr	r2, [pc, #48]	; (40 <rfGetSocket+0x40>)
   e:	2400      	movs	r4, #0
  10:	7816      	ldrb	r6, [r2, #0]
  12:	4a0c      	ldr	r2, [pc, #48]	; (44 <rfGetSocket+0x44>)
  14:	6812      	ldr	r2, [r2, #0]
  16:	e00d      	b.n	34 <rfGetSocket+0x34>
  18:	6b15      	ldr	r5, [r2, #48]	; 0x30
  1a:	4610      	mov	r0, r2
  1c:	429d      	cmp	r5, r3
  1e:	d00c      	beq.n	3a <rfGetSocket+0x3a>
  20:	428d      	cmp	r5, r1
  22:	d00a      	beq.n	3a <rfGetSocket+0x3a>
  24:	6b55      	ldr	r5, [r2, #52]	; 0x34
  26:	429d      	cmp	r5, r3
  28:	d007      	beq.n	3a <rfGetSocket+0x3a>
  2a:	325c      	adds	r2, #92	; 0x5c
  2c:	428d      	cmp	r5, r1
  2e:	d004      	beq.n	3a <rfGetSocket+0x3a>
  30:	3401      	adds	r4, #1
  32:	b2e4      	uxtb	r4, r4
  34:	42b4      	cmp	r4, r6
  36:	d3ef      	bcc.n	18 <rfGetSocket+0x18>
  38:	2000      	movs	r0, #0
  3a:	bd70      	pop	{r4, r5, r6, pc}
  3c:	40003000 	.word	0x40003000
	...

Disassembly of section .text.rfCopySocket:

00000000 <rfCopySocket>:
rfCopySocket():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4b13      	ldr	r3, [pc, #76]	; (50 <rfCopySocket+0x50>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	4605      	mov	r5, r0
   a:	601a      	str	r2, [r3, #0]
   c:	460c      	mov	r4, r1
   e:	f7ff fffe 	bl	0 <fileCopyHandle>
  12:	6aab      	ldr	r3, [r5, #40]	; 0x28
  14:	62a3      	str	r3, [r4, #40]	; 0x28
  16:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  18:	62e3      	str	r3, [r4, #44]	; 0x2c
  1a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
  1c:	6323      	str	r3, [r4, #48]	; 0x30
  1e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
  20:	6363      	str	r3, [r4, #52]	; 0x34
  22:	f895 3038 	ldrb.w	r3, [r5, #56]	; 0x38
  26:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  2a:	f895 3039 	ldrb.w	r3, [r5, #57]	; 0x39
  2e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  32:	f895 303a 	ldrb.w	r3, [r5, #58]	; 0x3a
  36:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
  3a:	2300      	movs	r3, #0
  3c:	18e9      	adds	r1, r5, r3
  3e:	18e2      	adds	r2, r4, r3
  40:	f891 103c 	ldrb.w	r1, [r1, #60]	; 0x3c
  44:	3301      	adds	r3, #1
  46:	2b20      	cmp	r3, #32
  48:	f882 103c 	strb.w	r1, [r2, #60]	; 0x3c
  4c:	d1f6      	bne.n	3c <rfCopySocket+0x3c>
  4e:	bd38      	pop	{r3, r4, r5, pc}
  50:	40003000 	.word	0x40003000

Disassembly of section .text.rfCloseSocket:

00000000 <rfCloseSocket>:
rfCloseSocket():
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4b18      	ldr	r3, [pc, #96]	; (64 <rfCloseSocket+0x64>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	601a      	str	r2, [r3, #0]
   a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
   e:	4605      	mov	r5, r0
  10:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  14:	2b02      	cmp	r3, #2
  16:	d101      	bne.n	1c <rfCloseSocket+0x1c>
  18:	f7ff fffe 	bl	0 <fileClose>
  1c:	4e12      	ldr	r6, [pc, #72]	; (68 <rfCloseSocket+0x68>)
  1e:	2400      	movs	r4, #0
  20:	7830      	ldrb	r0, [r6, #0]
  22:	632c      	str	r4, [r5, #48]	; 0x30
  24:	636c      	str	r4, [r5, #52]	; 0x34
  26:	b1d8      	cbz	r0, 60 <rfCloseSocket+0x60>
  28:	235c      	movs	r3, #92	; 0x5c
  2a:	3801      	subs	r0, #1
  2c:	4358      	muls	r0, r3
  2e:	f7ff fffe 	bl	0 <sysAllocate>
  32:	4605      	mov	r5, r0
  34:	b1a0      	cbz	r0, 60 <rfCloseSocket+0x60>
  36:	7833      	ldrb	r3, [r6, #0]
  38:	3b01      	subs	r3, #1
  3a:	7033      	strb	r3, [r6, #0]
  3c:	e008      	b.n	50 <rfCloseSocket+0x50>
  3e:	215c      	movs	r1, #92	; 0x5c
  40:	4361      	muls	r1, r4
  42:	6838      	ldr	r0, [r7, #0]
  44:	3401      	adds	r4, #1
  46:	1840      	adds	r0, r0, r1
  48:	1869      	adds	r1, r5, r1
  4a:	f7ff fffe 	bl	0 <rfCloseSocket>
  4e:	b2e4      	uxtb	r4, r4
  50:	7833      	ldrb	r3, [r6, #0]
  52:	4f06      	ldr	r7, [pc, #24]	; (6c <rfCloseSocket+0x6c>)
  54:	42a3      	cmp	r3, r4
  56:	d8f2      	bhi.n	3e <rfCloseSocket+0x3e>
  58:	6838      	ldr	r0, [r7, #0]
  5a:	f7ff fffe 	bl	0 <sysFree>
  5e:	603d      	str	r5, [r7, #0]
  60:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  62:	bf00      	nop
  64:	40003000 	.word	0x40003000
	...

Disassembly of section .text.rfOpenSocketFromPacket:

00000000 <rfOpenSocketFromPacket>:
rfOpenSocketFromPacket():
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4e1f      	ldr	r6, [pc, #124]	; (80 <rfOpenSocketFromPacket+0x80>)
   4:	4b1f      	ldr	r3, [pc, #124]	; (84 <rfOpenSocketFromPacket+0x84>)
   6:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   a:	4604      	mov	r4, r0
   c:	4d1e      	ldr	r5, [pc, #120]	; (88 <rfOpenSocketFromPacket+0x88>)
   e:	6830      	ldr	r0, [r6, #0]
  10:	601a      	str	r2, [r3, #0]
  12:	7829      	ldrb	r1, [r5, #0]
  14:	4602      	mov	r2, r0
  16:	2300      	movs	r3, #0
  18:	e007      	b.n	2a <rfOpenSocketFromPacket+0x2a>
  1a:	f8d2 e030 	ldr.w	lr, [r2, #48]	; 0x30
  1e:	6827      	ldr	r7, [r4, #0]
  20:	325c      	adds	r2, #92	; 0x5c
  22:	45be      	cmp	lr, r7
  24:	d00b      	beq.n	3e <rfOpenSocketFromPacket+0x3e>
  26:	3301      	adds	r3, #1
  28:	b2db      	uxtb	r3, r3
  2a:	428b      	cmp	r3, r1
  2c:	d3f5      	bcc.n	1a <rfOpenSocketFromPacket+0x1a>
  2e:	d106      	bne.n	3e <rfOpenSocketFromPacket+0x3e>
  30:	3301      	adds	r3, #1
  32:	215c      	movs	r1, #92	; 0x5c
  34:	4359      	muls	r1, r3
  36:	f7ff fffe 	bl	0 <sysReallocate>
  3a:	b100      	cbz	r0, 3e <rfOpenSocketFromPacket+0x3e>
  3c:	6030      	str	r0, [r6, #0]
  3e:	782a      	ldrb	r2, [r5, #0]
  40:	6833      	ldr	r3, [r6, #0]
  42:	265c      	movs	r6, #92	; 0x5c
  44:	fb06 3602 	mla	r6, r6, r2, r3
  48:	f7ff fffe 	bl	0 <timeGet>
  4c:	4a0f      	ldr	r2, [pc, #60]	; (8c <rfOpenSocketFromPacket+0x8c>)
  4e:	6823      	ldr	r3, [r4, #0]
  50:	6812      	ldr	r2, [r2, #0]
  52:	6333      	str	r3, [r6, #48]	; 0x30
  54:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
  58:	f003 03ff 	and.w	r3, r3, #255	; 0xff
  5c:	4313      	orrs	r3, r2
  5e:	62b0      	str	r0, [r6, #40]	; 0x28
  60:	62f0      	str	r0, [r6, #44]	; 0x2c
  62:	6373      	str	r3, [r6, #52]	; 0x34
  64:	7aa3      	ldrb	r3, [r4, #10]
  66:	4630      	mov	r0, r6
  68:	f886 3038 	strb.w	r3, [r6, #56]	; 0x38
  6c:	7b63      	ldrb	r3, [r4, #13]
  6e:	f886 3039 	strb.w	r3, [r6, #57]	; 0x39
  72:	2300      	movs	r3, #0
  74:	f886 303a 	strb.w	r3, [r6, #58]	; 0x3a
  78:	782b      	ldrb	r3, [r5, #0]
  7a:	3301      	adds	r3, #1
  7c:	702b      	strb	r3, [r5, #0]
  7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  80:	00000000 	.word	0x00000000
  84:	40003000 	.word	0x40003000
	...

Disassembly of section .text.rfOpenSocket:

00000000 <rfOpenSocket>:
rfOpenSocket():
   0:	b500      	push	{lr}
   2:	b08b      	sub	sp, #44	; 0x2c
   4:	9000      	str	r0, [sp, #0]
   6:	4668      	mov	r0, sp
   8:	f88d 100d 	strb.w	r1, [sp, #13]
   c:	f7ff fffe 	bl	0 <rfOpenSocket>
  10:	b00b      	add	sp, #44	; 0x2c
  12:	bd00      	pop	{pc}

Disassembly of section .text.rfSaveData:

00000000 <rfSaveData>:
rfSaveData():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4b13      	ldr	r3, [pc, #76]	; (50 <rfSaveData+0x50>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	601a      	str	r2, [r3, #0]
   a:	7b0b      	ldrb	r3, [r1, #12]
   c:	4606      	mov	r6, r0
   e:	3301      	adds	r3, #1
  10:	f880 303a 	strb.w	r3, [r0, #58]	; 0x3a
  14:	7acb      	ldrb	r3, [r1, #11]
  16:	460c      	mov	r4, r1
  18:	2b17      	cmp	r3, #23
  1a:	d810      	bhi.n	3e <rfSaveData+0x3e>
  1c:	2001      	movs	r0, #1
  1e:	490d      	ldr	r1, [pc, #52]	; (54 <rfSaveData+0x54>)
  20:	f7ff fffe 	bl	0 <print>
  24:	2500      	movs	r5, #0
  26:	e007      	b.n	38 <rfSaveData+0x38>
  28:	1963      	adds	r3, r4, r5
  2a:	2001      	movs	r0, #1
  2c:	490a      	ldr	r1, [pc, #40]	; (58 <rfSaveData+0x58>)
  2e:	7b9a      	ldrb	r2, [r3, #14]
  30:	f7ff fffe 	bl	0 <print>
  34:	3501      	adds	r5, #1
  36:	b2ed      	uxtb	r5, r5
  38:	7ae3      	ldrb	r3, [r4, #11]
  3a:	42ab      	cmp	r3, r5
  3c:	d8f4      	bhi.n	28 <rfSaveData+0x28>
  3e:	7ae1      	ldrb	r1, [r4, #11]
  40:	4630      	mov	r0, r6
  42:	f104 020e 	add.w	r2, r4, #14
  46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  4a:	f7ff bffe 	b.w	0 <filePutBuffer>
  4e:	bf00      	nop
  50:	40003000 	.word	0x40003000
  54:	0000008c 	.word	0x0000008c
  58:	0000008e 	.word	0x0000008e

Disassembly of section .text.rfResend:

00000000 <rfResend>:
rfResend():
   0:	4770      	bx	lr

Disassembly of section .text.rfGetTX:

00000000 <rfGetTX>:
rfGetTX():
   0:	4b02      	ldr	r3, [pc, #8]	; (c <rfGetTX+0xc>)
   2:	6818      	ldr	r0, [r3, #0]
   4:	f000 0001 	and.w	r0, r0, #1
   8:	4770      	bx	lr
   a:	bf00      	nop
   c:	00000000 	.word	0x00000000

Disassembly of section .text.rfFlushTX:

00000000 <rfFlushTX>:
rfFlushTX():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4c05      	ldr	r4, [pc, #20]	; (18 <rfFlushTX+0x18>)
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	6165      	str	r5, [r4, #20]
   a:	4804      	ldr	r0, [pc, #16]	; (1c <rfFlushTX+0x1c>)
   c:	21e1      	movs	r1, #225	; 0xe1
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	6125      	str	r5, [r4, #16]
  14:	bd38      	pop	{r3, r4, r5, pc}
  16:	bf00      	nop
  18:	40011000 	.word	0x40011000
  1c:	00000000 	.word	0x00000000

Disassembly of section .text.rfFlushRX:

00000000 <rfFlushRX>:
rfFlushRX():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4c05      	ldr	r4, [pc, #20]	; (18 <rfFlushRX+0x18>)
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	6165      	str	r5, [r4, #20]
   a:	4804      	ldr	r0, [pc, #16]	; (1c <rfFlushRX+0x1c>)
   c:	21e2      	movs	r1, #226	; 0xe2
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	6125      	str	r5, [r4, #16]
  14:	bd38      	pop	{r3, r4, r5, pc}
  16:	bf00      	nop
  18:	40011000 	.word	0x40011000
  1c:	00000000 	.word	0x00000000

Disassembly of section .text.rfGetStatus:

00000000 <rfGetStatus>:
rfGetStatus():
   0:	4c04b538 	.word	0x4c04b538
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	6165      	str	r5, [r4, #20]
   a:	4803      	ldr	r0, [pc, #12]	; (18 <rfGetStatus+0x18>)
   c:	f7ff fffe 	bl	0 <spiReadByte>
  10:	6125      	str	r5, [r4, #16]
  12:	bd38      	pop	{r3, r4, r5, pc}
  14:	40011000 	.word	0x40011000
  18:	00000000 	.word	0x00000000

Disassembly of section .text.rfGetRXPayloadLen:

00000000 <rfGetRXPayloadLen>:
rfGetRXPayloadLen():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4c06      	ldr	r4, [pc, #24]	; (1c <rfGetRXPayloadLen+0x1c>)
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	2160      	movs	r1, #96	; 0x60
   a:	6165      	str	r5, [r4, #20]
   c:	4804      	ldr	r0, [pc, #16]	; (20 <rfGetRXPayloadLen+0x20>)
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	4803      	ldr	r0, [pc, #12]	; (10 <spiReadByte+0x10>)
  14:	f7ff fffe 	bl	0 <spiReadByte>
  18:	6125      	str	r5, [r4, #16]
  1a:	bd38      	pop	{r3, r4, r5, pc}
  1c:	40011000 	.word	0x40011000
  20:	00000000 	.word	0x00000000

Disassembly of section .text.rfIsRXFIFOEmpty:

00000000 <rfIsRXFIFOEmpty>:
rfIsRXFIFOEmpty():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4c07      	ldr	r4, [pc, #28]	; (20 <rfIsRXFIFOEmpty+0x20>)
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	2117      	movs	r1, #23
   a:	6165      	str	r5, [r4, #20]
   c:	4805      	ldr	r0, [pc, #20]	; (24 <rfIsRXFIFOEmpty+0x24>)
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	4804      	ldr	r0, [pc, #16]	; (14 <spiReadByte+0x14>)
  14:	f7ff fffe 	bl	0 <spiReadByte>
  18:	6125      	str	r5, [r4, #16]
  1a:	f000 0001 	and.w	r0, r0, #1
  1e:	bd38      	pop	{r3, r4, r5, pc}
  20:	40011000 	.word	0x40011000
  24:	00000000 	.word	0x00000000

Disassembly of section .text.rfClearStatus:

00000000 <rfClearStatus>:
rfClearStatus():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4c07      	ldr	r4, [pc, #28]	; (20 <rfClearStatus+0x20>)
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	4806      	ldr	r0, [pc, #24]	; (24 <rfClearStatus+0x24>)
   a:	2127      	movs	r1, #39	; 0x27
   c:	6165      	str	r5, [r4, #20]
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	4804      	ldr	r0, [pc, #16]	; (24 <rfClearStatus+0x24>)
  14:	2170      	movs	r1, #112	; 0x70
  16:	f7ff fffe 	bl	0 <spiWriteByte>
  1a:	6125      	str	r5, [r4, #16]
  1c:	bd38      	pop	{r3, r4, r5, pc}
  1e:	bf00      	nop
  20:	40011000 	.word	0x40011000
  24:	00000000 	.word	0x00000000

Disassembly of section .text.rfSetRX:

00000000 <rfSetRX>:
rfSetRX():
   0:	4b0c      	ldr	r3, [pc, #48]	; (34 <rfSetRX+0x34>)
   2:	b570      	push	{r4, r5, r6, lr}
   4:	681a      	ldr	r2, [r3, #0]
   6:	4c0c      	ldr	r4, [pc, #48]	; (38 <rfSetRX+0x38>)
   8:	f022 0201 	bic.w	r2, r2, #1
   c:	f44f 6580 	mov.w	r5, #1024	; 0x400
  10:	f44f 6600 	mov.w	r6, #2048	; 0x800
  14:	601a      	str	r2, [r3, #0]
  16:	2120      	movs	r1, #32
  18:	6165      	str	r5, [r4, #20]
  1a:	4808      	ldr	r0, [pc, #32]	; (3c <rfSetRX+0x3c>)
  1c:	6166      	str	r6, [r4, #20]
  1e:	f7ff fffe 	bl	0 <spiWriteByte>
  22:	4806      	ldr	r0, [pc, #24]	; (3c <rfSetRX+0x3c>)
  24:	213b      	movs	r1, #59	; 0x3b
  26:	f7ff fffe 	bl	0 <spiWriteByte>
  2a:	6126      	str	r6, [r4, #16]
  2c:	f7ff fffe 	bl	0 <rfSetRX>
  30:	6125      	str	r5, [r4, #16]
  32:	bd70      	pop	{r4, r5, r6, pc}
  34:	00000000 	.word	0x00000000
  38:	40011000 	.word	0x40011000
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.rfSetTX:

00000000 <rfSetTX>:
rfSetTX():
   0:	4b0c      	ldr	r3, [pc, #48]	; (34 <rfSetTX+0x34>)
   2:	b570      	push	{r4, r5, r6, lr}
   4:	681a      	ldr	r2, [r3, #0]
   6:	4c0c      	ldr	r4, [pc, #48]	; (38 <rfSetTX+0x38>)
   8:	f042 0201 	orr.w	r2, r2, #1
   c:	f44f 6580 	mov.w	r5, #1024	; 0x400
  10:	f44f 6600 	mov.w	r6, #2048	; 0x800
  14:	601a      	str	r2, [r3, #0]
  16:	2120      	movs	r1, #32
  18:	6165      	str	r5, [r4, #20]
  1a:	4808      	ldr	r0, [pc, #32]	; (3c <rfSetTX+0x3c>)
  1c:	6166      	str	r6, [r4, #20]
  1e:	f7ff fffe 	bl	0 <spiWriteByte>
  22:	4806      	ldr	r0, [pc, #24]	; (3c <rfSetTX+0x3c>)
  24:	213a      	movs	r1, #58	; 0x3a
  26:	f7ff fffe 	bl	0 <spiWriteByte>
  2a:	6126      	str	r6, [r4, #16]
  2c:	f7ff fffe 	bl	0 <rfSetTX>
  30:	6125      	str	r5, [r4, #16]
  32:	bd70      	pop	{r4, r5, r6, pc}
  34:	00000000 	.word	0x00000000
  38:	40011000 	.word	0x40011000
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.rfPutTXBuffer:

00000000 <rfPutTXBuffer>:
rfPutTXBuffer():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460d      	mov	r5, r1
   4:	4606      	mov	r6, r0
   6:	f7ff fffe 	bl	0 <rfPutTXBuffer>
   a:	4b1c      	ldr	r3, [pc, #112]	; (7c <rfPutTXBuffer+0x7c>)
   c:	f44f 6200 	mov.w	r2, #2048	; 0x800
  10:	615a      	str	r2, [r3, #20]
  12:	481b      	ldr	r0, [pc, #108]	; (80 <rfPutTXBuffer+0x80>)
  14:	21a0      	movs	r1, #160	; 0xa0
  16:	f7ff fffe 	bl	0 <spiWriteByte>
  1a:	2400      	movs	r4, #0
  1c:	e01c      	b.n	58 <rfPutTXBuffer+0x58>
  1e:	2c20      	cmp	r4, #32
  20:	d113      	bne.n	4a <rfPutTXBuffer+0x4a>
  22:	4b16      	ldr	r3, [pc, #88]	; (7c <rfPutTXBuffer+0x7c>)
  24:	f44f 6200 	mov.w	r2, #2048	; 0x800
  28:	611a      	str	r2, [r3, #16]
  2a:	f7ff fffe 	bl	0 <rfPutTXBuffer>
  2e:	f010 0f20 	tst.w	r0, #32
  32:	d0fa      	beq.n	fffffff8 <rfGetID+0xfffffff8>
  34:	f7ff fffe 	bl	0 <rfPutTXBuffer>
  38:	4b10      	ldr	r3, [pc, #64]	; (7c <rfPutTXBuffer+0x7c>)
  3a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  3e:	615a      	str	r2, [r3, #20]
  40:	480f      	ldr	r0, [pc, #60]	; (80 <rfPutTXBuffer+0x80>)
  42:	21a0      	movs	r1, #160	; 0xa0
  44:	f7ff fffe 	bl	0 <spiWriteByte>
  48:	2400      	movs	r4, #0
  4a:	480d      	ldr	r0, [pc, #52]	; (80 <rfPutTXBuffer+0x80>)
  4c:	f815 1b01 	ldrb.w	r1, [r5], #1
  50:	f7ff fffe 	bl	0 <spiWriteByte>
  54:	3401      	adds	r4, #1
  56:	b2e4      	uxtb	r4, r4
  58:	42b4      	cmp	r4, r6
  5a:	d3e0      	bcc.n	1e <rfPutTXBuffer+0x1e>
  5c:	4b07      	ldr	r3, [pc, #28]	; (7c <rfPutTXBuffer+0x7c>)
  5e:	f44f 6200 	mov.w	r2, #2048	; 0x800
  62:	611a      	str	r2, [r3, #16]
  64:	f7ff fffe 	bl	0 <rfPutTXBuffer>
  68:	f010 0f20 	tst.w	r0, #32
  6c:	d0fa      	beq.n	fffffff8 <rfGetID+0xfffffff8>
  6e:	f7ff fffe 	bl	0 <rfPutTXBuffer>
  72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  76:	f7ff bffe 	b.w	0 <rfPutTXBuffer>
  7a:	bf00      	nop
  7c:	40011000 	.word	0x40011000
  80:	00000000 	.word	0x00000000

Disassembly of section .text.rfSendNack:

00000000 <rfSendNack>:
rfSendNack():
   0:	f64a4b13 	.word	0xf64a4b13
   4:	22aa      	movs	r2, #170	; 0xaa
   6:	b570      	push	{r4, r5, r6, lr}
   8:	601a      	str	r2, [r3, #0]
   a:	4604      	mov	r4, r0
   c:	f7ff fffe 	bl	0 <timeGet>
  10:	f104 053c 	add.w	r5, r4, #60	; 0x3c
  14:	26a0      	movs	r6, #160	; 0xa0
  16:	2201      	movs	r2, #1
  18:	62e0      	str	r0, [r4, #44]	; 0x2c
  1a:	4629      	mov	r1, r5
  1c:	6b20      	ldr	r0, [r4, #48]	; 0x30
  1e:	f884 6038 	strb.w	r6, [r4, #56]	; 0x38
  22:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  26:	f894 303a 	ldrb.w	r3, [r4, #58]	; 0x3a
  2a:	2106      	movs	r1, #6
  2c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  30:	f884 6040 	strb.w	r6, [r4, #64]	; 0x40
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <sysCRC16>
  3a:	f104 0142 	add.w	r1, r4, #66	; 0x42
  3e:	2201      	movs	r2, #1
  40:	f7ff fffe 	bl	0 <convertU16ToBuffer>
  44:	2008      	movs	r0, #8
  46:	4629      	mov	r1, r5
  48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  4c:	f7ff bffe 	b.w	0 <rfSendNack>
  50:	40003000 	.word	0x40003000

Disassembly of section .text.rfSendAck:

00000000 <rfSendAck>:
rfSendAck():
   0:	4b13      	ldr	r3, [pc, #76]	; (50 <rfSendAck+0x50>)
   2:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   6:	b570      	push	{r4, r5, r6, lr}
   8:	601a      	str	r2, [r3, #0]
   a:	4604      	mov	r4, r0
   c:	f7ff fffe 	bl	0 <timeGet>
  10:	f104 053c 	add.w	r5, r4, #60	; 0x3c
  14:	2680      	movs	r6, #128	; 0x80
  16:	2201      	movs	r2, #1
  18:	62e0      	str	r0, [r4, #44]	; 0x2c
  1a:	4629      	mov	r1, r5
  1c:	6b20      	ldr	r0, [r4, #48]	; 0x30
  1e:	f884 6038 	strb.w	r6, [r4, #56]	; 0x38
  22:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  26:	f894 303a 	ldrb.w	r3, [r4, #58]	; 0x3a
  2a:	2106      	movs	r1, #6
  2c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  30:	f884 6040 	strb.w	r6, [r4, #64]	; 0x40
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <sysCRC16>
  3a:	f104 0142 	add.w	r1, r4, #66	; 0x42
  3e:	2201      	movs	r2, #1
  40:	f7ff fffe 	bl	0 <convertU16ToBuffer>
  44:	2008      	movs	r0, #8
  46:	4629      	mov	r1, r5
  48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  4c:	f7ff bffe 	b.w	0 <rfSendAck>
  50:	40003000 	.word	0x40003000

Disassembly of section .text.rfSendClose:

00000000 <rfSendClose>:
rfSendClose():
   0:	4b13      	ldr	r3, [pc, #76]	; (50 <rfSendClose+0x50>)
   2:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   6:	b570      	push	{r4, r5, r6, lr}
   8:	601a      	str	r2, [r3, #0]
   a:	4604      	mov	r4, r0
   c:	f7ff fffe 	bl	0 <timeGet>
  10:	f104 053c 	add.w	r5, r4, #60	; 0x3c
  14:	2640      	movs	r6, #64	; 0x40
  16:	2201      	movs	r2, #1
  18:	62e0      	str	r0, [r4, #44]	; 0x2c
  1a:	4629      	mov	r1, r5
  1c:	6b20      	ldr	r0, [r4, #48]	; 0x30
  1e:	f884 6038 	strb.w	r6, [r4, #56]	; 0x38
  22:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  26:	f894 303a 	ldrb.w	r3, [r4, #58]	; 0x3a
  2a:	2106      	movs	r1, #6
  2c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  30:	f884 6040 	strb.w	r6, [r4, #64]	; 0x40
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <sysCRC16>
  3a:	f104 0142 	add.w	r1, r4, #66	; 0x42
  3e:	2201      	movs	r2, #1
  40:	f7ff fffe 	bl	0 <convertU16ToBuffer>
  44:	2008      	movs	r0, #8
  46:	4629      	mov	r1, r5
  48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  4c:	f7ff bffe 	b.w	0 <rfSendClose>
  50:	40003000 	.word	0x40003000

Disassembly of section .text.rfSendData:

00000000 <rfSendData>:
rfSendData():
   0:	4b20      	ldr	r3, [pc, #128]	; (84 <rfSendData+0x84>)
   2:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   6:	b570      	push	{r4, r5, r6, lr}
   8:	601a      	str	r2, [r3, #0]
   a:	4604      	mov	r4, r0
   c:	f7ff fffe 	bl	0 <timeGet>
  10:	2118      	movs	r1, #24
  12:	62e0      	str	r0, [r4, #44]	; 0x2c
  14:	f104 0242 	add.w	r2, r4, #66	; 0x42
  18:	4620      	mov	r0, r4
  1a:	f7ff fffe 	bl	0 <fileGetBuffer>
  1e:	2360      	movs	r3, #96	; 0x60
  20:	b2c0      	uxtb	r0, r0
  22:	f884 003b 	strb.w	r0, [r4, #59]	; 0x3b
  26:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
  2a:	b920      	cbnz	r0, 36 <rfSendData+0x36>
  2c:	4620      	mov	r0, r4
  2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  32:	f7ff bffe 	b.w	0 <rfSendData>
  36:	f104 053c 	add.w	r5, r4, #60	; 0x3c
  3a:	f040 0060 	orr.w	r0, r0, #96	; 0x60
  3e:	2201      	movs	r2, #1
  40:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  44:	4629      	mov	r1, r5
  46:	6b20      	ldr	r0, [r4, #48]	; 0x30
  48:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  4c:	f894 303a 	ldrb.w	r3, [r4, #58]	; 0x3a
  50:	f894 103b 	ldrb.w	r1, [r4, #59]	; 0x3b
  54:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  58:	3301      	adds	r3, #1
  5a:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
  5e:	3106      	adds	r1, #6
  60:	4628      	mov	r0, r5
  62:	f7ff fffe 	bl	0 <sysCRC16>
  66:	f894 103b 	ldrb.w	r1, [r4, #59]	; 0x3b
  6a:	2201      	movs	r2, #1
  6c:	1861      	adds	r1, r4, r1
  6e:	3142      	adds	r1, #66	; 0x42
  70:	f7ff fffe 	bl	0 <convertU16ToBuffer>
  74:	f894 003b 	ldrb.w	r0, [r4, #59]	; 0x3b
  78:	4629      	mov	r1, r5
  7a:	3008      	adds	r0, #8
  7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  80:	f7ff bffe 	b.w	0 <rfSendData>
  84:	40003000 	.word	0x40003000

Disassembly of section .text.rfSocketHandler:

00000000 <rfSocketHandler>:
rfSocketHandler():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4b3c      	ldr	r3, [pc, #240]	; (f4 <rfSocketHandler+0xf4>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	601a      	str	r2, [r3, #0]
   a:	7a83      	ldrb	r3, [r0, #10]
   c:	4605      	mov	r5, r0
   e:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
  12:	2b20      	cmp	r3, #32
  14:	d12d      	bne.n	72 <rfSocketHandler+0x72>
  16:	6843      	ldr	r3, [r0, #4]
  18:	6806      	ldr	r6, [r0, #0]
  1a:	6003      	str	r3, [r0, #0]
  1c:	f7ff fffe 	bl	0 <rfSocketHandler>
  20:	4604      	mov	r4, r0
  22:	2800      	cmp	r0, #0
  24:	d064      	beq.n	f0 <rfSocketHandler+0xf0>
  26:	6346      	str	r6, [r0, #52]	; 0x34
  28:	f7ff fffe 	bl	0 <timeGet>
  2c:	62e0      	str	r0, [r4, #44]	; 0x2c
  2e:	7b6b      	ldrb	r3, [r5, #13]
  30:	f003 027f 	and.w	r2, r3, #127	; 0x7f
  34:	2a02      	cmp	r2, #2
  36:	d11c      	bne.n	72 <rfSocketHandler+0x72>
  38:	f013 0f80 	tst.w	r3, #128	; 0x80
  3c:	f105 010e 	add.w	r1, r5, #14
  40:	d009      	beq.n	56 <rfSocketHandler+0x56>
  42:	4620      	mov	r0, r4
  44:	3a01      	subs	r2, #1
  46:	f7ff fffe 	bl	0 <fileOpen>
  4a:	4606      	mov	r6, r0
  4c:	b160      	cbz	r0, 68 <rfSocketHandler+0x68>
  4e:	4620      	mov	r0, r4
  50:	f7ff fffe 	bl	0 <rfSocketHandler>
  54:	e00d      	b.n	72 <rfSocketHandler+0x72>
  56:	4620      	mov	r0, r4
  58:	f7ff fffe 	bl	0 <fileOpen>
  5c:	4606      	mov	r6, r0
  5e:	b118      	cbz	r0, 68 <rfSocketHandler+0x68>
  60:	4620      	mov	r0, r4
  62:	f7ff fffe 	bl	0 <rfSocketHandler>
  66:	e004      	b.n	72 <rfSocketHandler+0x72>
  68:	4620      	mov	r0, r4
  6a:	f7ff fffe 	bl	0 <rfSocketHandler>
  6e:	4634      	mov	r4, r6
  70:	e03e      	b.n	f0 <rfSocketHandler+0xf0>
  72:	6b61      	ldr	r1, [r4, #52]	; 0x34
  74:	6828      	ldr	r0, [r5, #0]
  76:	f7ff fffe 	bl	0 <rfSocketHandler>
  7a:	4604      	mov	r4, r0
  7c:	2800      	cmp	r0, #0
  7e:	d037      	beq.n	f0 <rfSocketHandler+0xf0>
  80:	7aab      	ldrb	r3, [r5, #10]
  82:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
  86:	2b40      	cmp	r3, #64	; 0x40
  88:	d107      	bne.n	9a <rfSocketHandler+0x9a>
  8a:	2001      	movs	r0, #1
  8c:	491a      	ldr	r1, [pc, #104]	; (f8 <rfSocketHandler+0xf8>)
  8e:	f7ff fffe 	bl	0 <print>
  92:	4620      	mov	r0, r4
  94:	f7ff fffe 	bl	0 <rfSocketHandler>
  98:	e023      	b.n	e2 <rfSocketHandler+0xe2>
  9a:	2b60      	cmp	r3, #96	; 0x60
  9c:	d10f      	bne.n	be <rfSocketHandler+0xbe>
  9e:	4629      	mov	r1, r5
  a0:	f7ff fffe 	bl	0 <rfSocketHandler>
  a4:	b938      	cbnz	r0, b6 <rfSocketHandler+0xb6>
  a6:	3001      	adds	r0, #1
  a8:	4914      	ldr	r1, [pc, #80]	; (fc <rfSocketHandler+0xfc>)
  aa:	f7ff fffe 	bl	0 <print>
  ae:	4620      	mov	r0, r4
  b0:	f7ff fffe 	bl	0 <rfSocketHandler>
  b4:	e01b      	b.n	ee <rfSocketHandler+0xee>
  b6:	4620      	mov	r0, r4
  b8:	f7ff fffe 	bl	0 <rfSocketHandler>
  bc:	e017      	b.n	ee <rfSocketHandler+0xee>
  be:	2b80      	cmp	r3, #128	; 0x80
  c0:	d115      	bne.n	ee <rfSocketHandler+0xee>
  c2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
  c6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  ca:	2b02      	cmp	r3, #2
  cc:	d10f      	bne.n	ee <rfSocketHandler+0xee>
  ce:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
  d2:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
  d6:	2b40      	cmp	r3, #64	; 0x40
  d8:	d107      	bne.n	ea <rfSocketHandler+0xea>
  da:	2001      	movs	r0, #1
  dc:	4908      	ldr	r1, [pc, #32]	; (100 <rfSocketHandler+0x100>)
  de:	f7ff fffe 	bl	0 <print>
  e2:	4620      	mov	r0, r4
  e4:	f7ff fffe 	bl	0 <rfSocketHandler>
  e8:	e001      	b.n	6 <rfSocketHandler+0x6>
  ea:	f7ff fffe 	bl	0 <rfSocketHandler>
  ee:	2401      	movs	r4, #1
  f0:	4620      	mov	r0, r4
  f2:	bd70      	pop	{r4, r5, r6, pc}
  f4:	40003000 	.word	0x40003000
  f8:	00000096 	.word	0x00000096
  fc:	000000ae 	.word	0x000000ae
 100:	000000b8 	.word	0x000000b8

Disassembly of section .text.rfFile:

00000000 <rfFile>:
rfFile():
   0:	e92d4b26 	.word	0xe92d4b26
   4:	41f0      	rors	r0, r6
   6:	4690      	mov	r8, r2
   8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   c:	4604      	mov	r4, r0
   e:	601a      	str	r2, [r3, #0]
  10:	4608      	mov	r0, r1
  12:	460f      	mov	r7, r1
  14:	f7ff fffe 	bl	0 <len>
  18:	3001      	adds	r0, #1
  1a:	b2c5      	uxtb	r5, r0
  1c:	f7ff fffe 	bl	0 <timeGet>
  20:	f104 063c 	add.w	r6, r4, #60	; 0x3c
  24:	62e0      	str	r0, [r4, #44]	; 0x2c
  26:	4631      	mov	r1, r6
  28:	6b20      	ldr	r0, [r4, #48]	; 0x30
  2a:	2201      	movs	r2, #1
  2c:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  30:	1d6b      	adds	r3, r5, #5
  32:	f043 0320 	orr.w	r3, r3, #32
  36:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
  3a:	f894 303a 	ldrb.w	r3, [r4, #58]	; 0x3a
  3e:	f048 0802 	orr.w	r8, r8, #2
  42:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  46:	4b16      	ldr	r3, [pc, #88]	; (a0 <rfFile+0xa0>)
  48:	f884 8042 	strb.w	r8, [r4, #66]	; 0x42
  4c:	681b      	ldr	r3, [r3, #0]
  4e:	f894 0030 	ldrb.w	r0, [r4, #48]	; 0x30
  52:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
  56:	4318      	orrs	r0, r3
  58:	2201      	movs	r2, #1
  5a:	f104 0143 	add.w	r1, r4, #67	; 0x43
  5e:	f7ff fffe 	bl	0 <convertU32ToBuffer>
  62:	4622      	mov	r2, r4
  64:	2300      	movs	r3, #0
  66:	e003      	b.n	70 <rfFile+0x70>
  68:	5cf9      	ldrb	r1, [r7, r3]
  6a:	3301      	adds	r3, #1
  6c:	f882 1046 	strb.w	r1, [r2, #70]	; 0x46
  70:	b2d9      	uxtb	r1, r3
  72:	3201      	adds	r2, #1
  74:	42a9      	cmp	r1, r5
  76:	d3f7      	bcc.n	68 <rfFile+0x68>
  78:	f105 010b 	add.w	r1, r5, #11
  7c:	4630      	mov	r0, r6
  7e:	f7ff fffe 	bl	0 <sysCRC16>
  82:	1961      	adds	r1, r4, r5
  84:	3147      	adds	r1, #71	; 0x47
  86:	2201      	movs	r2, #1
  88:	f7ff fffe 	bl	0 <convertU16ToBuffer>
  8c:	f105 000d 	add.w	r0, r5, #13
  90:	4631      	mov	r1, r6
  92:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  96:	f7ff bffe 	b.w	0 <rfFile>
  9a:	bf00      	nop
  9c:	40003000 	.word	0x40003000
  a0:	00000000 	.word	0x00000000

Disassembly of section .text.rfRequestFile:

00000000 <rfRequestFile>:
rfRequestFile():
   0:	4b0fb530 	.word	0x4b0fb530
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	b08b      	sub	sp, #44	; 0x2c
   a:	4605      	mov	r5, r0
   c:	601a      	str	r2, [r3, #0]
   e:	4668      	mov	r0, sp
  10:	2202      	movs	r2, #2
  12:	460c      	mov	r4, r1
  14:	f7ff fffe 	bl	0 <fileOpen>
  18:	b180      	cbz	r0, 3c <rfRequestFile+0x3c>
  1a:	4628      	mov	r0, r5
  1c:	2182      	movs	r1, #130	; 0x82
  1e:	f7ff fffe 	bl	0 <rfRequestFile>
  22:	4605      	mov	r5, r0
  24:	b150      	cbz	r0, 3c <rfRequestFile+0x3c>
  26:	4668      	mov	r0, sp
  28:	4629      	mov	r1, r5
  2a:	f7ff fffe 	bl	0 <fileCopyHandle>
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	2280      	movs	r2, #128	; 0x80
  34:	f7ff fffe 	bl	0 <rfRequestFile>
  38:	2001      	movs	r0, #1
  3a:	e7ff      	b.n	3c <rfRequestFile+0x3c>
  3c:	b00b      	add	sp, #44	; 0x2c
  3e:	bd30      	pop	{r4, r5, pc}
  40:	40003000 	.word	0x40003000

Disassembly of section .text.rfSendFile:

00000000 <rfSendFile>:
rfSendFile():
   0:	b530      	push	{r4, r5, lr}
   2:	4b0f      	ldr	r3, [pc, #60]	; (40 <rfSendFile+0x40>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	b08b      	sub	sp, #44	; 0x2c
   a:	4605      	mov	r5, r0
   c:	601a      	str	r2, [r3, #0]
   e:	4668      	mov	r0, sp
  10:	2201      	movs	r2, #1
  12:	460c      	mov	r4, r1
  14:	f7ff fffe 	bl	0 <fileOpen>
  18:	b180      	cbz	r0, 3c <rfSendFile+0x3c>
  1a:	4628      	mov	r0, r5
  1c:	2102      	movs	r1, #2
  1e:	f7ff fffe 	bl	0 <rfSendFile>
  22:	4605      	mov	r5, r0
  24:	b150      	cbz	r0, 3c <rfSendFile+0x3c>
  26:	4668      	mov	r0, sp
  28:	4629      	mov	r1, r5
  2a:	f7ff fffe 	bl	0 <fileCopyHandle>
  2e:	4628      	mov	r0, r5
  30:	4621      	mov	r1, r4
  32:	2200      	movs	r2, #0
  34:	f7ff fffe 	bl	0 <rfSendFile>
  38:	2001      	movs	r0, #1
  3a:	e7ff      	b.n	3c <rfSendFile+0x3c>
  3c:	b00b      	add	sp, #44	; 0x2c
  3e:	bd30      	pop	{r4, r5, pc}
  40:	40003000 	.word	0x40003000

Disassembly of section .text.rfGetSignalQuality:

00000000 <rfGetSignalQuality>:
rfGetSignalQuality():
   0:	4c09b570 	.word	0x4c09b570
   4:	f44f 6500 	mov.w	r5, #2048	; 0x800
   8:	2108      	movs	r1, #8
   a:	6165      	str	r5, [r4, #20]
   c:	4807      	ldr	r0, [pc, #28]	; (2c <rfGetSignalQuality+0x2c>)
   e:	f7ff fffe 	bl	0 <spiWriteByte>
  12:	4806      	ldr	r0, [pc, #24]	; (1c <spiReadByte+0x1c>)
  14:	f7ff fffe 	bl	0 <spiReadByte>
  18:	6125      	str	r5, [r4, #16]
  1a:	4606      	mov	r6, r0
  1c:	f7ff fffe 	bl	0 <rfGetSignalQuality>
  20:	43f0      	mvns	r0, r6
  22:	f000 000f 	and.w	r0, r0, #15
  26:	bd70      	pop	{r4, r5, r6, pc}
  28:	40011000 	.word	0x40011000
  2c:	00000000 	.word	0x00000000

Disassembly of section .text.rfRX:

00000000 <rfRX>:
rfRX():
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	4b3e      	ldr	r3, [pc, #248]	; (fc <rfRX+0xfc>)
   4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
   8:	b093      	sub	sp, #76	; 0x4c
   a:	601a      	str	r2, [r3, #0]
   c:	f7ff fffe 	bl	0 <rfRX>
  10:	f010 0f40 	tst.w	r0, #64	; 0x40
  14:	4604      	mov	r4, r0
  16:	d069      	beq.n	ec <rfRX+0xec>
  18:	f000 030e 	and.w	r3, r0, #14
  1c:	2b0e      	cmp	r3, #14
  1e:	d06a      	beq.n	f6 <rfRX+0xf6>
  20:	f7ff fffe 	bl	0 <rfRX>
  24:	4b36      	ldr	r3, [pc, #216]	; (100 <rfRX+0x100>)
  26:	f44f 6200 	mov.w	r2, #2048	; 0x800
  2a:	4605      	mov	r5, r0
  2c:	615a      	str	r2, [r3, #20]
  2e:	4835      	ldr	r0, [pc, #212]	; (104 <rfRX+0x104>)
  30:	2161      	movs	r1, #97	; 0x61
  32:	f7ff fffe 	bl	0 <spiWriteByte>
  36:	f10d 0727 	add.w	r7, sp, #39	; 0x27
  3a:	2600      	movs	r6, #0
  3c:	e009      	b.n	52 <rfRX+0x52>
  3e:	4831      	ldr	r0, [pc, #196]	; (104 <rfRX+0x104>)
  40:	f7ff fffe 	bl	0 <spiReadByte>
  44:	f807 0f01 	strb.w	r0, [r7, #1]!
  48:	2064      	movs	r0, #100	; 0x64
  4a:	f7ff fffe 	bl	0 <delay>
  4e:	3601      	adds	r6, #1
  50:	b2f6      	uxtb	r6, r6
  52:	42ae      	cmp	r6, r5
  54:	d3f3      	bcc.n	3e <rfRX+0x3e>
  56:	4b2a      	ldr	r3, [pc, #168]	; (100 <rfRX+0x100>)
  58:	f44f 6200 	mov.w	r2, #2048	; 0x800
  5c:	611a      	str	r2, [r3, #16]
  5e:	a80a      	add	r0, sp, #40	; 0x28
  60:	f7ff fffe 	bl	0 <convertBufferToU32>
  64:	9000      	str	r0, [sp, #0]
  66:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
  6a:	f020 031f 	bic.w	r3, r0, #31
  6e:	f88d 300a 	strb.w	r3, [sp, #10]
  72:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
  76:	f000 001f 	and.w	r0, r0, #31
  7a:	f88d 000b 	strb.w	r0, [sp, #11]
  7e:	f88d 300c 	strb.w	r3, [sp, #12]
  82:	3006      	adds	r0, #6
  84:	ab0a      	add	r3, sp, #40	; 0x28
  86:	1818      	adds	r0, r3, r0
  88:	f7ff fffe 	bl	0 <convertBufferToU16>
  8c:	f89d 100b 	ldrb.w	r1, [sp, #11]
  90:	f8ad 0008 	strh.w	r0, [sp, #8]
  94:	3106      	adds	r1, #6
  96:	a80a      	add	r0, sp, #40	; 0x28
  98:	f7ff fffe 	bl	0 <sysCRC16>
  9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
  a0:	4283      	cmp	r3, r0
  a2:	d128      	bne.n	f6 <rfRX+0xf6>
  a4:	f89d 300a 	ldrb.w	r3, [sp, #10]
  a8:	2b20      	cmp	r3, #32
  aa:	d10b      	bne.n	c4 <rfRX+0xc4>
  ac:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
  b0:	f10d 002f 	add.w	r0, sp, #47	; 0x2f
  b4:	f88d 300d 	strb.w	r3, [sp, #13]
  b8:	f7ff fffe 	bl	0 <convertBufferToU32>
  bc:	f10d 0133 	add.w	r1, sp, #51	; 0x33
  c0:	9001      	str	r0, [sp, #4]
  c2:	e001      	b.n	c8 <rfRX+0xc8>
  c4:	f10d 012e 	add.w	r1, sp, #46	; 0x2e
  c8:	f89d 000b 	ldrb.w	r0, [sp, #11]
  cc:	f10d 020d 	add.w	r2, sp, #13
  d0:	2300      	movs	r3, #0
  d2:	e003      	b.n	dc <rfRX+0xdc>
  d4:	5ccd      	ldrb	r5, [r1, r3]
  d6:	3301      	adds	r3, #1
  d8:	f802 5f01 	strb.w	r5, [r2, #1]!
  dc:	b2dd      	uxtb	r5, r3
  de:	4285      	cmp	r5, r0
  e0:	d3f8      	bcc.n	d4 <rfRX+0xd4>
  e2:	4668      	mov	r0, sp
  e4:	f7ff fffe 	bl	0 <rfRX>
  e8:	f7ff fffe 	bl	0 <rfRX>
  ec:	f014 0f20 	tst.w	r4, #32
  f0:	d001      	beq.n	6 <rfRX+0x6>
  f2:	f7ff fffe 	bl	0 <rfRX>
  f6:	b013      	add	sp, #76	; 0x4c
  f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  fa:	bf00      	nop
  fc:	40003000 	.word	0x40003000
 100:	40011000 	.word	0x40011000
 104:	00000000 	.word	0x00000000

Disassembly of section .text.rfWriteAddress:

00000000 <rfWriteAddress>:
rfWriteAddress():
   0:	4b0bb538 	.word	0x4b0bb538
   4:	f44f 6200 	mov.w	r2, #2048	; 0x800
   8:	460d      	mov	r5, r1
   a:	615a      	str	r2, [r3, #20]
   c:	f040 0120 	orr.w	r1, r0, #32
  10:	4808      	ldr	r0, [pc, #32]	; (24 <spiWriteByte+0x24>)
  12:	f7ff fffe 	bl	0 <spiWriteByte>
  16:	1d6c      	adds	r4, r5, #5
  18:	f814 1d01 	ldrb.w	r1, [r4, #-1]!
  1c:	4805      	ldr	r0, [pc, #20]	; (18 <spiWriteByte+0x18>)
  1e:	f7ff fffe 	bl	0 <spiWriteByte>
  22:	42ac      	cmp	r4, r5
  24:	d1f8      	bne.n	18 <rfWriteAddress+0x18>
  26:	4b02      	ldr	r3, [pc, #8]	; (30 <rfWriteAddress+0x30>)
  28:	f44f 6200 	mov.w	r2, #2048	; 0x800
  2c:	611a      	str	r2, [r3, #16]
  2e:	bd38      	pop	{r3, r4, r5, pc}
  30:	40011000 	.word	0x40011000
  34:	00000000 	.word	0x00000000

Disassembly of section .text.rfInit:

00000000 <rfInit>:
rfInit():
   0:	b537      	push	{r0, r1, r2, r4, r5, lr}
   2:	f7ff fffe 	bl	0 <sysGetID>
   6:	2101      	movs	r1, #1
   8:	4605      	mov	r5, r0
   a:	4a33      	ldr	r2, [pc, #204]	; (d8 <rfInit+0xd8>)
   c:	2000      	movs	r0, #0
   e:	f7ff fffe 	bl	0 <pdiaEncode>
  12:	2400      	movs	r4, #0
  14:	5d28      	ldrb	r0, [r5, r4]
  16:	2102      	movs	r1, #2
  18:	4a2f      	ldr	r2, [pc, #188]	; (d8 <rfInit+0xd8>)
  1a:	3401      	adds	r4, #1
  1c:	f7ff fffe 	bl	0 <pdiaEncode>
  20:	2c0c      	cmp	r4, #12
  22:	d1f7      	bne.n	14 <rfInit+0x14>
  24:	2104      	movs	r1, #4
  26:	2000      	movs	r0, #0
  28:	4a2b      	ldr	r2, [pc, #172]	; (d8 <rfInit+0xd8>)
  2a:	f7ff fffe 	bl	0 <pdiaEncode>
  2e:	2312      	movs	r3, #18
  30:	222c      	movs	r2, #44	; 0x2c
  32:	9300      	str	r3, [sp, #0]
  34:	212b      	movs	r1, #43	; 0x2b
  36:	3b01      	subs	r3, #1
  38:	4828      	ldr	r0, [pc, #160]	; (dc <rfInit+0xdc>)
  3a:	4c29      	ldr	r4, [pc, #164]	; (e0 <rfInit+0xe0>)
  3c:	f7ff fffe 	bl	0 <spiConfig>
  40:	202a      	movs	r0, #42	; 0x2a
  42:	2103      	movs	r1, #3
  44:	f7ff fffe 	bl	0 <pinConfig>
  48:	f44f 6380 	mov.w	r3, #1024	; 0x400
  4c:	6163      	str	r3, [r4, #20]
  4e:	2029      	movs	r0, #41	; 0x29
  50:	2118      	movs	r1, #24
  52:	f44f 6500 	mov.w	r5, #2048	; 0x800
  56:	f7ff fffe 	bl	0 <pinConfig>
  5a:	2201      	movs	r2, #1
  5c:	2303      	movs	r3, #3
  5e:	2129      	movs	r1, #41	; 0x29
  60:	4820      	ldr	r0, [pc, #128]	; (e4 <rfInit+0xe4>)
  62:	f7ff fffe 	bl	0 <pinInterrupt>
  66:	2122      	movs	r1, #34	; 0x22
  68:	6165      	str	r5, [r4, #20]
  6a:	481c      	ldr	r0, [pc, #112]	; (dc <rfInit+0xdc>)
  6c:	f7ff fffe 	bl	0 <spiWriteByte>
  70:	2101      	movs	r1, #1
  72:	481a      	ldr	r0, [pc, #104]	; (dc <rfInit+0xdc>)
  74:	f7ff fffe 	bl	0 <spiWriteByte>
  78:	6125      	str	r5, [r4, #16]
  7a:	213c      	movs	r1, #60	; 0x3c
  7c:	6165      	str	r5, [r4, #20]
  7e:	4817      	ldr	r0, [pc, #92]	; (dc <rfInit+0xdc>)
  80:	f7ff fffe 	bl	0 <spiWriteByte>
  84:	2101      	movs	r1, #1
  86:	4815      	ldr	r0, [pc, #84]	; (dc <rfInit+0xdc>)
  88:	f7ff fffe 	bl	0 <spiWriteByte>
  8c:	6125      	str	r5, [r4, #16]
  8e:	213d      	movs	r1, #61	; 0x3d
  90:	6165      	str	r5, [r4, #20]
  92:	4812      	ldr	r0, [pc, #72]	; (dc <rfInit+0xdc>)
  94:	f7ff fffe 	bl	0 <spiWriteByte>
  98:	2104      	movs	r1, #4
  9a:	4810      	ldr	r0, [pc, #64]	; (dc <rfInit+0xdc>)
  9c:	f7ff fffe 	bl	0 <spiWriteByte>
  a0:	6125      	str	r5, [r4, #16]
  a2:	2121      	movs	r1, #33	; 0x21
  a4:	6165      	str	r5, [r4, #20]
  a6:	480d      	ldr	r0, [pc, #52]	; (dc <rfInit+0xdc>)
  a8:	f7ff fffe 	bl	0 <spiWriteByte>
  ac:	480b      	ldr	r0, [pc, #44]	; (dc <rfInit+0xdc>)
  ae:	2101      	movs	r1, #1
  b0:	f7ff fffe 	bl	0 <spiWriteByte>
  b4:	6125      	str	r5, [r4, #16]
  b6:	f7ff fffe 	bl	0 <rfInit>
  ba:	f7ff fffe 	bl	0 <rfInit>
  be:	2010      	movs	r0, #16
  c0:	4909      	ldr	r1, [pc, #36]	; (e8 <rfInit+0xe8>)
  c2:	f7ff fffe 	bl	0 <rfInit>
  c6:	200a      	movs	r0, #10
  c8:	4907      	ldr	r1, [pc, #28]	; (e8 <rfInit+0xe8>)
  ca:	f7ff fffe 	bl	0 <rfInit>
  ce:	b003      	add	sp, #12
  d0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  d4:	f7ff bffe 	b.w	0 <rfInit>
	...
  e0:	40011000 	.word	0x40011000
	...
