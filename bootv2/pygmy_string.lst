
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\bootv2\pygmy_string.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\bootv2\pygmy_string.o


Disassembly of section .text.convertPinToString:

00000000 <convertPinToString>:
convertPinToString():
   0:	2300      	movs	r3, #0
   2:	4a07      	ldr	r2, [pc, #28]	; (20 <convertPinToString+0x20>)
   4:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
   8:	7909      	ldrb	r1, [r1, #4]
   a:	4281      	cmp	r1, r0
   c:	d102      	bne.n	14 <convertPinToString+0x14>
   e:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
  12:	4770      	bx	lr
  14:	3301      	adds	r3, #1
  16:	2b1b      	cmp	r3, #27
  18:	d1f3      	bne.n	2 <convertPinToString+0x2>
  1a:	2000      	movs	r0, #0
  1c:	4770      	bx	lr
  1e:	bf00      	nop
  20:	00000000 	.word	0x00000000

Disassembly of section .text.copyBuffer:

00000000 <copyBuffer>:
copyBuffer():
   0:	b510      	push	{r4, lr}
   2:	2300      	movs	r3, #0
   4:	e002      	b.n	c <copyBuffer+0xc>
   6:	5cc4      	ldrb	r4, [r0, r3]
   8:	54cc      	strb	r4, [r1, r3]
   a:	3301      	adds	r3, #1
   c:	4293      	cmp	r3, r2
   e:	d3fa      	bcc.n	6 <copyBuffer+0x6>
  10:	bd10      	pop	{r4, pc}

Disassembly of section .text.convertU16ToBuffer:

00000000 <convertU16ToBuffer>:
convertU16ToBuffer():
   0:	2a01      	cmp	r2, #1
   2:	ea4f 2310 	mov.w	r3, r0, lsr #8
   6:	bf07      	ittee	eq
   8:	700b      	strbeq	r3, [r1, #0]
   a:	7048      	strbeq	r0, [r1, #1]
   c:	7008      	strbne	r0, [r1, #0]
   e:	704b      	strbne	r3, [r1, #1]
  10:	4770      	bx	lr

Disassembly of section .text.convertU32ToBuffer:

00000000 <convertU32ToBuffer>:
convertU32ToBuffer():
   0:	2a01      	cmp	r2, #1
   2:	f101 0301 	add.w	r3, r1, #1
   6:	d106      	bne.n	16 <convertU32ToBuffer+0x16>
   8:	0e02      	lsrs	r2, r0, #24
   a:	700a      	strb	r2, [r1, #0]
   c:	0c02      	lsrs	r2, r0, #16
   e:	704a      	strb	r2, [r1, #1]
  10:	0a02      	lsrs	r2, r0, #8
  12:	705a      	strb	r2, [r3, #1]
  14:	e005      	b.n	22 <convertU32ToBuffer+0x22>
  16:	0a02      	lsrs	r2, r0, #8
  18:	704a      	strb	r2, [r1, #1]
  1a:	0c02      	lsrs	r2, r0, #16
  1c:	7008      	strb	r0, [r1, #0]
  1e:	705a      	strb	r2, [r3, #1]
  20:	0e00      	lsrs	r0, r0, #24
  22:	7098      	strb	r0, [r3, #2]
  24:	4770      	bx	lr

Disassembly of section .text.convertBufferToU16:

00000000 <convertBufferToU16>:
convertBufferToU16():
   0:	7803      	ldrb	r3, [r0, #0]
   2:	7840      	ldrb	r0, [r0, #1]
   4:	2901      	cmp	r1, #1
   6:	bf0c      	ite	eq
   8:	ea40 2003 	orreq.w	r0, r0, r3, lsl #8
   c:	ea43 2000 	orrne.w	r0, r3, r0, lsl #8
  10:	4770      	bx	lr

Disassembly of section .text.convertBufferToU32:

00000000 <convertBufferToU32>:
convertBufferToU32():
   0:	2901      	cmp	r1, #1
   2:	7803      	ldrb	r3, [r0, #0]
   4:	d109      	bne.n	1a <convertBufferToU32+0x1a>
   6:	78c2      	ldrb	r2, [r0, #3]
   8:	ea42 6303 	orr.w	r3, r2, r3, lsl #24
   c:	7842      	ldrb	r2, [r0, #1]
   e:	7880      	ldrb	r0, [r0, #2]
  10:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  14:	ea43 2000 	orr.w	r0, r3, r0, lsl #8
  18:	4770      	bx	lr
  1a:	7882      	ldrb	r2, [r0, #2]
  1c:	7841      	ldrb	r1, [r0, #1]
  1e:	0412      	lsls	r2, r2, #16
  20:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  24:	78c0      	ldrb	r0, [r0, #3]
  26:	ea42 0303 	orr.w	r3, r2, r3
  2a:	ea43 6000 	orr.w	r0, r3, r0, lsl #24
  2e:	4770      	bx	lr

Disassembly of section .text.isPrintable:

00000000 <isPrintable>:
isPrintable():
   0:	3820      	subs	r0, #32
   2:	b2c0      	uxtb	r0, r0
   4:	285e      	cmp	r0, #94	; 0x5e
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	4770      	bx	lr

Disassembly of section .text.isCharInString:

00000000 <isCharInString>:
isCharInString():
   0:	e001      	b.n	6 <isCharInString+0x6>
   2:	4298      	cmp	r0, r3
   4:	d004      	beq.n	10 <isCharInString+0x10>
   6:	f811 3b01 	ldrb.w	r3, [r1], #1
   a:	2b00      	cmp	r3, #0
   c:	d1f9      	bne.n	2 <isCharInString+0x2>
   e:	e000      	b.n	12 <isCharInString+0x12>
  10:	2301      	movs	r3, #1
  12:	b258      	sxtb	r0, r3
  14:	4770      	bx	lr

Disassembly of section .text.stripLeadingChars:

00000000 <stripLeadingChars>:
stripLeadingChars():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460e      	mov	r6, r1
   4:	4604      	mov	r4, r0
   6:	e003      	b.n	10 <stripLeadingChars+0x10>
   8:	4631      	mov	r1, r6
   a:	f7ff fffe 	bl	0 <stripLeadingChars>
   e:	b120      	cbz	r0, 1a <stripLeadingChars+0x1a>
  10:	4625      	mov	r5, r4
  12:	f814 0b01 	ldrb.w	r0, [r4], #1
  16:	2800      	cmp	r0, #0
  18:	d1f6      	bne.n	8 <stripLeadingChars+0x8>
  1a:	4628      	mov	r0, r5
  1c:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.isAlpha:

00000000 <isAlpha>:
isAlpha():
   0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   4:	b2db      	uxtb	r3, r3
   6:	2b19      	cmp	r3, #25
   8:	d906      	bls.n	18 <isAlpha+0x18>
   a:	3861      	subs	r0, #97	; 0x61
   c:	b2c0      	uxtb	r0, r0
   e:	2819      	cmp	r0, #25
  10:	bf8c      	ite	hi
  12:	2000      	movhi	r0, #0
  14:	2001      	movls	r0, #1
  16:	4770      	bx	lr
  18:	2001      	movs	r0, #1
  1a:	4770      	bx	lr

Disassembly of section .text.isNumeric:

00000000 <isNumeric>:
isNumeric():
   0:	3830      	subs	r0, #48	; 0x30
   2:	b2c0      	uxtb	r0, r0
   4:	2809      	cmp	r0, #9
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	4770      	bx	lr

Disassembly of section .text.isAlphaOrNumeric:

00000000 <isAlphaOrNumeric>:
isAlphaOrNumeric():
   0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   4:	b2db      	uxtb	r3, r3
   6:	2b19      	cmp	r3, #25
   8:	d90b      	bls.n	22 <isAlphaOrNumeric+0x22>
   a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   e:	b2db      	uxtb	r3, r3
  10:	2b19      	cmp	r3, #25
  12:	d908      	bls.n	26 <isAlphaOrNumeric+0x26>
  14:	3830      	subs	r0, #48	; 0x30
  16:	b2c0      	uxtb	r0, r0
  18:	2809      	cmp	r0, #9
  1a:	bf8c      	ite	hi
  1c:	2000      	movhi	r0, #0
  1e:	2001      	movls	r0, #1
  20:	4770      	bx	lr
  22:	2001      	movs	r0, #1
  24:	4770      	bx	lr
  26:	2001      	movs	r0, #1
  28:	4770      	bx	lr

Disassembly of section .text.isHex:

00000000 <isHex>:
isHex():
   0:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
   4:	b2db      	uxtb	r3, r3
   6:	2b09      	cmp	r3, #9
   8:	d906      	bls.n	18 <isHex+0x18>
   a:	3841      	subs	r0, #65	; 0x41
   c:	b2c0      	uxtb	r0, r0
   e:	2805      	cmp	r0, #5
  10:	bf8c      	ite	hi
  12:	2000      	movhi	r0, #0
  14:	2001      	movls	r0, #1
  16:	4770      	bx	lr
  18:	2001      	movs	r0, #1
  1a:	4770      	bx	lr

Disassembly of section .text.isBinary:

00000000 <isBinary>:
isBinary():
   0:	3830      	subs	r0, #48	; 0x30
   2:	b2c0      	uxtb	r0, r0
   4:	2801      	cmp	r0, #1
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	4770      	bx	lr

Disassembly of section .text.isOctal:

00000000 <isOctal>:
isOctal():
   0:	3830      	subs	r0, #48	; 0x30
   2:	b2c0      	uxtb	r0, r0
   4:	2807      	cmp	r0, #7
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	4770      	bx	lr

Disassembly of section .text.isNewline:

00000000 <isNewline>:
isNewline():
   0:	280a      	cmp	r0, #10
   2:	d007      	beq.n	14 <isNewline+0x14>
   4:	280c      	cmp	r0, #12
   6:	d007      	beq.n	18 <isNewline+0x18>
   8:	f1a0 030d 	sub.w	r3, r0, #13
   c:	4258      	negs	r0, r3
   e:	eb40 0003 	adc.w	r0, r0, r3
  12:	4770      	bx	lr
  14:	2001      	movs	r0, #1
  16:	4770      	bx	lr
  18:	2001      	movs	r0, #1
  1a:	4770      	bx	lr

Disassembly of section .text.isWhitespace:

00000000 <isWhitespace>:
isWhitespace():
   0:	3808      	subs	r0, #8
   2:	b2c0      	uxtb	r0, r0
   4:	2818      	cmp	r0, #24
   6:	bf8c      	ite	hi
   8:	2000      	movhi	r0, #0
   a:	2001      	movls	r0, #1
   c:	4770      	bx	lr

Disassembly of section .text.isQuote:

00000000 <isQuote>:
isQuote():
   0:	2822      	cmp	r0, #34	; 0x22
   2:	d005      	beq.n	10 <isQuote+0x10>
   4:	f1a0 0227 	sub.w	r2, r0, #39	; 0x27
   8:	4250      	negs	r0, r2
   a:	eb40 0002 	adc.w	r0, r0, r2
   e:	4770      	bx	lr
  10:	2001      	movs	r0, #1
  12:	4770      	bx	lr

Disassembly of section .text.isMath:

00000000 <isMath>:
isMath():
   0:	b508      	push	{r3, lr}
   2:	4903      	ldr	r1, [pc, #12]	; (10 <isMath+0x10>)
   4:	f7ff fffe 	bl	0 <isMath>
   8:	3800      	subs	r0, #0
   a:	bf18      	it	ne
   c:	2001      	movne	r0, #1
   e:	bd08      	pop	{r3, pc}
  10:	00000000 	.word	0x00000000

Disassembly of section .text.isFileSeparator:

00000000 <isFileSeparator>:
isFileSeparator():
   0:	f1a0 012f 	sub.w	r1, r0, #47	; 0x2f
   4:	4248      	negs	r0, r1
   6:	eb40 0001 	adc.w	r0, r0, r1
   a:	4770      	bx	lr

Disassembly of section .text.isSeparator:

00000000 <isSeparator>:
isSeparator():
   0:	b508      	push	{r3, lr}
   2:	4903      	ldr	r1, [pc, #12]	; (10 <isSeparator+0x10>)
   4:	f7ff fffe 	bl	0 <isSeparator>
   8:	3800      	subs	r0, #0
   a:	bf18      	it	ne
   c:	2001      	movne	r0, #1
   e:	bd08      	pop	{r3, pc}
  10:	0000000f 	.word	0x0000000f

Disassembly of section .text.isPunctuation:

00000000 <isPunctuation>:
isPunctuation():
   0:	b508      	push	{r3, lr}
   2:	4903      	ldr	r1, [pc, #12]	; (10 <isPunctuation+0x10>)
   4:	f7ff fffe 	bl	0 <isPunctuation>
   8:	3800      	subs	r0, #0
   a:	bf18      	it	ne
   c:	2001      	movne	r0, #1
   e:	bd08      	pop	{r3, pc}
  10:	00000021 	.word	0x00000021

Disassembly of section .text.len:

00000000 <len>:
len():
   0:	2300      	movs	r3, #0
   2:	e003      	b.n	c <len+0xc>
   4:	3301      	adds	r3, #1
   6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   a:	d005      	beq.n	18 <len+0x18>
   c:	f810 1b01 	ldrb.w	r1, [r0], #1
  10:	b29a      	uxth	r2, r3
  12:	2900      	cmp	r1, #0
  14:	d1f6      	bne.n	4 <len+0x4>
  16:	e001      	b.n	1c <len+0x1c>
  18:	f64f 72ff 	movw	r2, #65535	; 0xffff
  1c:	4610      	mov	r0, r2
  1e:	4770      	bx	lr

Disassembly of section .text.splitString:

00000000 <splitString>:
splitString():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4616      	mov	r6, r2
   4:	4604      	mov	r4, r0
   6:	460d      	mov	r5, r1
   8:	f7ff fffe 	bl	0 <splitString>
   c:	2e00      	cmp	r6, #0
   e:	da02      	bge.n	16 <splitString+0x16>
  10:	1824      	adds	r4, r4, r0
  12:	2201      	movs	r2, #1
  14:	e001      	b.n	1a <splitString+0x1a>
  16:	f64f 72ff 	movw	r2, #65535	; 0xffff
  1a:	2300      	movs	r3, #0
  1c:	e00e      	b.n	3c <splitString+0x3c>
  1e:	7821      	ldrb	r1, [r4, #0]
  20:	42a9      	cmp	r1, r5
  22:	bf08      	it	eq
  24:	18b6      	addeq	r6, r6, r2
  26:	b211      	sxth	r1, r2
  28:	bf08      	it	eq
  2a:	b236      	sxtheq	r6, r6
  2c:	f1b1 3fff 	cmp.w	r1, #4294967295
  30:	d101      	bne.n	36 <splitString+0x36>
  32:	3c01      	subs	r4, #1
  34:	e000      	b.n	38 <splitString+0x38>
  36:	3401      	adds	r4, #1
  38:	3301      	adds	r3, #1
  3a:	b29b      	uxth	r3, r3
  3c:	4283      	cmp	r3, r0
  3e:	d201      	bcs.n	44 <splitString+0x44>
  40:	2e00      	cmp	r6, #0
  42:	d1ec      	bne.n	1e <splitString+0x1e>
  44:	4620      	mov	r0, r4
  46:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.convertCharToUpper:

00000000 <convertCharToUpper>:
convertCharToUpper():
   0:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
   4:	b2db      	uxtb	r3, r3
   6:	2b19      	cmp	r3, #25
   8:	d801      	bhi.n	e <convertCharToUpper+0xe>
   a:	3020      	adds	r0, #32
   c:	b2c0      	uxtb	r0, r0
   e:	4770      	bx	lr

Disassembly of section .text.convertCharToLower:

00000000 <convertCharToLower>:
convertCharToLower():
   0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
   4:	b2db      	uxtb	r3, r3
   6:	2b19      	cmp	r3, #25
   8:	d801      	bhi.n	e <convertCharToLower+0xe>
   a:	3820      	subs	r0, #32
   c:	b2c0      	uxtb	r0, r0
   e:	4770      	bx	lr

Disassembly of section .text.isCharSameIgnoreCase:

00000000 <isCharSameIgnoreCase>:
isCharSameIgnoreCase():
   0:	b538      	push	{r3, r4, r5, lr}
   2:	460d      	mov	r5, r1
   4:	f7ff fffe 	bl	0 <isCharSameIgnoreCase>
   8:	4604      	mov	r4, r0
   a:	4628      	mov	r0, r5
   c:	f7ff fffe 	bl	0 <isCharSameIgnoreCase>
  10:	ebc0 0c04 	rsb	ip, r0, r4
  14:	f1dc 0000 	rsbs	r0, ip, #0
  18:	eb40 000c 	adc.w	r0, r0, ip
  1c:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.isStringSameIgnoreCase:

00000000 <isStringSameIgnoreCase>:
isStringSameIgnoreCase():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4605      	mov	r5, r0
   6:	f7ff fffe 	bl	0 <isStringSameIgnoreCase>
   a:	4606      	mov	r6, r0
   c:	4620      	mov	r0, r4
   e:	f7ff fffe 	bl	0 <isStringSameIgnoreCase>
  12:	4286      	cmp	r6, r0
  14:	d10b      	bne.n	2e <isStringSameIgnoreCase+0x2e>
  16:	e004      	b.n	22 <isStringSameIgnoreCase+0x22>
  18:	f814 1b01 	ldrb.w	r1, [r4], #1
  1c:	f7ff fffe 	bl	0 <isStringSameIgnoreCase>
  20:	b130      	cbz	r0, 30 <isStringSameIgnoreCase+0x30>
  22:	f815 0b01 	ldrb.w	r0, [r5], #1
  26:	2800      	cmp	r0, #0
  28:	d1f6      	bne.n	18 <isStringSameIgnoreCase+0x18>
  2a:	3001      	adds	r0, #1
  2c:	bd70      	pop	{r4, r5, r6, pc}
  2e:	2000      	movs	r0, #0
  30:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.isStringSame:

00000000 <isStringSame>:
isStringSame():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460d      	mov	r5, r1
   4:	4604      	mov	r4, r0
   6:	f7ff fffe 	bl	0 <isStringSame>
   a:	4606      	mov	r6, r0
   c:	4628      	mov	r0, r5
   e:	f7ff fffe 	bl	0 <isStringSame>
  12:	4286      	cmp	r6, r0
  14:	d10a      	bne.n	2c <isStringSame+0x2c>
  16:	e003      	b.n	20 <isStringSame+0x20>
  18:	f815 2b01 	ldrb.w	r2, [r5], #1
  1c:	4293      	cmp	r3, r2
  1e:	d107      	bne.n	30 <isStringSame+0x30>
  20:	f814 3b01 	ldrb.w	r3, [r4], #1
  24:	2b00      	cmp	r3, #0
  26:	d1f7      	bne.n	18 <isStringSame+0x18>
  28:	2001      	movs	r0, #1
  2a:	bd70      	pop	{r4, r5, r6, pc}
  2c:	2000      	movs	r0, #0
  2e:	bd70      	pop	{r4, r5, r6, pc}
  30:	2000      	movs	r0, #0
  32:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.replaceChars:

00000000 <replaceChars>:
replaceChars():
   0:	b570      	push	{r4, r5, r6, lr}
   2:	2300      	movs	r3, #0
   4:	e00b      	b.n	1e <replaceChars+0x1e>
   6:	42b5      	cmp	r5, r6
   8:	d104      	bne.n	14 <replaceChars+0x14>
   a:	3301      	adds	r3, #1
   c:	b29b      	uxth	r3, r3
   e:	f800 2c01 	strb.w	r2, [r0, #-1]
  12:	e004      	b.n	1e <replaceChars+0x1e>
  14:	3401      	adds	r4, #1
  16:	b2a4      	uxth	r4, r4
  18:	5d0e      	ldrb	r6, [r1, r4]
  1a:	2e00      	cmp	r6, #0
  1c:	d1f3      	bne.n	6 <replaceChars+0x6>
  1e:	f810 5b01 	ldrb.w	r5, [r0], #1
  22:	b10d      	cbz	r5, 28 <replaceChars+0x28>
  24:	2400      	movs	r4, #0
  26:	e7f7      	b.n	18 <replaceChars+0x18>
  28:	b2d8      	uxtb	r0, r3
  2a:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.convertCharToInt:

00000000 <convertCharToInt>:
convertCharToInt():
   0:	4603      	mov	r3, r0
   2:	3830      	subs	r0, #48	; 0x30
   4:	b2c0      	uxtb	r0, r0
   6:	2809      	cmp	r0, #9
   8:	d911      	bls.n	2e <convertCharToInt+0x2e>
   a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
   e:	b2d2      	uxtb	r2, r2
  10:	2a05      	cmp	r2, #5
  12:	d802      	bhi.n	1a <convertCharToInt+0x1a>
  14:	f1a3 0037 	sub.w	r0, r3, #55	; 0x37
  18:	e006      	b.n	28 <convertCharToInt+0x28>
  1a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
  1e:	b2d2      	uxtb	r2, r2
  20:	2a05      	cmp	r2, #5
  22:	d803      	bhi.n	2c <convertCharToInt+0x2c>
  24:	f1a3 0057 	sub.w	r0, r3, #87	; 0x57
  28:	b2c0      	uxtb	r0, r0
  2a:	4770      	bx	lr
  2c:	2000      	movs	r0, #0
  2e:	4770      	bx	lr

Disassembly of section .text.convertIntToChar:

00000000 <convertIntToChar>:
convertIntToChar():
   0:	4770      	bx	lr

Disassembly of section .text.seekChar:

00000000 <seekChar>:
seekChar():
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text.seekString:

00000000 <seekString>:
seekString():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	460e      	mov	r6, r1
   6:	4604      	mov	r4, r0
   8:	f7ff fffe 	bl	0 <seekString>
   c:	4605      	mov	r5, r0
   e:	4630      	mov	r0, r6
  10:	f7ff fffe 	bl	0 <seekString>
  14:	3001      	adds	r0, #1
  16:	b280      	uxth	r0, r0
  18:	42a8      	cmp	r0, r5
  1a:	d31b      	bcc.n	54 <seekString+0x54>
  1c:	1b40      	subs	r0, r0, r5
  1e:	b287      	uxth	r7, r0
  20:	2000      	movs	r0, #0
  22:	e012      	b.n	4a <seekString+0x4a>
  24:	eb06 0c00 	add.w	ip, r6, r0
  28:	f81c c003 	ldrb.w	ip, [ip, r3]
  2c:	f812 8b01 	ldrb.w	r8, [r2], #1
  30:	3301      	adds	r3, #1
  32:	45e0      	cmp	r8, ip
  34:	d102      	bne.n	3c <seekString+0x3c>
  36:	b299      	uxth	r1, r3
  38:	42a9      	cmp	r1, r5
  3a:	d3f3      	bcc.n	24 <seekString+0x24>
  3c:	42a9      	cmp	r1, r5
  3e:	d102      	bne.n	46 <seekString+0x46>
  40:	1830      	adds	r0, r6, r0
  42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  46:	3001      	adds	r0, #1
  48:	b280      	uxth	r0, r0
  4a:	42b8      	cmp	r0, r7
  4c:	d205      	bcs.n	5a <seekString+0x5a>
  4e:	4622      	mov	r2, r4
  50:	2300      	movs	r3, #0
  52:	e7f0      	b.n	36 <seekString+0x36>
  54:	2000      	movs	r0, #0
  56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  5a:	2000      	movs	r0, #0
  5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text.seekStringInBuffer:

00000000 <seekStringInBuffer>:
seekStringInBuffer():
   0:	2000      	movs	r0, #0
   2:	4770      	bx	lr

Disassembly of section .text.appendString:

00000000 <appendString>:
appendString():
   0:	780a      	ldrb	r2, [r1, #0]
   2:	460b      	mov	r3, r1
   4:	3101      	adds	r1, #1
   6:	2a00      	cmp	r2, #0
   8:	d1fa      	bne.n	0 <appendString>
   a:	e001      	b.n	10 <appendString+0x10>
   c:	f803 2b01 	strb.w	r2, [r3], #1
  10:	f810 2b01 	ldrb.w	r2, [r0], #1
  14:	2a00      	cmp	r2, #0
  16:	d1f9      	bne.n	c <appendString+0xc>
  18:	701a      	strb	r2, [r3, #0]
  1a:	4770      	bx	lr

Disassembly of section .text.copyString:

00000000 <copyString>:
copyString():
   0:	e001      	b.n	6 <copyString+0x6>
   2:	f801 3b01 	strb.w	r3, [r1], #1
   6:	f810 3b01 	ldrb.w	r3, [r0], #1
   a:	2b00      	cmp	r3, #0
   c:	d1f9      	bne.n	2 <copyString+0x2>
   e:	700b      	strb	r3, [r1, #0]
  10:	4770      	bx	lr

Disassembly of section .text.getNextSubString:

00000000 <getNextSubString>:
getNextSubString():
   0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	7803      	ldrb	r3, [r0, #0]
   6:	4607      	mov	r7, r0
   8:	460c      	mov	r4, r1
   a:	4d49      	ldr	r5, [pc, #292]	; (130 <getNextSubString+0x130>)
   c:	b19b      	cbz	r3, 36 <getNextSubString+0x36>
   e:	6828      	ldr	r0, [r5, #0]
  10:	b108      	cbz	r0, 16 <getNextSubString+0x16>
  12:	f7ff fffe 	bl	0 <sysFree>
  16:	4638      	mov	r0, r7
  18:	f7ff fffe 	bl	0 <getNextSubString>
  1c:	3001      	adds	r0, #1
  1e:	f7ff fffe 	bl	0 <sysAllocate>
  22:	4606      	mov	r6, r0
  24:	6028      	str	r0, [r5, #0]
  26:	2800      	cmp	r0, #0
  28:	d07e      	beq.n	128 <getNextSubString+0x128>
  2a:	4638      	mov	r0, r7
  2c:	4631      	mov	r1, r6
  2e:	f7ff fffe 	bl	0 <getNextSubString>
  32:	4b3f      	ldr	r3, [pc, #252]	; (130 <getNextSubString+0x130>)
  34:	605e      	str	r6, [r3, #4]
  36:	686e      	ldr	r6, [r5, #4]
  38:	2e00      	cmp	r6, #0
  3a:	d075      	beq.n	128 <getNextSubString+0x128>
  3c:	e06f      	b.n	11e <getNextSubString+0x11e>
  3e:	4638      	mov	r0, r7
  40:	f7ff fffe 	bl	0 <getNextSubString>
  44:	bb18      	cbnz	r0, 8e <getNextSubString+0x8e>
  46:	fa5f f884 	uxtb.w	r8, r4
  4a:	f018 0f80 	tst.w	r8, #128	; 0x80
  4e:	d003      	beq.n	58 <getNextSubString+0x58>
  50:	4638      	mov	r0, r7
  52:	f7ff fffe 	bl	0 <getNextSubString>
  56:	b9d0      	cbnz	r0, 8e <getNextSubString+0x8e>
  58:	f014 0901 	ands.w	r9, r4, #1
  5c:	d003      	beq.n	66 <getNextSubString+0x66>
  5e:	4638      	mov	r0, r7
  60:	f7ff fffe 	bl	0 <getNextSubString>
  64:	b998      	cbnz	r0, 8e <getNextSubString+0x8e>
  66:	f014 0a08 	ands.w	sl, r4, #8
  6a:	d003      	beq.n	74 <getNextSubString+0x74>
  6c:	4638      	mov	r0, r7
  6e:	f7ff fffe 	bl	0 <getNextSubString>
  72:	b960      	cbnz	r0, 8e <getNextSubString+0x8e>
  74:	f014 0b10 	ands.w	fp, r4, #16
  78:	d003      	beq.n	82 <getNextSubString+0x82>
  7a:	4638      	mov	r0, r7
  7c:	f7ff fffe 	bl	0 <getNextSubString>
  80:	b928      	cbnz	r0, 8e <getNextSubString+0x8e>
  82:	f014 0220 	ands.w	r2, r4, #32
  86:	9201      	str	r2, [sp, #4]
  88:	d03b      	beq.n	102 <getNextSubString+0x102>
  8a:	2f2c      	cmp	r7, #44	; 0x2c
  8c:	d139      	bne.n	102 <getNextSubString+0x102>
  8e:	3601      	adds	r6, #1
  90:	606e      	str	r6, [r5, #4]
  92:	e044      	b.n	11e <getNextSubString+0x11e>
  94:	f014 0f02 	tst.w	r4, #2
  98:	d004      	beq.n	a4 <getNextSubString+0xa4>
  9a:	4638      	mov	r0, r7
  9c:	f7ff fffe 	bl	0 <getNextSubString>
  a0:	2800      	cmp	r0, #0
  a2:	d136      	bne.n	112 <getNextSubString+0x112>
  a4:	f018 0f80 	tst.w	r8, #128	; 0x80
  a8:	d001      	beq.n	ae <getNextSubString+0xae>
  aa:	2f2f      	cmp	r7, #47	; 0x2f
  ac:	d031      	beq.n	112 <getNextSubString+0x112>
  ae:	f1b9 0f00 	cmp.w	r9, #0
  b2:	d003      	beq.n	bc <getNextSubString+0xbc>
  b4:	4638      	mov	r0, r7
  b6:	f7ff fffe 	bl	0 <getNextSubString>
  ba:	bb50      	cbnz	r0, 112 <getNextSubString+0x112>
  bc:	f1ba 0f00 	cmp.w	sl, #0
  c0:	d003      	beq.n	ca <getNextSubString+0xca>
  c2:	4638      	mov	r0, r7
  c4:	f7ff fffe 	bl	0 <getNextSubString>
  c8:	bb18      	cbnz	r0, 112 <getNextSubString+0x112>
  ca:	f1bb 0f00 	cmp.w	fp, #0
  ce:	d003      	beq.n	d8 <getNextSubString+0xd8>
  d0:	4638      	mov	r0, r7
  d2:	f7ff fffe 	bl	0 <getNextSubString>
  d6:	b9e0      	cbnz	r0, 112 <getNextSubString+0x112>
  d8:	f014 0f04 	tst.w	r4, #4
  dc:	d003      	beq.n	e6 <getNextSubString+0xe6>
  de:	4638      	mov	r0, r7
  e0:	f7ff fffe 	bl	0 <getNextSubString>
  e4:	b9a8      	cbnz	r0, 112 <getNextSubString+0x112>
  e6:	9b01      	ldr	r3, [sp, #4]
  e8:	b10b      	cbz	r3, ee <getNextSubString+0xee>
  ea:	2f2c      	cmp	r7, #44	; 0x2c
  ec:	d011      	beq.n	112 <getNextSubString+0x112>
  ee:	f014 0f40 	tst.w	r4, #64	; 0x40
  f2:	d003      	beq.n	fc <getNextSubString+0xfc>
  f4:	4638      	mov	r0, r7
  f6:	f7ff fffe 	bl	0 <getNextSubString>
  fa:	b950      	cbnz	r0, 112 <getNextSubString+0x112>
  fc:	9a00      	ldr	r2, [sp, #0]
  fe:	1c53      	adds	r3, r2, #1
 100:	606b      	str	r3, [r5, #4]
 102:	686b      	ldr	r3, [r5, #4]
 104:	9300      	str	r3, [sp, #0]
 106:	781f      	ldrb	r7, [r3, #0]
 108:	2f00      	cmp	r7, #0
 10a:	d1c3      	bne.n	94 <getNextSubString+0x94>
 10c:	4b08      	ldr	r3, [pc, #32]	; (130 <getNextSubString+0x130>)
 10e:	605f      	str	r7, [r3, #4]
 110:	e00a      	b.n	128 <getNextSubString+0x128>
 112:	9b00      	ldr	r3, [sp, #0]
 114:	2200      	movs	r2, #0
 116:	f803 2b01 	strb.w	r2, [r3], #1
 11a:	606b      	str	r3, [r5, #4]
 11c:	e004      	b.n	128 <getNextSubString+0x128>
 11e:	686e      	ldr	r6, [r5, #4]
 120:	7837      	ldrb	r7, [r6, #0]
 122:	2f00      	cmp	r7, #0
 124:	d18b      	bne.n	3e <getNextSubString+0x3e>
 126:	463e      	mov	r6, r7
 128:	4630      	mov	r0, r6
 12a:	e8bd 8ffe 	ldmia.w	sp!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 12e:	bf00      	nop
 130:	00000000 	.word	0x00000000

Disassembly of section .text.getAllSubStrings:

00000000 <getAllSubStrings>:
getAllSubStrings():
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4614      	mov	r4, r2
   4:	461f      	mov	r7, r3
   6:	460e      	mov	r6, r1
   8:	460a      	mov	r2, r1
   a:	2300      	movs	r3, #0
   c:	e004      	b.n	18 <getAllSubStrings+0x18>
   e:	2100      	movs	r1, #0
  10:	3301      	adds	r3, #1
  12:	f842 1b04 	str.w	r1, [r2], #4
  16:	b29b      	uxth	r3, r3
  18:	42a3      	cmp	r3, r4
  1a:	d3f8      	bcc.n	e <getAllSubStrings+0xe>
  1c:	4639      	mov	r1, r7
  1e:	f7ff fffe 	bl	0 <getAllSubStrings>
  22:	2500      	movs	r5, #0
  24:	e007      	b.n	36 <getAllSubStrings+0x36>
  26:	f846 0b04 	str.w	r0, [r6], #4
  2a:	4639      	mov	r1, r7
  2c:	2000      	movs	r0, #0
  2e:	f7ff fffe 	bl	0 <getAllSubStrings>
  32:	3501      	adds	r5, #1
  34:	b2ad      	uxth	r5, r5
  36:	42a5      	cmp	r5, r4
  38:	d201      	bcs.n	3e <getAllSubStrings+0x3e>
  3a:	2800      	cmp	r0, #0
  3c:	d1f3      	bne.n	26 <getAllSubStrings+0x26>
  3e:	4628      	mov	r0, r5
  40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.convertStringToInt:

00000000 <convertStringToInt>:
convertStringToInt():
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	2300      	movs	r3, #0
   6:	b08a      	sub	sp, #40	; 0x28
   8:	e004      	b.n	14 <convertStringToInt+0x14>
   a:	a901      	add	r1, sp, #4
   c:	54ca      	strb	r2, [r1, r3]
   e:	3301      	adds	r3, #1
  10:	2b23      	cmp	r3, #35	; 0x23
  12:	d002      	beq.n	1a <convertStringToInt+0x1a>
  14:	5cc2      	ldrb	r2, [r0, r3]
  16:	2a00      	cmp	r2, #0
  18:	d1f7      	bne.n	a <convertStringToInt+0xa>
  1a:	aa0a      	add	r2, sp, #40	; 0x28
  1c:	18d3      	adds	r3, r2, r3
  1e:	2200      	movs	r2, #0
  20:	f803 2c24 	strb.w	r2, [r3, #-36]
  24:	491e      	ldr	r1, [pc, #120]	; (a0 <convertStringToInt+0xa0>)
  26:	3220      	adds	r2, #32
  28:	a801      	add	r0, sp, #4
  2a:	f7ff fffe 	bl	0 <convertStringToInt>
  2e:	491d      	ldr	r1, [pc, #116]	; (a4 <convertStringToInt+0xa4>)
  30:	2800      	cmp	r0, #0
  32:	bf0c      	ite	eq
  34:	2401      	moveq	r4, #1
  36:	f04f 34ff 	movne.w	r4, #4294967295
  3a:	2220      	movs	r2, #32
  3c:	a801      	add	r0, sp, #4
  3e:	f7ff fffe 	bl	0 <convertStringToInt>
  42:	b990      	cbnz	r0, 6a <convertStringToInt+0x6a>
  44:	a801      	add	r0, sp, #4
  46:	4918      	ldr	r1, [pc, #96]	; (a8 <convertStringToInt+0xa8>)
  48:	2220      	movs	r2, #32
  4a:	f7ff fffe 	bl	0 <convertStringToInt>
  4e:	b970      	cbnz	r0, 6e <convertStringToInt+0x6e>
  50:	a801      	add	r0, sp, #4
  52:	4916      	ldr	r1, [pc, #88]	; (ac <convertStringToInt+0xac>)
  54:	2220      	movs	r2, #32
  56:	f7ff fffe 	bl	0 <convertStringToInt>
  5a:	b950      	cbnz	r0, 72 <convertStringToInt+0x72>
  5c:	a801      	add	r0, sp, #4
  5e:	4914      	ldr	r1, [pc, #80]	; (b0 <convertStringToInt+0xb0>)
  60:	2220      	movs	r2, #32
  62:	f7ff fffe 	bl	0 <convertStringToInt>
  66:	250a      	movs	r5, #10
  68:	e004      	b.n	74 <convertStringToInt+0x74>
  6a:	2510      	movs	r5, #16
  6c:	e002      	b.n	74 <convertStringToInt+0x74>
  6e:	2502      	movs	r5, #2
  70:	e000      	b.n	74 <convertStringToInt+0x74>
  72:	2508      	movs	r5, #8
  74:	f10d 0803 	add.w	r8, sp, #3
  78:	2600      	movs	r6, #0
  7a:	e008      	b.n	8e <convertStringToInt+0x8e>
  7c:	4638      	mov	r0, r7
  7e:	f7ff fffe 	bl	0 <convertStringToInt>
  82:	b120      	cbz	r0, 8e <convertStringToInt+0x8e>
  84:	4638      	mov	r0, r7
  86:	f7ff fffe 	bl	0 <convertStringToInt>
  8a:	436e      	muls	r6, r5
  8c:	1986      	adds	r6, r0, r6
  8e:	f818 7f01 	ldrb.w	r7, [r8, #1]!
  92:	2f00      	cmp	r7, #0
  94:	d1f2      	bne.n	7c <convertStringToInt+0x7c>
  96:	fb04 f006 	mul.w	r0, r4, r6
  9a:	b00a      	add	sp, #40	; 0x28
  9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  a0:	00000028 	.word	0x00000028
  a4:	0000002a 	.word	0x0000002a
  a8:	0000002f 	.word	0x0000002f
  ac:	00000032 	.word	0x00000032
  b0:	00000035 	.word	0x00000035

Disassembly of section .text.convertIntToString:

00000000 <convertIntToString>:
convertIntToString():
   0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	b087      	sub	sp, #28
   6:	4680      	mov	r8, r0
   8:	4689      	mov	r9, r1
   a:	461e      	mov	r6, r3
   c:	2000      	movs	r0, #0
   e:	f10d 030b 	add.w	r3, sp, #11
  12:	2100      	movs	r1, #0
  14:	e00d      	b.n	32 <convertIntToString+0x32>
  16:	f803 4f01 	strb.w	r4, [r3, #1]!
  1a:	2401      	movs	r4, #1
  1c:	2500      	movs	r5, #0
  1e:	1900      	adds	r0, r0, r4
  20:	eb41 0105 	adc.w	r1, r1, r5
  24:	2408      	movs	r4, #8
  26:	2500      	movs	r5, #0
  28:	4044      	eors	r4, r0
  2a:	404d      	eors	r5, r1
  2c:	ea54 0705 	orrs.w	r7, r4, r5
  30:	d003      	beq.n	3a <convertIntToString+0x3a>
  32:	f812 4b01 	ldrb.w	r4, [r2], #1
  36:	2c00      	cmp	r4, #0
  38:	d1ed      	bne.n	16 <convertIntToString+0x16>
  3a:	aa03      	add	r2, sp, #12
  3c:	2300      	movs	r3, #0
  3e:	1810      	adds	r0, r2, r0
  40:	7003      	strb	r3, [r0, #0]
  42:	f1b8 0f00 	cmp.w	r8, #0
  46:	f179 0300 	sbcs.w	r3, r9, #0
  4a:	da06      	bge.n	5a <convertIntToString+0x5a>
  4c:	232d      	movs	r3, #45	; 0x2d
  4e:	f806 3b01 	strb.w	r3, [r6], #1
  52:	f1c8 0800 	rsb	r8, r8, #0
  56:	f04f 0900 	mov.w	r9, #0
  5a:	f89d 700c 	ldrb.w	r7, [sp, #12]
  5e:	2f25      	cmp	r7, #37	; 0x25
  60:	bf06      	itte	eq
  62:	ac06      	addeq	r4, sp, #24
  64:	f814 7d0b 	ldrbeq.w	r7, [r4, #-11]!
  68:	ac03      	addne	r4, sp, #12
  6a:	2f30      	cmp	r7, #48	; 0x30
  6c:	d101      	bne.n	72 <convertIntToString+0x72>
  6e:	3401      	adds	r4, #1
  70:	e000      	b.n	74 <convertIntToString+0x74>
  72:	2720      	movs	r7, #32
  74:	4620      	mov	r0, r4
  76:	4948      	ldr	r1, [pc, #288]	; (198 <convertIntToString+0x198>)
  78:	2220      	movs	r2, #32
  7a:	f7ff fffe 	bl	0 <convertIntToString>
  7e:	b970      	cbnz	r0, 9e <convertIntToString+0x9e>
  80:	4620      	mov	r0, r4
  82:	4946      	ldr	r1, [pc, #280]	; (19c <convertIntToString+0x19c>)
  84:	2220      	movs	r2, #32
  86:	f7ff fffe 	bl	0 <convertIntToString>
  8a:	b958      	cbnz	r0, a4 <convertIntToString+0xa4>
  8c:	4620      	mov	r0, r4
  8e:	4944      	ldr	r1, [pc, #272]	; (1a0 <convertIntToString+0x1a0>)
  90:	2220      	movs	r2, #32
  92:	f7ff fffe 	bl	0 <convertIntToString>
  96:	b140      	cbz	r0, aa <convertIntToString+0xaa>
  98:	f04f 0a02 	mov.w	sl, #2
  9c:	e007      	b.n	ae <convertIntToString+0xae>
  9e:	f04f 0a10 	mov.w	sl, #16
  a2:	e004      	b.n	ae <convertIntToString+0xae>
  a4:	f04f 0a08 	mov.w	sl, #8
  a8:	e001      	b.n	ae <convertIntToString+0xae>
  aa:	f04f 0a0a 	mov.w	sl, #10
  ae:	4620      	mov	r0, r4
  b0:	f7ff fffe 	bl	0 <convertIntToString>
  b4:	3801      	subs	r0, #1
  b6:	17c1      	asrs	r1, r0, #31
  b8:	2800      	cmp	r0, #0
  ba:	f171 0400 	sbcs.w	r4, r1, #0
  be:	f04f 0b00 	mov.w	fp, #0
  c2:	da01      	bge.n	c8 <convertIntToString+0xc8>
  c4:	2000      	movs	r0, #0
  c6:	2100      	movs	r1, #0
  c8:	2200      	movs	r2, #0
  ca:	2300      	movs	r3, #0
  cc:	46be      	mov	lr, r7
  ce:	46b4      	mov	ip, r6
  d0:	2401      	movs	r4, #1
  d2:	2500      	movs	r5, #0
  d4:	e9cd 2300 	strd	r2, r3, [sp]
  d8:	4606      	mov	r6, r0
  da:	460f      	mov	r7, r1
  dc:	e00a      	b.n	f4 <convertIntToString+0xf4>
  de:	2001      	movs	r0, #1
  e0:	e9dd 4500 	ldrd	r4, r5, [sp]
  e4:	2100      	movs	r1, #0
  e6:	1824      	adds	r4, r4, r0
  e8:	eb45 0501 	adc.w	r5, r5, r1
  ec:	e9cd 4500 	strd	r4, r5, [sp]
  f0:	4614      	mov	r4, r2
  f2:	461d      	mov	r5, r3
  f4:	fb04 f10b 	mul.w	r1, r4, fp
  f8:	fba4 230a 	umull	r2, r3, r4, sl
  fc:	fb0a 1105 	mla	r1, sl, r5, r1
 100:	18cb      	adds	r3, r1, r3
 102:	4590      	cmp	r8, r2
 104:	eb79 0003 	sbcs.w	r0, r9, r3
 108:	dae9      	bge.n	de <convertIntToString+0xde>
 10a:	4630      	mov	r0, r6
 10c:	4639      	mov	r1, r7
 10e:	4666      	mov	r6, ip
 110:	4677      	mov	r7, lr
 112:	e008      	b.n	126 <convertIntToString+0x126>
 114:	f04f 32ff 	mov.w	r2, #4294967295
 118:	f04f 33ff 	mov.w	r3, #4294967295
 11c:	1880      	adds	r0, r0, r2
 11e:	f806 7b01 	strb.w	r7, [r6], #1
 122:	eb41 0103 	adc.w	r1, r1, r3
 126:	e9dd 2300 	ldrd	r2, r3, [sp]
 12a:	4282      	cmp	r2, r0
 12c:	418b      	sbcs	r3, r1
 12e:	dbf1      	blt.n	114 <convertIntToString+0x114>
 130:	4622      	mov	r2, r4
 132:	462b      	mov	r3, r5
 134:	4640      	mov	r0, r8
 136:	4649      	mov	r1, r9
 138:	f7ff fffe 	bl	0 <__aeabi_ldivmod>
 13c:	4b19      	ldr	r3, [pc, #100]	; (1a4 <convertIntToString+0x1a4>)
 13e:	4652      	mov	r2, sl
 140:	181b      	adds	r3, r3, r0
 142:	f893 30e0 	ldrb.w	r3, [r3, #224]	; 0xe0
 146:	f806 3b01 	strb.w	r3, [r6], #1
 14a:	fb00 f305 	mul.w	r3, r0, r5
 14e:	fb01 3304 	mla	r3, r1, r4, r3
 152:	fba0 0104 	umull	r0, r1, r0, r4
 156:	1859      	adds	r1, r3, r1
 158:	ebb8 0800 	subs.w	r8, r8, r0
 15c:	eb69 0901 	sbc.w	r9, r9, r1
 160:	465b      	mov	r3, fp
 162:	4620      	mov	r0, r4
 164:	4629      	mov	r1, r5
 166:	f7ff fffe 	bl	0 <__aeabi_ldivmod>
 16a:	f04f 32ff 	mov.w	r2, #4294967295
 16e:	4604      	mov	r4, r0
 170:	460d      	mov	r5, r1
 172:	f04f 33ff 	mov.w	r3, #4294967295
 176:	e9dd 0100 	ldrd	r0, r1, [sp]
 17a:	1880      	adds	r0, r0, r2
 17c:	eb41 0103 	adc.w	r1, r1, r3
 180:	e9cd 0100 	strd	r0, r1, [sp]
 184:	2800      	cmp	r0, #0
 186:	f171 0100 	sbcs.w	r1, r1, #0
 18a:	dad1      	bge.n	130 <convertIntToString+0x130>
 18c:	2300      	movs	r3, #0
 18e:	7033      	strb	r3, [r6, #0]
 190:	b007      	add	sp, #28
 192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 196:	bf00      	nop
 198:	00000038 	.word	0x00000038
 19c:	00000032 	.word	0x00000032
 1a0:	0000002f 	.word	0x0000002f
 1a4:	00000000 	.word	0x00000000

Disassembly of section .text.convertFloatToString:

00000000 <convertFloatToString>:
convertFloatToString():
   0:	47f0e92d 	.word	0x47f0e92d
   4:	b08a      	sub	sp, #40	; 0x28
   6:	4606      	mov	r6, r0
   8:	460f      	mov	r7, r1
   a:	4614      	mov	r4, r2
   c:	aa08      	add	r2, sp, #32
   e:	461d      	mov	r5, r3
  10:	f7ff fffe 	bl	0 <modf>
  14:	4639      	mov	r1, r7
  16:	4630      	mov	r0, r6
  18:	f7ff fffe 	bl	0 <__aeabi_d2iz>
  1c:	aa08      	add	r2, sp, #32
  1e:	4639      	mov	r1, r7
  20:	4680      	mov	r8, r0
  22:	4630      	mov	r0, r6
  24:	f7ff fffe 	bl	0 <modf>
  28:	4606      	mov	r6, r0
  2a:	f021 4700 	bic.w	r7, r1, #2147483648	; 0x80000000
  2e:	4620      	mov	r0, r4
  30:	4669      	mov	r1, sp
  32:	f7ff fffe 	bl	0 <convertFloatToString>
  36:	483e      	ldr	r0, [pc, #248]	; (130 <convertFloatToString+0x130>)
  38:	a906      	add	r1, sp, #24
  3a:	f7ff fffe 	bl	0 <convertFloatToString>
  3e:	f89d 3000 	ldrb.w	r3, [sp]
  42:	a904      	add	r1, sp, #16
  44:	2b25      	cmp	r3, #37	; 0x25
  46:	bf14      	ite	ne
  48:	4668      	movne	r0, sp
  4a:	f10d 0001 	addeq.w	r0, sp, #1
  4e:	2202      	movs	r2, #2
  50:	2341      	movs	r3, #65	; 0x41
  52:	f7ff fffe 	bl	0 <convertFloatToString>
  56:	b2c4      	uxtb	r4, r0
  58:	b11c      	cbz	r4, 62 <convertFloatToString+0x62>
  5a:	9804      	ldr	r0, [sp, #16]
  5c:	a906      	add	r1, sp, #24
  5e:	f7ff fffe 	bl	0 <convertFloatToString>
  62:	4834      	ldr	r0, [pc, #208]	; (134 <convertFloatToString+0x134>)
  64:	a906      	add	r1, sp, #24
  66:	f7ff fffe 	bl	0 <convertFloatToString>
  6a:	4640      	mov	r0, r8
  6c:	ea4f 71e8 	mov.w	r1, r8, asr #31
  70:	aa06      	add	r2, sp, #24
  72:	462b      	mov	r3, r5
  74:	f7ff fffe 	bl	0 <convertFloatToString>
  78:	482f      	ldr	r0, [pc, #188]	; (138 <convertFloatToString+0x138>)
  7a:	4629      	mov	r1, r5
  7c:	f7ff fffe 	bl	0 <convertFloatToString>
  80:	2c02      	cmp	r4, #2
  82:	d10b      	bne.n	9c <convertFloatToString+0x9c>
  84:	9805      	ldr	r0, [sp, #20]
  86:	f10d 011a 	add.w	r1, sp, #26
  8a:	f7ff fffe 	bl	0 <convertFloatToString>
  8e:	9805      	ldr	r0, [sp, #20]
  90:	f7ff fffe 	bl	0 <convertFloatToString>
  94:	fa5f fa80 	uxtb.w	sl, r0
  98:	46d0      	mov	r8, sl
  9a:	e001      	b.n	a0 <convertFloatToString+0xa0>
  9c:	f04f 080f 	mov.w	r8, #15
  a0:	2400      	movs	r4, #0
  a2:	46a1      	mov	r9, r4
  a4:	e01c      	b.n	e0 <convertFloatToString+0xe0>
  a6:	4b25      	ldr	r3, [pc, #148]	; (13c <convertFloatToString+0x13c>)
  a8:	4630      	mov	r0, r6
  aa:	4639      	mov	r1, r7
  ac:	2200      	movs	r2, #0
  ae:	f7ff fffe 	bl	0 <__aeabi_dmul>
  b2:	aa08      	add	r2, sp, #32
  b4:	f7ff fffe 	bl	0 <modf>
  b8:	a31b      	add	r3, pc, #108	; (adr r3, 128 <convertFloatToString+0x128>)
  ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  be:	460f      	mov	r7, r1
  c0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  c4:	4606      	mov	r6, r0
  c6:	f7ff fffe 	bl	0 <__aeabi_dcmplt>
  ca:	b958      	cbnz	r0, e4 <convertFloatToString+0xe4>
  cc:	230a      	movs	r3, #10
  ce:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  d2:	fb03 f909 	mul.w	r9, r3, r9
  d6:	f7ff fffe 	bl	0 <__aeabi_d2uiz>
  da:	3401      	adds	r4, #1
  dc:	4481      	add	r9, r0
  de:	b2e4      	uxtb	r4, r4
  e0:	4544      	cmp	r4, r8
  e2:	d3e0      	bcc.n	a6 <convertFloatToString+0xa6>
  e4:	a906      	add	r1, sp, #24
  e6:	f1b8 0f0f 	cmp.w	r8, #15
  ea:	bf08      	it	eq
  ec:	4654      	moveq	r4, sl
  ee:	4814      	ldr	r0, [pc, #80]	; (140 <convertFloatToString+0x140>)
  f0:	f7ff fffe 	bl	0 <convertFloatToString>
  f4:	f10d 031a 	add.w	r3, sp, #26
  f8:	4a12      	ldr	r2, [pc, #72]	; (144 <convertFloatToString+0x144>)
  fa:	b2e0      	uxtb	r0, r4
  fc:	2100      	movs	r1, #0
  fe:	f7ff fffe 	bl	0 <convertFloatToString>
 102:	a906      	add	r1, sp, #24
 104:	480b      	ldr	r0, [pc, #44]	; (134 <convertFloatToString+0x134>)
 106:	f7ff fffe 	bl	0 <convertFloatToString>
 10a:	4628      	mov	r0, r5
 10c:	f7ff fffe 	bl	0 <convertFloatToString>
 110:	2100      	movs	r1, #0
 112:	182b      	adds	r3, r5, r0
 114:	aa06      	add	r2, sp, #24
 116:	4648      	mov	r0, r9
 118:	f7ff fffe 	bl	0 <convertFloatToString>
 11c:	b00a      	add	sp, #40	; 0x28
 11e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 122:	bf00      	nop
 124:	f3af 8000 	nop.w
 128:	9abcaf48 	.word	0x9abcaf48
 12c:	3e7ad7f2 	.word	0x3e7ad7f2
 130:	0000003d 	.word	0x0000003d
 134:	0000003f 	.word	0x0000003f
 138:	00000041 	.word	0x00000041
 13c:	40240000 	.word	0x40240000
 140:	00000043 	.word	0x00000043
 144:	00000046 	.word	0x00000046

Disassembly of section .text.convertStringToFloat:

00000000 <convertStringToFloat>:
convertStringToFloat():
   0:	4370e92d 	.word	0x4370e92d
   4:	7803      	ldrb	r3, [r0, #0]
   6:	b08c      	sub	sp, #48	; 0x30
   8:	2b2d      	cmp	r3, #45	; 0x2d
   a:	d103      	bne.n	14 <convertStringToFloat+0x14>
   c:	3001      	adds	r0, #1
   e:	2400      	movs	r4, #0
  10:	4d2c      	ldr	r5, [pc, #176]	; (c4 <convertStringToFloat+0xc4>)
  12:	e004      	b.n	1e <convertStringToFloat+0x1e>
  14:	2b2b      	cmp	r3, #43	; 0x2b
  16:	4d2c      	ldr	r5, [pc, #176]	; (c8 <convertStringToFloat+0xc8>)
  18:	bf08      	it	eq
  1a:	3001      	addeq	r0, #1
  1c:	2400      	movs	r4, #0
  1e:	f10d 0617 	add.w	r6, sp, #23
  22:	2200      	movs	r2, #0
  24:	e006      	b.n	34 <convertStringToFloat+0x34>
  26:	3201      	adds	r2, #1
  28:	b2d2      	uxtb	r2, r2
  2a:	2a15      	cmp	r2, #21
  2c:	f806 1f01 	strb.w	r1, [r6, #1]!
  30:	4603      	mov	r3, r0
  32:	d005      	beq.n	40 <convertStringToFloat+0x40>
  34:	4603      	mov	r3, r0
  36:	f810 1b01 	ldrb.w	r1, [r0], #1
  3a:	b109      	cbz	r1, 40 <convertStringToFloat+0x40>
  3c:	292e      	cmp	r1, #46	; 0x2e
  3e:	d1f2      	bne.n	26 <convertStringToFloat+0x26>
  40:	a90c      	add	r1, sp, #48	; 0x30
  42:	188a      	adds	r2, r1, r2
  44:	2100      	movs	r1, #0
  46:	f802 1c18 	strb.w	r1, [r2, #-24]
  4a:	781a      	ldrb	r2, [r3, #0]
  4c:	2a2e      	cmp	r2, #46	; 0x2e
  4e:	bf08      	it	eq
  50:	3301      	addeq	r3, #1
  52:	f10d 32ff 	add.w	r2, sp, #4294967295
  56:	2600      	movs	r6, #0
  58:	e005      	b.n	66 <convertStringToFloat+0x66>
  5a:	3601      	adds	r6, #1
  5c:	b2f6      	uxtb	r6, r6
  5e:	2e15      	cmp	r6, #21
  60:	f802 1f01 	strb.w	r1, [r2, #1]!
  64:	d003      	beq.n	6e <convertStringToFloat+0x6e>
  66:	f813 1b01 	ldrb.w	r1, [r3], #1
  6a:	2900      	cmp	r1, #0
  6c:	d1f5      	bne.n	5a <convertStringToFloat+0x5a>
  6e:	aa0c      	add	r2, sp, #48	; 0x30
  70:	1993      	adds	r3, r2, r6
  72:	2200      	movs	r2, #0
  74:	f803 2c30 	strb.w	r2, [r3, #-48]
  78:	a806      	add	r0, sp, #24
  7a:	f7ff fffe 	bl	0 <convertStringToFloat>
  7e:	f7ff fffe 	bl	0 <__aeabi_i2d>
  82:	4680      	mov	r8, r0
  84:	4668      	mov	r0, sp
  86:	4689      	mov	r9, r1
  88:	f7ff fffe 	bl	0 <convertStringToFloat>
  8c:	f7ff fffe 	bl	0 <__aeabi_i2d>
  90:	4602      	mov	r2, r0
  92:	460b      	mov	r3, r1
  94:	e009      	b.n	aa <convertStringToFloat+0xaa>
  96:	4610      	mov	r0, r2
  98:	4619      	mov	r1, r3
  9a:	2200      	movs	r2, #0
  9c:	4b0b      	ldr	r3, [pc, #44]	; (cc <convertStringToFloat+0xcc>)
  9e:	f7ff fffe 	bl	0 <__aeabi_ddiv>
  a2:	3e01      	subs	r6, #1
  a4:	4602      	mov	r2, r0
  a6:	460b      	mov	r3, r1
  a8:	b2f6      	uxtb	r6, r6
  aa:	2e00      	cmp	r6, #0
  ac:	d1f3      	bne.n	96 <convertStringToFloat+0x96>
  ae:	4640      	mov	r0, r8
  b0:	4649      	mov	r1, r9
  b2:	f7ff fffe 	bl	0 <__aeabi_dadd>
  b6:	4622      	mov	r2, r4
  b8:	462b      	mov	r3, r5
  ba:	f7ff fffe 	bl	0 <__aeabi_dmul>
  be:	b00c      	add	sp, #48	; 0x30
  c0:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
  c4:	bff00000 	.word	0xbff00000
  c8:	3ff00000 	.word	0x3ff00000
  cc:	40240000 	.word	0x40240000

Disassembly of section .text.convertStringToPin:

00000000 <convertStringToPin>:
convertStringToPin():
   0:	41f0e92d 	.word	0x41f0e92d
   4:	4604      	mov	r4, r0
   6:	2600      	movs	r6, #0
   8:	4f28      	ldr	r7, [pc, #160]	; (ac <convertStringToPin+0xac>)
   a:	4621      	mov	r1, r4
   c:	f857 0036 	ldr.w	r0, [r7, r6, lsl #3]
  10:	f7ff fffe 	bl	0 <convertStringToPin>
  14:	ea4f 08c6 	mov.w	r8, r6, lsl #3
  18:	4605      	mov	r5, r0
  1a:	b118      	cbz	r0, 24 <convertStringToPin+0x24>
  1c:	4447      	add	r7, r8
  1e:	7938      	ldrb	r0, [r7, #4]
  20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  24:	3601      	adds	r6, #1
  26:	2e1b      	cmp	r6, #27
  28:	d1ee      	bne.n	8 <convertStringToPin+0x8>
  2a:	4620      	mov	r0, r4
  2c:	4920      	ldr	r1, [pc, #128]	; (b0 <convertStringToPin+0xb0>)
  2e:	2220      	movs	r2, #32
  30:	f7ff fffe 	bl	0 <convertStringToPin>
  34:	2800      	cmp	r0, #0
  36:	d033      	beq.n	a0 <convertStringToPin+0xa0>
  38:	4620      	mov	r0, r4
  3a:	491e      	ldr	r1, [pc, #120]	; (b4 <convertStringToPin+0xb4>)
  3c:	2220      	movs	r2, #32
  3e:	f7ff fffe 	bl	0 <convertStringToPin>
  42:	bb30      	cbnz	r0, 92 <convertStringToPin+0x92>
  44:	4620      	mov	r0, r4
  46:	491c      	ldr	r1, [pc, #112]	; (b8 <convertStringToPin+0xb8>)
  48:	2220      	movs	r2, #32
  4a:	f7ff fffe 	bl	0 <convertStringToPin>
  4e:	b9c8      	cbnz	r0, 84 <convertStringToPin+0x84>
  50:	4620      	mov	r0, r4
  52:	491a      	ldr	r1, [pc, #104]	; (bc <convertStringToPin+0xbc>)
  54:	2220      	movs	r2, #32
  56:	f7ff fffe 	bl	0 <convertStringToPin>
  5a:	b9a8      	cbnz	r0, 88 <convertStringToPin+0x88>
  5c:	4620      	mov	r0, r4
  5e:	4918      	ldr	r1, [pc, #96]	; (c0 <convertStringToPin+0xc0>)
  60:	2220      	movs	r2, #32
  62:	f7ff fffe 	bl	0 <convertStringToPin>
  66:	b988      	cbnz	r0, 8c <convertStringToPin+0x8c>
  68:	4620      	mov	r0, r4
  6a:	4916      	ldr	r1, [pc, #88]	; (c4 <convertStringToPin+0xc4>)
  6c:	2220      	movs	r2, #32
  6e:	f7ff fffe 	bl	0 <convertStringToPin>
  72:	b968      	cbnz	r0, 90 <convertStringToPin+0x90>
  74:	4620      	mov	r0, r4
  76:	4914      	ldr	r1, [pc, #80]	; (c8 <convertStringToPin+0xc8>)
  78:	2220      	movs	r2, #32
  7a:	f7ff fffe 	bl	0 <convertStringToPin>
  7e:	b190      	cbz	r0, a6 <convertStringToPin+0xa6>
  80:	2550      	movs	r5, #80	; 0x50
  82:	e006      	b.n	92 <convertStringToPin+0x92>
  84:	2510      	movs	r5, #16
  86:	e004      	b.n	92 <convertStringToPin+0x92>
  88:	2520      	movs	r5, #32
  8a:	e002      	b.n	92 <convertStringToPin+0x92>
  8c:	2530      	movs	r5, #48	; 0x30
  8e:	e000      	b.n	92 <convertStringToPin+0x92>
  90:	2540      	movs	r5, #64	; 0x40
  92:	4620      	mov	r0, r4
  94:	f7ff fffe 	bl	0 <convertStringToPin>
  98:	1828      	adds	r0, r5, r0
  9a:	b2c0      	uxtb	r0, r0
  9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  a0:	20ff      	movs	r0, #255	; 0xff
  a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  a6:	20ff      	movs	r0, #255	; 0xff
  a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  ac:	00000000 	.word	0x00000000
  b0:	00000049 	.word	0x00000049
  b4:	0000004c 	.word	0x0000004c
  b8:	0000002f 	.word	0x0000002f
  bc:	0000004f 	.word	0x0000004f
  c0:	00000035 	.word	0x00000035
  c4:	00000052 	.word	0x00000052
  c8:	00000055 	.word	0x00000055

Disassembly of section .text.convertBase64ToCode:

00000000 <convertBase64ToCode>:
convertBase64ToCode():
   0:	4603      	mov	r3, r0
   2:	3841      	subs	r0, #65	; 0x41
   4:	b2c0      	uxtb	r0, r0
   6:	2819      	cmp	r0, #25
   8:	d91c      	bls.n	44 <convertBase64ToCode+0x44>
   a:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
   e:	b2d2      	uxtb	r2, r2
  10:	2a19      	cmp	r2, #25
  12:	d801      	bhi.n	18 <convertBase64ToCode+0x18>
  14:	3b47      	subs	r3, #71	; 0x47
  16:	e005      	b.n	24 <convertBase64ToCode+0x24>
  18:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  1c:	b2d2      	uxtb	r2, r2
  1e:	2a09      	cmp	r2, #9
  20:	d802      	bhi.n	28 <convertBase64ToCode+0x28>
  22:	3304      	adds	r3, #4
  24:	b2d8      	uxtb	r0, r3
  26:	4770      	bx	lr
  28:	2b2b      	cmp	r3, #43	; 0x2b
  2a:	d008      	beq.n	3e <convertBase64ToCode+0x3e>
  2c:	2b2d      	cmp	r3, #45	; 0x2d
  2e:	d006      	beq.n	3e <convertBase64ToCode+0x3e>
  30:	2b2f      	cmp	r3, #47	; 0x2f
  32:	d006      	beq.n	42 <convertBase64ToCode+0x42>
  34:	2b5f      	cmp	r3, #95	; 0x5f
  36:	bf14      	ite	ne
  38:	2040      	movne	r0, #64	; 0x40
  3a:	203f      	moveq	r0, #63	; 0x3f
  3c:	4770      	bx	lr
  3e:	203e      	movs	r0, #62	; 0x3e
  40:	4770      	bx	lr
  42:	203f      	movs	r0, #63	; 0x3f
  44:	4770      	bx	lr

Disassembly of section .text.convertHexCharToInteger:

00000000 <convertHexCharToInteger>:
convertHexCharToInteger():
   0:	4602      	mov	r2, r0
   2:	4b06      	ldr	r3, [pc, #24]	; (1c <convertHexCharToInteger+0x1c>)
   4:	2000      	movs	r0, #0
   6:	e003      	b.n	10 <convertHexCharToInteger+0x10>
   8:	3001      	adds	r0, #1
   a:	b280      	uxth	r0, r0
   c:	2810      	cmp	r0, #16
   e:	d003      	beq.n	18 <convertHexCharToInteger+0x18>
  10:	f813 1f01 	ldrb.w	r1, [r3, #1]!
  14:	4291      	cmp	r1, r2
  16:	d1f7      	bne.n	8 <convertHexCharToInteger+0x8>
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	000000df 	.word	0x000000df

Disassembly of section .text.convertHexEncodedStringToBuffer:

00000000 <convertHexEncodedStringToBuffer>:
convertHexEncodedStringToBuffer():
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
   4:	460e      	mov	r6, r1
   6:	2500      	movs	r5, #0
   8:	e00b      	b.n	22 <convertHexEncodedStringToBuffer+0x22>
   a:	f7ff fffe 	bl	0 <convertHexEncodedStringToBuffer>
   e:	0100      	lsls	r0, r0, #4
  10:	b2c7      	uxtb	r7, r0
  12:	7860      	ldrb	r0, [r4, #1]
  14:	f7ff fffe 	bl	0 <convertHexEncodedStringToBuffer>
  18:	1838      	adds	r0, r7, r0
  1a:	5570      	strb	r0, [r6, r5]
  1c:	3501      	adds	r5, #1
  1e:	3402      	adds	r4, #2
  20:	b2ad      	uxth	r5, r5
  22:	7820      	ldrb	r0, [r4, #0]
  24:	2800      	cmp	r0, #0
  26:	d1f0      	bne.n	a <convertHexEncodedStringToBuffer+0xa>
  28:	4628      	mov	r0, r5
  2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.convertBase64ToBuffer:

00000000 <convertBase64ToBuffer>:
convertBase64ToBuffer():
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   4:	4603      	mov	r3, r0
   6:	4689      	mov	r9, r1
   8:	2700      	movs	r7, #0
   a:	e02b      	b.n	64 <convertBase64ToBuffer+0x64>
   c:	f7ff fffe 	bl	0 <convertBase64ToBuffer>
  10:	2840      	cmp	r0, #64	; 0x40
  12:	d104      	bne.n	1e <convertBase64ToBuffer+0x1e>
  14:	f108 0801 	add.w	r8, r8, #1
  18:	fa1f f888 	uxth.w	r8, r8
  1c:	e001      	b.n	22 <convertBase64ToBuffer+0x22>
  1e:	40a8      	lsls	r0, r5
  20:	1824      	adds	r4, r4, r0
  22:	3d06      	subs	r5, #6
  24:	f115 0f06 	cmn.w	r5, #6
  28:	4633      	mov	r3, r6
  2a:	d101      	bne.n	30 <convertBase64ToBuffer+0x30>
  2c:	2200      	movs	r2, #0
  2e:	e015      	b.n	5c <convertBase64ToBuffer+0x5c>
  30:	4633      	mov	r3, r6
  32:	f816 0b01 	ldrb.w	r0, [r6], #1
  36:	2800      	cmp	r0, #0
  38:	d1e8      	bne.n	c <convertBase64ToBuffer+0xc>
  3a:	e7f7      	b.n	2c <convertBase64ToBuffer+0x2c>
  3c:	f1c2 0102 	rsb	r1, r2, #2
  40:	00c9      	lsls	r1, r1, #3
  42:	fa34 f101 	lsrs.w	r1, r4, r1
  46:	480c      	ldr	r0, [pc, #48]	; (78 <convertBase64ToBuffer+0x78>)
  48:	b2c9      	uxtb	r1, r1
  4a:	1841      	adds	r1, r0, r1
  4c:	f891 10f0 	ldrb.w	r1, [r1, #240]	; 0xf0
  50:	3201      	adds	r2, #1
  52:	3701      	adds	r7, #1
  54:	f809 1b01 	strb.w	r1, [r9], #1
  58:	b292      	uxth	r2, r2
  5a:	b2bf      	uxth	r7, r7
  5c:	f1c8 0103 	rsb	r1, r8, #3
  60:	428a      	cmp	r2, r1
  62:	dbeb      	blt.n	3c <convertBase64ToBuffer+0x3c>
  64:	781a      	ldrb	r2, [r3, #0]
  66:	b122      	cbz	r2, 72 <convertBase64ToBuffer+0x72>
  68:	2400      	movs	r4, #0
  6a:	461e      	mov	r6, r3
  6c:	2512      	movs	r5, #18
  6e:	46a0      	mov	r8, r4
  70:	e7de      	b.n	30 <convertBase64ToBuffer+0x30>
  72:	4638      	mov	r0, r7
  74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  78:	00000000 	.word	0x00000000

Disassembly of section .text.convertBase64ToString:

00000000 <convertBase64ToString>:
convertBase64ToString():
   0:	41f0e92d 	.word	0x41f0e92d
   4:	4603      	mov	r3, r0
   6:	460f      	mov	r7, r1
   8:	e029      	b.n	5e <convertBase64ToString+0x5e>
   a:	f7ff fffe 	bl	0 <convertBase64ToString>
   e:	2840      	cmp	r0, #64	; 0x40
  10:	d104      	bne.n	1c <convertBase64ToString+0x1c>
  12:	f108 0801 	add.w	r8, r8, #1
  16:	fa1f f888 	uxth.w	r8, r8
  1a:	e001      	b.n	20 <convertBase64ToString+0x20>
  1c:	40a8      	lsls	r0, r5
  1e:	1824      	adds	r4, r4, r0
  20:	3d06      	subs	r5, #6
  22:	f115 0f06 	cmn.w	r5, #6
  26:	4633      	mov	r3, r6
  28:	d101      	bne.n	2e <convertBase64ToString+0x2e>
  2a:	2200      	movs	r2, #0
  2c:	e013      	b.n	56 <convertBase64ToString+0x56>
  2e:	4633      	mov	r3, r6
  30:	f816 0b01 	ldrb.w	r0, [r6], #1
  34:	2800      	cmp	r0, #0
  36:	d1e8      	bne.n	a <convertBase64ToString+0xa>
  38:	e7f7      	b.n	2a <convertBase64ToString+0x2a>
  3a:	f1c2 0102 	rsb	r1, r2, #2
  3e:	00c9      	lsls	r1, r1, #3
  40:	fa34 f101 	lsrs.w	r1, r4, r1
  44:	480b      	ldr	r0, [pc, #44]	; (74 <convertBase64ToString+0x74>)
  46:	b2c9      	uxtb	r1, r1
  48:	1841      	adds	r1, r0, r1
  4a:	f891 10f0 	ldrb.w	r1, [r1, #240]	; 0xf0
  4e:	3201      	adds	r2, #1
  50:	f807 1b01 	strb.w	r1, [r7], #1
  54:	b292      	uxth	r2, r2
  56:	f1c8 0103 	rsb	r1, r8, #3
  5a:	428a      	cmp	r2, r1
  5c:	dbed      	blt.n	3a <convertBase64ToString+0x3a>
  5e:	781a      	ldrb	r2, [r3, #0]
  60:	b122      	cbz	r2, 6c <convertBase64ToString+0x6c>
  62:	2400      	movs	r4, #0
  64:	461e      	mov	r6, r3
  66:	2512      	movs	r5, #18
  68:	46a0      	mov	r8, r4
  6a:	e7e0      	b.n	2e <convertBase64ToString+0x2e>
  6c:	703a      	strb	r2, [r7, #0]
  6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  72:	bf00      	nop
  74:	00000000 	.word	0x00000000

Disassembly of section .text.convertStringToBase64:

00000000 <convertStringToBase64>:
convertStringToBase64():
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
   6:	f7ff fffe 	bl	0 <convertStringToBase64>
   a:	2303      	movs	r3, #3
   c:	fbb0 f3f3 	udiv	r3, r0, r3
  10:	eb03 0343 	add.w	r3, r3, r3, lsl #1
  14:	1ac0      	subs	r0, r0, r3
  16:	f1c0 0003 	rsb	r0, r0, #3
  1a:	b280      	uxth	r0, r0
  1c:	e022      	b.n	64 <convertStringToBase64+0x64>
  1e:	1852      	adds	r2, r2, r1
  20:	3401      	adds	r4, #1
  22:	2100      	movs	r1, #0
  24:	e000      	b.n	28 <convertStringToBase64+0x28>
  26:	4601      	mov	r1, r0
  28:	2300      	movs	r3, #0
  2a:	e00f      	b.n	4c <convertStringToBase64+0x4c>
  2c:	f06f 0605 	mvn.w	r6, #5
  30:	435e      	muls	r6, r3
  32:	3612      	adds	r6, #18
  34:	fa32 f606 	lsrs.w	r6, r2, r6
  38:	4f12      	ldr	r7, [pc, #72]	; (84 <convertStringToBase64+0x84>)
  3a:	f006 063f 	and.w	r6, r6, #63	; 0x3f
  3e:	19be      	adds	r6, r7, r6
  40:	f896 60f0 	ldrb.w	r6, [r6, #240]	; 0xf0
  44:	3301      	adds	r3, #1
  46:	f805 6b01 	strb.w	r6, [r5], #1
  4a:	b29b      	uxth	r3, r3
  4c:	f1c1 0604 	rsb	r6, r1, #4
  50:	42b3      	cmp	r3, r6
  52:	dbeb      	blt.n	2c <convertStringToBase64+0x2c>
  54:	e004      	b.n	60 <convertStringToBase64+0x60>
  56:	223d      	movs	r2, #61	; 0x3d
  58:	3301      	adds	r3, #1
  5a:	f805 2b01 	strb.w	r2, [r5], #1
  5e:	b29b      	uxth	r3, r3
  60:	2b03      	cmp	r3, #3
  62:	d9f8      	bls.n	56 <convertStringToBase64+0x56>
  64:	7822      	ldrb	r2, [r4, #0]
  66:	b15a      	cbz	r2, 80 <convertStringToBase64+0x80>
  68:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  6c:	0412      	lsls	r2, r2, #16
  6e:	2900      	cmp	r1, #0
  70:	d0d9      	beq.n	26 <convertStringToBase64+0x26>
  72:	0209      	lsls	r1, r1, #8
  74:	1852      	adds	r2, r2, r1
  76:	f814 1f01 	ldrb.w	r1, [r4, #1]!
  7a:	2900      	cmp	r1, #0
  7c:	d1cf      	bne.n	1e <convertStringToBase64+0x1e>
  7e:	e7d2      	b.n	26 <convertStringToBase64+0x26>
  80:	702a      	strb	r2, [r5, #0]
  82:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  84:	00000000 	.word	0x00000000
