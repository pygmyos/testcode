
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_adc.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_adc.o


Disassembly of section .text.adcGetStatus:

00000000 <adcGetStatus>:
adcGetStatus():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:29
u16 uiGlobalADC1Channel, uiGlobalADC1[ 16 ], globalADCStatus = 0;

u16 adcGetStatus( void )
{
    return( globalADCStatus );
}
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <adcGetStatus+0x8>)
   2:	8818      	ldrh	r0, [r3, #0]
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	00000000 	.word	0x00000000

Disassembly of section .text.ADC1_2_IRQHandler:

00000000 <ADC1_2_IRQHandler>:
ADC1_2_IRQHandler():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:32

void ADC1_2_IRQHandler( void )
{
   0:	b508      	push	{r3, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:35
    u16 i;

    if( ADC1->SR & ADC_EOC ){
   2:	4b07      	ldr	r3, [pc, #28]	; (20 <ADC1_2_IRQHandler+0x20>)
   4:	681a      	ldr	r2, [r3, #0]
   6:	f012 0f02 	tst.w	r2, #2
   a:	d004      	beq.n	16 <ADC1_2_IRQHandler+0x16>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:36
        print( COM3, "( %d )", ADC1->DR );
   c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
   e:	2001      	movs	r0, #1
  10:	4904      	ldr	r1, [pc, #16]	; (24 <ADC1_2_IRQHandler+0x24>)
  12:	f7ff fffe 	bl	0 <print>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:41
        //uiGlobalADC1[ uiGlobalADC1Channel++ ] = ADC1->DR;
        
    } // if
    
    ADC1->SR = 0x00;
  16:	4b02      	ldr	r3, [pc, #8]	; (20 <ADC1_2_IRQHandler+0x20>)
  18:	2200      	movs	r2, #0
  1a:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:43
        
}
  1c:	bd08      	pop	{r3, pc}
  1e:	bf00      	nop
  20:	40012400 	.word	0x40012400
  24:	00000000 	.word	0x00000000

Disassembly of section .text.DMAChannel1_IRQHandler:

00000000 <DMAChannel1_IRQHandler>:
DMAChannel1_IRQHandler():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:46

void DMAChannel1_IRQHandler( void )
{
   0:	b510      	push	{r4, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:49
    u16 i;

    if( DMA1->ISR & BIT3 ){
   2:	4b0a      	ldr	r3, [pc, #40]	; (2c <DMAChannel1_IRQHandler+0x2c>)
   4:	681b      	ldr	r3, [r3, #0]
   6:	f013 0f08 	tst.w	r3, #8
   a:	d00d      	beq.n	28 <DMAChannel1_IRQHandler+0x28>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:50
        print( COM3, "\r" );
   c:	2001      	movs	r0, #1
   e:	4908      	ldr	r1, [pc, #32]	; (30 <DMAChannel1_IRQHandler+0x30>)
  10:	f7ff fffe 	bl	0 <print>
  14:	2400      	movs	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:52
        for( i = 0; i < 16; i++ ){
            print( COM3, " %d", uiGlobalADC1[ i ]  );
  16:	4b07      	ldr	r3, [pc, #28]	; (34 <DMAChannel1_IRQHandler+0x34>)
  18:	2001      	movs	r0, #1
  1a:	5b1a      	ldrh	r2, [r3, r4]
  1c:	4906      	ldr	r1, [pc, #24]	; (38 <DMAChannel1_IRQHandler+0x38>)
  1e:	3402      	adds	r4, #2
  20:	f7ff fffe 	bl	0 <print>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:51
{
    u16 i;

    if( DMA1->ISR & BIT3 ){
        print( COM3, "\r" );
        for( i = 0; i < 16; i++ ){
  24:	2c20      	cmp	r4, #32
  26:	d1f6      	bne.n	16 <DMAChannel1_IRQHandler+0x16>
  28:	bd10      	pop	{r4, pc}
  2a:	bf00      	nop
  2c:	40020000 	.word	0x40020000
  30:	00000007 	.word	0x00000007
  34:	00000000 	.word	0x00000000
  38:	00000009 	.word	0x00000009

Disassembly of section .text.adcInit:

00000000 <adcInit>:
adcInit():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:59
    }
    //DMA1->IFCR = 0x0000000F;
}

void adcInit( void ) //u32 ulScan )
{
   0:	b510      	push	{r4, lr}
   2:	2100      	movs	r1, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:64
    // ADC1 uses DMA1 Channel1 to manage Data Register after conversion
    u16 i;

    for( i = 0; i< 16; i++ ){
        uiGlobalADC1[ i ] = 0;
   4:	4813      	ldr	r0, [pc, #76]	; (54 <adcInit+0x54>)
   6:	2200      	movs	r2, #0
   8:	520a      	strh	r2, [r1, r0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:65
        ADC1->SQR1 = 0;
   a:	4b13      	ldr	r3, [pc, #76]	; (58 <adcInit+0x58>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:69
        ADC1->SQR2 = 0;
        ADC1->SQR3 = 0;
        ADC1->SMPR1 = 0;
        ADC1->SMPR2 = 0;
   c:	3102      	adds	r1, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:63
void adcInit( void ) //u32 ulScan )
{
    // ADC1 uses DMA1 Channel1 to manage Data Register after conversion
    u16 i;

    for( i = 0; i< 16; i++ ){
   e:	2920      	cmp	r1, #32
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:65
        uiGlobalADC1[ i ] = 0;
        ADC1->SQR1 = 0;
  10:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:66
        ADC1->SQR2 = 0;
  12:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:67
        ADC1->SQR3 = 0;
  14:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:68
        ADC1->SMPR1 = 0;
  16:	60da      	str	r2, [r3, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:69
        ADC1->SMPR2 = 0;
  18:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:63
void adcInit( void ) //u32 ulScan )
{
    // ADC1 uses DMA1 Channel1 to manage Data Register after conversion
    u16 i;

    for( i = 0; i< 16; i++ ){
  1a:	d1f3      	bne.n	4 <adcInit+0x4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:71
        ADC1->SQR2 = 0;
        ADC1->SQR3 = 0;
        ADC1->SMPR1 = 0;
        ADC1->SMPR2 = 0;
    } // for
    PYGMY_RCC_ADC1_ENABLE;
  1c:	490f      	ldr	r1, [pc, #60]	; (5c <adcInit+0x5c>)
  1e:	698c      	ldr	r4, [r1, #24]
  20:	f444 7400 	orr.w	r4, r4, #512	; 0x200
  24:	618c      	str	r4, [r1, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:72
    PYGMY_RCC_DMA1_ENABLE;
  26:	694c      	ldr	r4, [r1, #20]
  28:	f044 0401 	orr.w	r4, r4, #1
  2c:	614c      	str	r4, [r1, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:73
    PYGMY_DMA1_CH1_DISABLE;
  2e:	490c      	ldr	r1, [pc, #48]	; (60 <adcInit+0x60>)
  30:	680c      	ldr	r4, [r1, #0]
  32:	f024 0401 	bic.w	r4, r4, #1
  36:	600c      	str	r4, [r1, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:80
    //enableInterrupt( ADC_IRQ );
    //enableInterrupt( DMAChannel1_IRQ );
    //setInterruptPriority( DMAChannel1_IRQ, 1 );
    //setInterruptPriority( ADC_IRQ, 1 );

    ADC1->CR1 = ADC_SCAN;//BIT5; // Enable EOC Interrupt 
  38:	f44f 7480 	mov.w	r4, #256	; 0x100
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:74
        ADC1->SMPR2 = 0;
    } // for
    PYGMY_RCC_ADC1_ENABLE;
    PYGMY_RCC_DMA1_ENABLE;
    PYGMY_DMA1_CH1_DISABLE;
    ADC1->CR2 = 0x00;       // Clear ADC if already in use
  3c:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:80
    //enableInterrupt( ADC_IRQ );
    //enableInterrupt( DMAChannel1_IRQ );
    //setInterruptPriority( DMAChannel1_IRQ, 1 );
    //setInterruptPriority( ADC_IRQ, 1 );

    ADC1->CR1 = ADC_SCAN;//BIT5; // Enable EOC Interrupt 
  3e:	605c      	str	r4, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:83
    
    //ADC1->CR2 |= (BIT20|BIT19|BIT18|BIT17); // Software trigger
    ADC1->CR2 = (ADC_DMA|ADC_EXTTRIG|ADC_EXTSEL_SWSTART|ADC_ADON); // Start ADC with Calibration
  40:	4c08      	ldr	r4, [pc, #32]	; (64 <adcInit+0x64>)
  42:	609c      	str	r4, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:88
    //ADC1->CR2 = ADC_ADON;
    //while( !(ADC1->CR2 & ADC_CAL) ); // Wait for Calibration to complete
    //print( COM3, "\rADC Ready..." );
    
    DMA1_CH1->CPAR = (volatile u32)(volatile u32*)ADC1->DR; // Peripheral Register Pointer
  44:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
  46:	608b      	str	r3, [r1, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:91
    DMA1_CH1->CMAR = (volatile u32)(volatile u32*)uiGlobalADC1; // Destination Memory Address
    DMA1_CH1->CNDTR = 0; // Number of values to transfer
    DMA1_CH1->CCR = ( DMA_MSIZE16 | DMA_PSIZE16 | DMA_MINC | DMA_CIRC );   
  48:	f44f 63b4 	mov.w	r3, #1440	; 0x5a0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:89
    //ADC1->CR2 = ADC_ADON;
    //while( !(ADC1->CR2 & ADC_CAL) ); // Wait for Calibration to complete
    //print( COM3, "\rADC Ready..." );
    
    DMA1_CH1->CPAR = (volatile u32)(volatile u32*)ADC1->DR; // Peripheral Register Pointer
    DMA1_CH1->CMAR = (volatile u32)(volatile u32*)uiGlobalADC1; // Destination Memory Address
  4c:	60c8      	str	r0, [r1, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:90
    DMA1_CH1->CNDTR = 0; // Number of values to transfer
  4e:	604a      	str	r2, [r1, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:91
    DMA1_CH1->CCR = ( DMA_MSIZE16 | DMA_PSIZE16 | DMA_MINC | DMA_CIRC );   
  50:	600b      	str	r3, [r1, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:92
}
  52:	bd10      	pop	{r4, pc}
  54:	00000000 	.word	0x00000000
  58:	40012400 	.word	0x40012400
  5c:	40021000 	.word	0x40021000
  60:	40020008 	.word	0x40020008
  64:	001e0101 	.word	0x001e0101

Disassembly of section .text.adcStart:

00000000 <adcStart>:
adcStart():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:97

void adcStart( void )
{
    //ADC1->CR2 |= ADC_ADON;   // Start Single Conversion
    ADC1->CR2 |= ADC_SWSTART;
   0:	689a4b02 	.word	0x689a4b02
   4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
   8:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:98
}
   a:	4770      	bx	lr
   c:	40012400 	.word	0x40012400

Disassembly of section .text.adcSetSampleTime:

00000000 <adcSetSampleTime>:
adcSetSampleTime():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:108

    //ucInput = 
    
    //ADC1->SMPR1 = 
    //ADC1->SMPR2 = 
}
   0:	4770      	bx	lr

Disassembly of section .text.adcGetSQR:

00000000 <adcGetSQR>:
adcGetSQR():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:144
u8 adcGetSQR( u8 ucIndex )
{
    // Note!!! This function uses a 1 base index, i.e. SQ1, etc., to match the ST datasheets
    u8 ucSQR;
    
    if( ucIndex < 7 ){
   0:	2806      	cmp	r0, #6
   2:	4b0c      	ldr	r3, [pc, #48]	; (34 <adcGetSQR+0x34>)
   4:	d804      	bhi.n	10 <adcGetSQR+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:145
        ucSQR = ADC1->SQR1 >> ( ( ucIndex - 1 ) * 5 );
   6:	3801      	subs	r0, #1
   8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
   a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   e:	e00a      	b.n	26 <adcGetSQR+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:146
    } else if( ucIndex < 13 ){
  10:	280c      	cmp	r0, #12
  12:	ea4f 0280 	mov.w	r2, r0, lsl #2
  16:	d803      	bhi.n	20 <adcGetSQR+0x20>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:147
        ucSQR = ADC1->SQR2 >> ( ( ucIndex - 7 ) * 5 );
  18:	1810      	adds	r0, r2, r0
  1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  1c:	3823      	subs	r0, #35	; 0x23
  1e:	e002      	b.n	26 <adcGetSQR+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:149
    } else{
        ucSQR = ADC1->SQR3 >> ( ( ucIndex - 13 ) * 5 );
  20:	1810      	adds	r0, r2, r0
  22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  24:	3841      	subs	r0, #65	; 0x41
  26:	fa33 f000 	lsrs.w	r0, r3, r0
  2a:	b2c0      	uxtb	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:153
    } // else
    
    return( ucSQR & 0x1F ); // Mask the 5 bit register value
}
  2c:	f000 001f 	and.w	r0, r0, #31
  30:	4770      	bx	lr
  32:	bf00      	nop
  34:	40012400 	.word	0x40012400

Disassembly of section .text.adcDisableChannel:

00000000 <adcDisableChannel>:
adcDisableChannel():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:158

u8 adcDisableChannel( u8 ucChannel )
{

}
   0:	4770      	bx	lr

Disassembly of section .text.adcDisableAll:

00000000 <adcDisableAll>:
adcDisableAll():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:163

void adcDisableAll( u8 ucChannel )
{

}
   0:	4770      	bx	lr

Disassembly of section .text.adcSingleSampleInit:

00000000 <adcSingleSampleInit>:
adcSingleSampleInit():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:169

void adcSingleSampleInit( void )
{
    //u16 i;

    PYGMY_RCC_ADC1_ENABLE;
   0:	4b0c      	ldr	r3, [pc, #48]	; (34 <adcSingleSampleInit+0x34>)
   2:	699a      	ldr	r2, [r3, #24]
   4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
   8:	619a      	str	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:170
    ADC1->CR2 = 0;
   a:	4b0b      	ldr	r3, [pc, #44]	; (38 <adcSingleSampleInit+0x38>)
   c:	2200      	movs	r2, #0
   e:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:171
    ADC1->SR = 0;
  10:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:172
    ADC1->CR1 = 0;
  12:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:173
    ADC1->SMPR1 = 0;
  14:	60da      	str	r2, [r3, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:174
    ADC1->SMPR2 = 0;
  16:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:175
    ADC1->SQR1 = 0;
  18:	62da      	str	r2, [r3, #44]	; 0x2c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:176
    ADC1->SQR2 = 0;
  1a:	631a      	str	r2, [r3, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:177
    ADC1->SQR3 = 0;
  1c:	635a      	str	r2, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:178
    ADC1->CR2 = (ADC_CAL|ADC_EXTTRIG|ADC_EXTSEL_SWSTART|ADC_ADON);
  1e:	4a07      	ldr	r2, [pc, #28]	; (3c <adcSingleSampleInit+0x3c>)
  20:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:179
    while( ADC1->CR2 & ADC_CAL );
  22:	4b05      	ldr	r3, [pc, #20]	; (38 <adcSingleSampleInit+0x38>)
  24:	689b      	ldr	r3, [r3, #8]
  26:	f013 0f04 	tst.w	r3, #4
  2a:	d1fa      	bne.n	22 <adcSingleSampleInit+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:180
    globalADCStatus = BIT0;
  2c:	4b04      	ldr	r3, [pc, #16]	; (40 <adcSingleSampleInit+0x40>)
  2e:	2201      	movs	r2, #1
  30:	801a      	strh	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:185
    //for( i = 0; i < 10; i++ ){
    //    adcSingleSample( ADCREF );
    //} // for
    
}
  32:	4770      	bx	lr
  34:	40021000 	.word	0x40021000
  38:	40012400 	.word	0x40012400
  3c:	001e0005 	.word	0x001e0005
  40:	00000000 	.word	0x00000000

Disassembly of section .text.adcGetChannelFromPin:

00000000 <adcGetChannelFromPin>:
adcGetChannelFromPin():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:209
        if( PYGMY_ADC_CHANNELS[ i ] == ucPin ){
            return( i );
        } // if
    } // for

    return( 0 );
   0:	46024b06 	.word	0x46024b06
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:203

u8 adcGetChannelFromPin( u8 ucPin )
{
    u8 i;

    for( i = 0; i < 18; i++ ){
   4:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:204
        if( PYGMY_ADC_CHANNELS[ i ] == ucPin ){
   6:	f813 1f01 	ldrb.w	r1, [r3, #1]!
   a:	4291      	cmp	r1, r2
   c:	d004      	beq.n	18 <adcGetChannelFromPin+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:203

u8 adcGetChannelFromPin( u8 ucPin )
{
    u8 i;

    for( i = 0; i < 18; i++ ){
   e:	3001      	adds	r0, #1
  10:	b2c0      	uxtb	r0, r0
  12:	2812      	cmp	r0, #18
  14:	d1f7      	bne.n	6 <adcGetChannelFromPin+0x6>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:209
        if( PYGMY_ADC_CHANNELS[ i ] == ucPin ){
            return( i );
        } // if
    } // for

    return( 0 );
  16:	3812      	subs	r0, #18
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:210
}
  18:	4770      	bx	lr
  1a:	bf00      	nop
  1c:	ffffffff 	.word	0xffffffff

Disassembly of section .text.adcSingleSample:

00000000 <adcSingleSample>:
adcSingleSample():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:188
    //} // for
    
}

u16 adcSingleSample( u8 ucPin )
{
   0:	b508      	push	{r3, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:191
    u16 uiADC;

    ADC1->SQR3 = adcGetChannelFromPin( ucPin );
   2:	f7ff fffe 	bl	0 <adcSingleSample>
   6:	4b08      	ldr	r3, [pc, #32]	; (28 <adcSingleSample+0x28>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:192
    ADC1->SR = 0;
   8:	2200      	movs	r2, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:191

u16 adcSingleSample( u8 ucPin )
{
    u16 uiADC;

    ADC1->SQR3 = adcGetChannelFromPin( ucPin );
   a:	6358      	str	r0, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:192
    ADC1->SR = 0;
   c:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:193
    ADC1->CR2 |= (ADC_ADON);
   e:	689a      	ldr	r2, [r3, #8]
  10:	f042 0201 	orr.w	r2, r2, #1
  14:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:194
    while( !( ADC1->SR & ADC_EOC ) );    
  16:	4b04      	ldr	r3, [pc, #16]	; (28 <adcSingleSample+0x28>)
  18:	681a      	ldr	r2, [r3, #0]
  1a:	f012 0f02 	tst.w	r2, #2
  1e:	d0fa      	beq.n	16 <adcSingleSample+0x16>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:195
    uiADC = ADC1->DR;
  20:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:197
    return( uiADC ); 
}
  22:	b280      	uxth	r0, r0
  24:	bd08      	pop	{r3, pc}
  26:	bf00      	nop
  28:	40012400 	.word	0x40012400

Disassembly of section .text.adcEnableChannel:

00000000 <adcEnableChannel>:
adcEnableChannel():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:111
    //ADC1->SMPR1 = 
    //ADC1->SMPR2 = 
}

u8 adcEnableChannel( u8 ucPin ) 
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:115
    u16 i;
    u8 ucChannel;

    ucChannel = adcGetChannelFromPin( ucPin ) + 1;
   2:	f7ff fffe 	bl	0 <adcEnableChannel>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:116
    for( i = 1; i < 17; i++ ){
   6:	2401      	movs	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:115
u8 adcEnableChannel( u8 ucPin ) 
{
    u16 i;
    u8 ucChannel;

    ucChannel = adcGetChannelFromPin( ucPin ) + 1;
   8:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:117
    for( i = 1; i < 17; i++ ){
        if( !adcGetSQR( i ) ){
   a:	b2e0      	uxtb	r0, r4
   c:	f7ff fffe 	bl	0 <adcEnableChannel>
  10:	b928      	cbnz	r0, 1e <adcEnableChannel+0x1e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:115
u8 adcEnableChannel( u8 ucPin ) 
{
    u16 i;
    u8 ucChannel;

    ucChannel = adcGetChannelFromPin( ucPin ) + 1;
  12:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:125
    } // for
    if( i == 17 ) {
        return( 0 ); // No empty channels
    } // if

    if( i < 7 ){
  14:	2c06      	cmp	r4, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:115
u8 adcEnableChannel( u8 ucPin ) 
{
    u16 i;
    u8 ucChannel;

    ucChannel = adcGetChannelFromPin( ucPin ) + 1;
  16:	b2ed      	uxtb	r5, r5
  18:	4b12      	ldr	r3, [pc, #72]	; (64 <adcEnableChannel+0x64>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:125
    } // for
    if( i == 17 ) {
        return( 0 ); // No empty channels
    } // if

    if( i < 7 ){
  1a:	d80e      	bhi.n	3a <adcEnableChannel+0x3a>
  1c:	e005      	b.n	2a <adcEnableChannel+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:116
{
    u16 i;
    u8 ucChannel;

    ucChannel = adcGetChannelFromPin( ucPin ) + 1;
    for( i = 1; i < 17; i++ ){
  1e:	3401      	adds	r4, #1
  20:	b2a4      	uxth	r4, r4
  22:	2c11      	cmp	r4, #17
  24:	d1f1      	bne.n	a <adcEnableChannel+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:122
        if( !adcGetSQR( i ) ){
            break; // found empty channel
        } // if
    } // for
    if( i == 17 ) {
        return( 0 ); // No empty channels
  26:	2000      	movs	r0, #0
  28:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:126
    } // if

    if( i < 7 ){
        ADC1->SQR1 |= ( ucChannel << ( ( i - 1 ) * 5 ) );
  2a:	3c01      	subs	r4, #1
  2c:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  30:	40a5      	lsls	r5, r4
  32:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  34:	4315      	orrs	r5, r2
  36:	62dd      	str	r5, [r3, #44]	; 0x2c
  38:	e009      	b.n	4e <adcEnableChannel+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:127
    } else if( i < 13 ){
  3a:	2c0c      	cmp	r4, #12
  3c:	ea4f 0284 	mov.w	r2, r4, lsl #2
  40:	d807      	bhi.n	52 <adcEnableChannel+0x52>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:128
        ADC1->SQR2 |= ( ucChannel << ( ( i - 7 ) * 5 ) );
  42:	1912      	adds	r2, r2, r4
  44:	3a23      	subs	r2, #35	; 0x23
  46:	4095      	lsls	r5, r2
  48:	6b19      	ldr	r1, [r3, #48]	; 0x30
  4a:	430d      	orrs	r5, r1
  4c:	631d      	str	r5, [r3, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:136
    } // else
    //PYGMY_DMA1_CH1_DISABLE;
    //DMA1_CH1->CNDTR += 1;
    //DMA1_CH1->CCR |= DMA_EN;  

    return( 1 );
  4e:	2001      	movs	r0, #1
  50:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:130
    if( i < 7 ){
        ADC1->SQR1 |= ( ucChannel << ( ( i - 1 ) * 5 ) );
    } else if( i < 13 ){
        ADC1->SQR2 |= ( ucChannel << ( ( i - 7 ) * 5 ) );
    } else{
        ADC1->SQR3 |= ( ucChannel << ( ( i - 13 ) * 5 ) );
  52:	1912      	adds	r2, r2, r4
  54:	3a41      	subs	r2, #65	; 0x41
  56:	4095      	lsls	r5, r2
  58:	6b59      	ldr	r1, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:136
    } // else
    //PYGMY_DMA1_CH1_DISABLE;
    //DMA1_CH1->CNDTR += 1;
    //DMA1_CH1->CCR |= DMA_EN;  

    return( 1 );
  5a:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:130
    if( i < 7 ){
        ADC1->SQR1 |= ( ucChannel << ( ( i - 1 ) * 5 ) );
    } else if( i < 13 ){
        ADC1->SQR2 |= ( ucChannel << ( ( i - 7 ) * 5 ) );
    } else{
        ADC1->SQR3 |= ( ucChannel << ( ( i - 13 ) * 5 ) );
  5c:	430d      	orrs	r5, r1
  5e:	635d      	str	r5, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:137
    //PYGMY_DMA1_CH1_DISABLE;
    //DMA1_CH1->CNDTR += 1;
    //DMA1_CH1->CCR |= DMA_EN;  

    return( 1 );
}
  60:	bd38      	pop	{r3, r4, r5, pc}
  62:	bf00      	nop
  64:	40012400 	.word	0x40012400

Disassembly of section .text.adcGet:

00000000 <adcGet>:
adcGet():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_adc.c:215
}

u16 adcGet( u8 ucChannel )
{
    
}
   0:	4770      	bx	lr
