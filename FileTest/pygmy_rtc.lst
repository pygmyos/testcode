
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_rtc.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_rtc.o


Disassembly of section .text.resetBackupDomain:

00000000 <resetBackupDomain>:
resetBackupDomain():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:28
//-------------------------------------------------------------------------------------
//------------------------------------Pygmy OS Time------------------------------------

void resetBackupDomain( void )
{
    RCC->BDCR = BIT16; // Sets reset bit, BDCR will be 0 after reset
   0:	4b02      	ldr	r3, [pc, #8]	; (c <resetBackupDomain+0xc>)
   2:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   6:	621a      	str	r2, [r3, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:29
}
   8:	4770      	bx	lr
   a:	bf00      	nop
   c:	40021000 	.word	0x40021000

Disassembly of section .text.timeInit:

00000000 <timeInit>:
timeInit():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:43
    // 4. Clear the CNF bit to exit configuration mode
    //5. Poll RTOFF, wait until its value goes to ‘1’ to check the end of the write operation.
    
    // Use the following line as a Macro if needed
        //RCC->BDCR &= ~BIT16; // Reset Backup Domain
    PYGMY_RCC_PWR_ENABLE;
   0:	4b25      	ldr	r3, [pc, #148]	; (98 <timeInit+0x98>)
   2:	69da      	ldr	r2, [r3, #28]
   4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
   8:	61da      	str	r2, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:44
    PYGMY_RCC_BKP_ENABLE;
   a:	69da      	ldr	r2, [r3, #28]
   c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
  10:	61da      	str	r2, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:45
    PWR->CR |= BIT8;     // Disables Backup Domain/ RTC register write protection
  12:	4a22      	ldr	r2, [pc, #136]	; (9c <timeInit+0x9c>)
  14:	6811      	ldr	r1, [r2, #0]
  16:	f441 7180 	orr.w	r1, r1, #256	; 0x100
  1a:	6011      	str	r1, [r2, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:46
    PYGMY_RCC_LSE_ENABLE;
  1c:	681a      	ldr	r2, [r3, #0]
  1e:	f042 0201 	orr.w	r2, r2, #1
  22:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:47
    RCC->BDCR |= ( BIT0 | BIT8 | BIT15 );
  24:	6a19      	ldr	r1, [r3, #32]
  26:	f248 1201 	movw	r2, #33025	; 0x8101
  2a:	ea41 0202 	orr.w	r2, r1, r2
  2e:	621a      	str	r2, [r3, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:48
    for( i = 0; !(RCC->BDCR & BIT1) && i < 20; i++ ){;} // wait for LSE clock to stabilize
  30:	2300      	movs	r3, #0
  32:	e001      	b.n	38 <timeInit+0x38>
  34:	3301      	adds	r3, #1
  36:	b29b      	uxth	r3, r3
  38:	4a17      	ldr	r2, [pc, #92]	; (98 <timeInit+0x98>)
  3a:	6a12      	ldr	r2, [r2, #32]
  3c:	f012 0202 	ands.w	r2, r2, #2
  40:	d001      	beq.n	46 <timeInit+0x46>
  42:	2200      	movs	r2, #0
  44:	e004      	b.n	50 <timeInit+0x50>
  46:	2b14      	cmp	r3, #20
  48:	d1f4      	bne.n	34 <timeInit+0x34>
  4a:	e001      	b.n	50 <timeInit+0x50>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:49
    for( i = 0; !( RTC->CRL & RTC_RTOFF) && i < 500; i++ ){;}       // don't access registers until RTC sets RTOFF to 1
  4c:	3201      	adds	r2, #1
  4e:	b292      	uxth	r2, r2
  50:	4b13      	ldr	r3, [pc, #76]	; (a0 <timeInit+0xa0>)
  52:	8899      	ldrh	r1, [r3, #4]
  54:	f011 0f20 	tst.w	r1, #32
  58:	d102      	bne.n	60 <timeInit+0x60>
  5a:	f5b2 7ffa 	cmp.w	r2, #500	; 0x1f4
  5e:	d1f5      	bne.n	4c <timeInit+0x4c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:50
    RTC->CRL    |=  RTC_CNF;                // Enter configuration mode 
  60:	889a      	ldrh	r2, [r3, #4]
  62:	b292      	uxth	r2, r2
  64:	f042 0210 	orr.w	r2, r2, #16
  68:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:51
    RTC->CRH    |=  BIT0;                 // Clear and set BIT0, second interrupt bit
  6a:	881a      	ldrh	r2, [r3, #0]
  6c:	b292      	uxth	r2, r2
  6e:	f042 0201 	orr.w	r2, r2, #1
  72:	801a      	strh	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:52
    RTC->CRL    &=  ~( RTC_RSF | RTC_OWF | RTC_ALRF | RTC_SECF ); // Clear any set flags
  74:	889a      	ldrh	r2, [r3, #4]
  76:	f022 020f 	bic.w	r2, r2, #15
  7a:	0412      	lsls	r2, r2, #16
  7c:	0c12      	lsrs	r2, r2, #16
  7e:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:53
    RTC->PRLH   =   0x0000;                 // MSBs, not used with LSE
  80:	2200      	movs	r2, #0
  82:	811a      	strh	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:54
    RTC->PRLL   =   0x7FFF;                 // Prescale value for 32.768KHz LSE, see device reference
  84:	f647 72ff 	movw	r2, #32767	; 0x7fff
  88:	819a      	strh	r2, [r3, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:57
    //RTC->CNTH   =   0;//( ulTime >> 16 );  // RTC Time register is divided into 16 bits MSBs
    //RTC->CNTL   =   0;//(u16)( ulTime );        // and 16 bits LSBs
    RTC->CRL    &=  ~RTC_CNF;                // Exit config mode for RTC to update registers
  8a:	889a      	ldrh	r2, [r3, #4]
  8c:	f022 0210 	bic.w	r2, r2, #16
  90:	0412      	lsls	r2, r2, #16
  92:	0c12      	lsrs	r2, r2, #16
  94:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:58
}
  96:	4770      	bx	lr
  98:	40021000 	.word	0x40021000
  9c:	40007000 	.word	0x40007000
  a0:	40002800 	.word	0x40002800

Disassembly of section .text.rtcClearFlags:

00000000 <rtcClearFlags>:
rtcClearFlags():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:64

void rtcClearFlags( void )
{
    u16 i;

    for( i = 0; !( RTC->CRL & RTC_RTOFF) && i < 500; i++ ){;}       // don't access registers until RTC sets RTOFF to 1
   0:	e0012200 	.word	0xe0012200
   4:	3201      	adds	r2, #1
   6:	b292      	uxth	r2, r2
   8:	4b0c      	ldr	r3, [pc, #48]	; (3c <rtcClearFlags+0x3c>)
   a:	8899      	ldrh	r1, [r3, #4]
   c:	f011 0f20 	tst.w	r1, #32
  10:	d102      	bne.n	18 <rtcClearFlags+0x18>
  12:	f5b2 7ffa 	cmp.w	r2, #500	; 0x1f4
  16:	d1f5      	bne.n	4 <rtcClearFlags+0x4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:65
    RTC->CRL    |=  RTC_CNF;                // Enter configuration mode 
  18:	889a      	ldrh	r2, [r3, #4]
  1a:	b292      	uxth	r2, r2
  1c:	f042 0210 	orr.w	r2, r2, #16
  20:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:66
    RTC->CRL    &=  ~( RTC_RSF | RTC_OWF | RTC_ALRF | RTC_SECF ); // Clear any set flags
  22:	889a      	ldrh	r2, [r3, #4]
  24:	f022 020f 	bic.w	r2, r2, #15
  28:	0412      	lsls	r2, r2, #16
  2a:	0c12      	lsrs	r2, r2, #16
  2c:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:67
    RTC->CRL    &=  ~RTC_CNF;                // Exit config mode for RTC to update registers
  2e:	889a      	ldrh	r2, [r3, #4]
  30:	f022 0210 	bic.w	r2, r2, #16
  34:	0412      	lsls	r2, r2, #16
  36:	0c12      	lsrs	r2, r2, #16
  38:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:68
}
  3a:	4770      	bx	lr
  3c:	40002800 	.word	0x40002800

Disassembly of section .text.timeSet:

00000000 <timeSet>:
timeSet():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:75
void timeSet( u32 ulTime )
{
    // Sets time in seconds
    u16 i;

    for( i = 0; !( RTC->CRL & RTC_RTOFF) && i < 500; i++ ){;}      // don't access registers until RTC sets RTOFF to 1
   0:	e0012200 	.word	0xe0012200
   4:	3201      	adds	r2, #1
   6:	b292      	uxth	r2, r2
   8:	4b0b      	ldr	r3, [pc, #44]	; (38 <timeSet+0x38>)
   a:	8899      	ldrh	r1, [r3, #4]
   c:	f011 0f20 	tst.w	r1, #32
  10:	d102      	bne.n	18 <timeSet+0x18>
  12:	f5b2 7ffa 	cmp.w	r2, #500	; 0x1f4
  16:	d1f5      	bne.n	4 <timeSet+0x4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:76
    RTC->CRL    |=  RTC_CNF;                // Enter configuration mode 
  18:	889a      	ldrh	r2, [r3, #4]
  1a:	b292      	uxth	r2, r2
  1c:	f042 0210 	orr.w	r2, r2, #16
  20:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:77
    RTC->CNTH   =   ( ulTime >> 16 );  // RTC Time register is divided into 16 bits MSBs
  22:	0c02      	lsrs	r2, r0, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:78
    RTC->CNTL   =   (u16)( ulTime );        // and 16 bits LSBs
  24:	b280      	uxth	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:77
    // Sets time in seconds
    u16 i;

    for( i = 0; !( RTC->CRL & RTC_RTOFF) && i < 500; i++ ){;}      // don't access registers until RTC sets RTOFF to 1
    RTC->CRL    |=  RTC_CNF;                // Enter configuration mode 
    RTC->CNTH   =   ( ulTime >> 16 );  // RTC Time register is divided into 16 bits MSBs
  26:	831a      	strh	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:78
    RTC->CNTL   =   (u16)( ulTime );        // and 16 bits LSBs
  28:	8398      	strh	r0, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:79
    RTC->CRL    &=  ~RTC_CNF;               // Exit config mode for RTC to update registers
  2a:	889a      	ldrh	r2, [r3, #4]
  2c:	f022 0210 	bic.w	r2, r2, #16
  30:	0412      	lsls	r2, r2, #16
  32:	0c12      	lsrs	r2, r2, #16
  34:	809a      	strh	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:80
}
  36:	4770      	bx	lr
  38:	40002800 	.word	0x40002800

Disassembly of section .text.timeGet:

00000000 <timeGet>:
timeGet():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:87
u32 timeGet( void )
{
    // Gets time in seconds
    u32 ulTime;

    ulTime  =   RTC->CNTH;
   0:	8b184b03 	.word	0x8b184b03
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:89
    ulTime  <<= 16;
    ulTime  |=  RTC->CNTL;
   4:	8b9b      	ldrh	r3, [r3, #28]
   6:	b29b      	uxth	r3, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:92
    
    return( ulTime );
}
   8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
   c:	4770      	bx	lr
   e:	bf00      	nop
  10:	40002800 	.word	0x40002800

Disassembly of section .text.convertSystemTimeToSeconds:

00000000 <convertSystemTimeToSeconds>:
convertSystemTimeToSeconds():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:95

u32 convertSystemTimeToSeconds( PYGMYTIME *pygmyTime )
{
   0:	b530      	push	{r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:98
    u32 i, ulSeconds;
    
    for( i = 1970, ulSeconds = 0; i < pygmyTime->Year; i++ ){ 
   2:	2300      	movs	r3, #0
   4:	8804      	ldrh	r4, [r0, #0]
   6:	f240 72b2 	movw	r2, #1970	; 0x7b2
   a:	e01d      	b.n	48 <convertSystemTimeToSeconds+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:99
        if( !( i % 100 ) && ( i % 400 ||  i % 4 ) ){
   c:	2164      	movs	r1, #100	; 0x64
   e:	fbb2 f5f1 	udiv	r5, r2, r1
  12:	fb01 2115 	mls	r1, r1, r5, r2
  16:	b981      	cbnz	r1, 3a <convertSystemTimeToSeconds+0x3a>
  18:	f44f 71c8 	mov.w	r1, #400	; 0x190
  1c:	fbb2 f5f1 	udiv	r5, r2, r1
  20:	fb01 2115 	mls	r1, r1, r5, r2
  24:	b911      	cbnz	r1, 2c <convertSystemTimeToSeconds+0x2c>
  26:	f012 0f03 	tst.w	r2, #3
  2a:	d006      	beq.n	3a <convertSystemTimeToSeconds+0x3a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:100
            ulSeconds += PYGMY_SECONDS_LEAPYEAR;
  2c:	f103 73f0 	add.w	r3, r3, #31457280	; 0x1e00000
  30:	f503 3321 	add.w	r3, r3, #164864	; 0x28400
  34:	f503 7380 	add.w	r3, r3, #256	; 0x100
  38:	e005      	b.n	46 <convertSystemTimeToSeconds+0x46>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:102
        } else{
            ulSeconds += PYGMY_SECONDS_COMMONYEAR;
  3a:	f103 73f0 	add.w	r3, r3, #31457280	; 0x1e00000
  3e:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
  42:	f503 7360 	add.w	r3, r3, #896	; 0x380
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:98

u32 convertSystemTimeToSeconds( PYGMYTIME *pygmyTime )
{
    u32 i, ulSeconds;
    
    for( i = 1970, ulSeconds = 0; i < pygmyTime->Year; i++ ){ 
  46:	3201      	adds	r2, #1
  48:	42a2      	cmp	r2, r4
  4a:	d3df      	bcc.n	c <convertSystemTimeToSeconds+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:105
            ulSeconds += PYGMY_SECONDS_LEAPYEAR;
        } else{
            ulSeconds += PYGMY_SECONDS_COMMONYEAR;
        } // else
    } // for
    if( pygmyTime->Month < 1 ){
  4c:	7882      	ldrb	r2, [r0, #2]
  4e:	b90a      	cbnz	r2, 54 <convertSystemTimeToSeconds+0x54>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:106
        pygmyTime->Month = 1;
  50:	3201      	adds	r2, #1
  52:	7082      	strb	r2, [r0, #2]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:108
    } // if
    if( pygmyTime->Month > 12 ){
  54:	7882      	ldrb	r2, [r0, #2]
  56:	2a0c      	cmp	r2, #12
  58:	d901      	bls.n	5e <convertSystemTimeToSeconds+0x5e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:109
        pygmyTime->Month = 12;
  5a:	220c      	movs	r2, #12
  5c:	7082      	strb	r2, [r0, #2]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:111
    } // if
    for( i = 0; i < pygmyTime->Month - 1; i++ ){
  5e:	7881      	ldrb	r1, [r0, #2]
  60:	2200      	movs	r2, #0
  62:	3901      	subs	r1, #1
  64:	e005      	b.n	72 <convertSystemTimeToSeconds+0x72>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:112
        ulSeconds += PYGMY_DAYSINMONTH[ i ] * PYGMY_SECONDS_DAY;
  66:	4c0c      	ldr	r4, [pc, #48]	; (98 <convertSystemTimeToSeconds+0x98>)
  68:	4d0c      	ldr	r5, [pc, #48]	; (9c <convertSystemTimeToSeconds+0x9c>)
  6a:	5d14      	ldrb	r4, [r2, r4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:111
        pygmyTime->Month = 1;
    } // if
    if( pygmyTime->Month > 12 ){
        pygmyTime->Month = 12;
    } // if
    for( i = 0; i < pygmyTime->Month - 1; i++ ){
  6c:	3201      	adds	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:112
        ulSeconds += PYGMY_DAYSINMONTH[ i ] * PYGMY_SECONDS_DAY;
  6e:	fb05 3304 	mla	r3, r5, r4, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:111
        pygmyTime->Month = 1;
    } // if
    if( pygmyTime->Month > 12 ){
        pygmyTime->Month = 12;
    } // if
    for( i = 0; i < pygmyTime->Month - 1; i++ ){
  72:	428a      	cmp	r2, r1
  74:	d3f7      	bcc.n	66 <convertSystemTimeToSeconds+0x66>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:116
        ulSeconds += PYGMY_DAYSINMONTH[ i ] * PYGMY_SECONDS_DAY;
    } // for
    
    ulSeconds += ( pygmyTime->Day - 1 ) * PYGMY_SECONDS_DAY;
    ulSeconds += ( ( pygmyTime->Hour * 60 ) * 60 ) + ( pygmyTime->Minute * 60 ) + pygmyTime->Second;
  76:	7942      	ldrb	r2, [r0, #5]
  78:	213c      	movs	r1, #60	; 0x3c
  7a:	4351      	muls	r1, r2
  7c:	7904      	ldrb	r4, [r0, #4]
  7e:	f44f 6261 	mov.w	r2, #3600	; 0xe10
  82:	fb02 1204 	mla	r2, r2, r4, r1
  86:	7981      	ldrb	r1, [r0, #6]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:115
    } // if
    for( i = 0; i < pygmyTime->Month - 1; i++ ){
        ulSeconds += PYGMY_DAYSINMONTH[ i ] * PYGMY_SECONDS_DAY;
    } // for
    
    ulSeconds += ( pygmyTime->Day - 1 ) * PYGMY_SECONDS_DAY;
  88:	78c0      	ldrb	r0, [r0, #3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:116
    ulSeconds += ( ( pygmyTime->Hour * 60 ) * 60 ) + ( pygmyTime->Minute * 60 ) + pygmyTime->Second;
  8a:	1852      	adds	r2, r2, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:115
    } // if
    for( i = 0; i < pygmyTime->Month - 1; i++ ){
        ulSeconds += PYGMY_DAYSINMONTH[ i ] * PYGMY_SECONDS_DAY;
    } // for
    
    ulSeconds += ( pygmyTime->Day - 1 ) * PYGMY_SECONDS_DAY;
  8c:	4903      	ldr	r1, [pc, #12]	; (9c <convertSystemTimeToSeconds+0x9c>)
  8e:	3801      	subs	r0, #1
  90:	fb01 2000 	mla	r0, r1, r0, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:119
    ulSeconds += ( ( pygmyTime->Hour * 60 ) * 60 ) + ( pygmyTime->Minute * 60 ) + pygmyTime->Second;
    
    return( ulSeconds );
}
  94:	18c0      	adds	r0, r0, r3
  96:	bd30      	pop	{r4, r5, pc}
  98:	00000000 	.word	0x00000000
  9c:	00015180 	.word	0x00015180

Disassembly of section .text.convertSecondsToSystemTime:

00000000 <convertSecondsToSystemTime>:
convertSecondsToSystemTime():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:125

void convertSecondsToSystemTime( u32 ulSeconds, PYGMYTIME *pygmyTime )
{
    u32 i;

    i = 1970 + ( ulSeconds / PYGMY_SECONDS_AVERAGEYEAR );
   0:	4a2d      	ldr	r2, [pc, #180]	; (b8 <convertSecondsToSystemTime+0xb8>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:122
    
    return( ulSeconds );
}

void convertSecondsToSystemTime( u32 ulSeconds, PYGMYTIME *pygmyTime )
{
   2:	b530      	push	{r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:125
    u32 i;

    i = 1970 + ( ulSeconds / PYGMY_SECONDS_AVERAGEYEAR );
   4:	fbb0 f2f2 	udiv	r2, r0, r2
   8:	f502 62f6 	add.w	r2, r2, #1968	; 0x7b0
   c:	3202      	adds	r2, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:126
    for( pygmyTime->Year = 1970; pygmyTime->Year < i ; pygmyTime->Year++ ){
   e:	f240 73b2 	movw	r3, #1970	; 0x7b2
  12:	e01f      	b.n	54 <convertSecondsToSystemTime+0x54>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:127
        if( !( pygmyTime->Year % 100 ) && ( pygmyTime->Year % 400 ||  pygmyTime->Year % 4 ) ){
  14:	2464      	movs	r4, #100	; 0x64
  16:	fbb3 f5f4 	udiv	r5, r3, r4
  1a:	fb04 3415 	mls	r4, r4, r5, r3
  1e:	b2a4      	uxth	r4, r4
  20:	b98c      	cbnz	r4, 46 <convertSecondsToSystemTime+0x46>
  22:	f44f 74c8 	mov.w	r4, #400	; 0x190
  26:	fbb3 f5f4 	udiv	r5, r3, r4
  2a:	fb04 3415 	mls	r4, r4, r5, r3
  2e:	b2a4      	uxth	r4, r4
  30:	b914      	cbnz	r4, 38 <convertSecondsToSystemTime+0x38>
  32:	f013 0f03 	tst.w	r3, #3
  36:	d006      	beq.n	46 <convertSecondsToSystemTime+0x46>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:128
            ulSeconds -= PYGMY_SECONDS_LEAPYEAR;
  38:	f1a0 70f0 	sub.w	r0, r0, #31457280	; 0x1e00000
  3c:	f5a0 3021 	sub.w	r0, r0, #164864	; 0x28400
  40:	f5a0 7080 	sub.w	r0, r0, #256	; 0x100
  44:	e005      	b.n	52 <convertSecondsToSystemTime+0x52>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:130
        } else{
            ulSeconds -= PYGMY_SECONDS_COMMONYEAR;
  46:	f100 407e 	add.w	r0, r0, #4261412864	; 0xfe000000
  4a:	f500 10f6 	add.w	r0, r0, #2015232	; 0x1ec000
  4e:	f500 6048 	add.w	r0, r0, #3200	; 0xc80
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:126
void convertSecondsToSystemTime( u32 ulSeconds, PYGMYTIME *pygmyTime )
{
    u32 i;

    i = 1970 + ( ulSeconds / PYGMY_SECONDS_AVERAGEYEAR );
    for( pygmyTime->Year = 1970; pygmyTime->Year < i ; pygmyTime->Year++ ){
  52:	3301      	adds	r3, #1
  54:	800b      	strh	r3, [r1, #0]
  56:	880b      	ldrh	r3, [r1, #0]
  58:	4293      	cmp	r3, r2
  5a:	d3db      	bcc.n	14 <convertSecondsToSystemTime+0x14>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:133
            ulSeconds -= PYGMY_SECONDS_LEAPYEAR;
        } else{
            ulSeconds -= PYGMY_SECONDS_COMMONYEAR;
        } // else
    } // for
    i = ulSeconds / PYGMY_SECONDS_AVERAGEMONTH;
  5c:	4a17      	ldr	r2, [pc, #92]	; (bc <convertSecondsToSystemTime+0xbc>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:137
    if( i > 11 ){
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
  5e:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:133
            ulSeconds -= PYGMY_SECONDS_LEAPYEAR;
        } else{
            ulSeconds -= PYGMY_SECONDS_COMMONYEAR;
        } // else
    } // for
    i = ulSeconds / PYGMY_SECONDS_AVERAGEMONTH;
  60:	fbb0 f2f2 	udiv	r2, r0, r2
  64:	2a0b      	cmp	r2, #11
  66:	bf28      	it	cs
  68:	220b      	movcs	r2, #11
  6a:	e005      	b.n	78 <convertSecondsToSystemTime+0x78>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:138
    if( i > 11 ){
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
  6c:	4c14      	ldr	r4, [pc, #80]	; (c0 <convertSecondsToSystemTime+0xc0>)
  6e:	4d15      	ldr	r5, [pc, #84]	; (c4 <convertSecondsToSystemTime+0xc4>)
  70:	5ce4      	ldrb	r4, [r4, r3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:137
    } // for
    i = ulSeconds / PYGMY_SECONDS_AVERAGEMONTH;
    if( i > 11 ){
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
  72:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:138
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
  74:	fb05 0004 	mla	r0, r5, r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:137
    } // for
    i = ulSeconds / PYGMY_SECONDS_AVERAGEMONTH;
    if( i > 11 ){
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
  78:	708b      	strb	r3, [r1, #2]
  7a:	788b      	ldrb	r3, [r1, #2]
  7c:	4293      	cmp	r3, r2
  7e:	d3f5      	bcc.n	6c <convertSecondsToSystemTime+0x6c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:141
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
    } // for
    ++pygmyTime->Month;
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
  80:	4d11      	ldr	r5, [pc, #68]	; (c8 <convertSecondsToSystemTime+0xc8>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:142
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
  82:	4c10      	ldr	r4, [pc, #64]	; (c4 <convertSecondsToSystemTime+0xc4>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:141
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
    } // for
    ++pygmyTime->Month;
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
  84:	fbb0 f5f5 	udiv	r5, r0, r5
  88:	b2ed      	uxtb	r5, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:142
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
  8a:	fb04 0405 	mla	r4, r4, r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:140
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
    } // for
    ++pygmyTime->Month;
  8e:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:144
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
    ++pygmyTime->Day;
    pygmyTime->Hour = ulSeconds / PYGMY_SECONDS_HOUR;
  90:	f44f 6061 	mov.w	r0, #3600	; 0xe10
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:140
        i = 11;
    } // if
    for( pygmyTime->Month = 0; pygmyTime->Month < i  ; pygmyTime->Month++ ){ 
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
    } // for
    ++pygmyTime->Month;
  94:	708b      	strb	r3, [r1, #2]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:144
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
    ++pygmyTime->Day;
    pygmyTime->Hour = ulSeconds / PYGMY_SECONDS_HOUR;
  96:	fbb4 f0f0 	udiv	r0, r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:145
    ulSeconds -= pygmyTime->Hour * PYGMY_SECONDS_HOUR;
  9a:	4b0c      	ldr	r3, [pc, #48]	; (cc <convertSecondsToSystemTime+0xcc>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:144
    } // for
    ++pygmyTime->Month;
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
    ++pygmyTime->Day;
    pygmyTime->Hour = ulSeconds / PYGMY_SECONDS_HOUR;
  9c:	b2c0      	uxtb	r0, r0
  9e:	7108      	strb	r0, [r1, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:145
    ulSeconds -= pygmyTime->Hour * PYGMY_SECONDS_HOUR;
  a0:	fb03 4000 	mla	r0, r3, r0, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:146
    pygmyTime->Minute = ulSeconds / PYGMY_SECONDS_MINUTE;
  a4:	223c      	movs	r2, #60	; 0x3c
  a6:	fbb0 f3f2 	udiv	r3, r0, r2
  aa:	714b      	strb	r3, [r1, #5]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:147
    pygmyTime->Second = ulSeconds % PYGMY_SECONDS_MINUTE;
  ac:	fb02 0313 	mls	r3, r2, r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:143
        ulSeconds -= PYGMY_DAYSINMONTH[ pygmyTime->Month ] * PYGMY_SECONDS_DAY; 
    } // for
    ++pygmyTime->Month;
    pygmyTime->Day = ulSeconds / PYGMY_SECONDS_DAY ;
    ulSeconds -= pygmyTime->Day * PYGMY_SECONDS_DAY;
    ++pygmyTime->Day;
  b0:	3501      	adds	r5, #1
  b2:	70cd      	strb	r5, [r1, #3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:147
    pygmyTime->Hour = ulSeconds / PYGMY_SECONDS_HOUR;
    ulSeconds -= pygmyTime->Hour * PYGMY_SECONDS_HOUR;
    pygmyTime->Minute = ulSeconds / PYGMY_SECONDS_MINUTE;
    pygmyTime->Second = ulSeconds % PYGMY_SECONDS_MINUTE;
  b4:	718b      	strb	r3, [r1, #6]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:148
} 
  b6:	bd30      	pop	{r4, r5, pc}
  b8:	01e18558 	.word	0x01e18558
  bc:	002819a3 	.word	0x002819a3
  c0:	00000000 	.word	0x00000000
  c4:	fffeae80 	.word	0xfffeae80
  c8:	00015180 	.word	0x00015180
  cc:	fffff1f0 	.word	0xfffff1f0

Disassembly of section .text.setSysTick:

00000000 <setSysTick>:
setSysTick():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:153

void setSysTick( u32 ulSystemClock, u32 ulTicksPerSecond )
{
    // Based on  ( 2X the System Clock ) / 1000
    SYSTICK->CTRL = 0;
   0:	22004b05 	.word	0x22004b05
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:154
    SYSTICK->LOAD = ( ulSystemClock / ulTicksPerSecond ) * 2;
   4:	fbb0 f1f1 	udiv	r1, r0, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:153
} 

void setSysTick( u32 ulSystemClock, u32 ulTicksPerSecond )
{
    // Based on  ( 2X the System Clock ) / 1000
    SYSTICK->CTRL = 0;
   8:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:154
    SYSTICK->LOAD = ( ulSystemClock / ulTicksPerSecond ) * 2;
   a:	0049      	lsls	r1, r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:156
    SYSTICK->VAL = ( ulSystemClock / ulTicksPerSecond ) * 2;
    SYSTICK->CTRL = 0x07;   // Enable system timer
   c:	3207      	adds	r2, #7
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:154

void setSysTick( u32 ulSystemClock, u32 ulTicksPerSecond )
{
    // Based on  ( 2X the System Clock ) / 1000
    SYSTICK->CTRL = 0;
    SYSTICK->LOAD = ( ulSystemClock / ulTicksPerSecond ) * 2;
   e:	6059      	str	r1, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:155
    SYSTICK->VAL = ( ulSystemClock / ulTicksPerSecond ) * 2;
  10:	6099      	str	r1, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:156
    SYSTICK->CTRL = 0x07;   // Enable system timer
  12:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:157
}
  14:	4770      	bx	lr
  16:	bf00      	nop
  18:	e000e010 	.word	0xe000e010

Disassembly of section .text.enableSysTick:

00000000 <enableSysTick>:
enableSysTick():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:161

void enableSysTick( void )
{
    SYSTICK->CTRL = 0x07;   // Enable system timer
   0:	22074b01 	.word	0x22074b01
   4:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:162
}
   6:	4770      	bx	lr
   8:	e000e010 	.word	0xe000e010

Disassembly of section .text.disableSysTick:

00000000 <disableSysTick>:
disableSysTick():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:166

void disableSysTick( void )
{
    SYSTICK->CTRL = 0;
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <disableSysTick+0x8>)
   2:	2200      	movs	r2, #0
   4:	601a      	str	r2, [r3, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_rtc.c:167
}
   6:	4770      	bx	lr
   8:	e000e010 	.word	0xe000e010
