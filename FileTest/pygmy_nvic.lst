
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_nvic.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\FileTest\pygmy_nvic.o


Disassembly of section .text.interruptGetTimerVector:

00000000 <interruptGetTimerVector>:
interruptGetTimerVector():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:36
    TIM6_IRQ,   TIM7_IRQ,       0,              TIM9_L15X_IRQ,  TIM10_L15X_IRQ, TIM11_L15X_IRQ,
    0,          0,              0,              0,              0,              0
};

u8 interruptGetTimerVector( u8 ucTimer )
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:38
    // return value of 0 means no timer present
    if( descriptorGetID() == DESC_STM32L151 ){
   4:	f7ff fffe 	bl	0 <descriptorGetID>
   8:	f240 4316 	movw	r3, #1046	; 0x416
   c:	4298      	cmp	r0, r3
   e:	4b03      	ldr	r3, [pc, #12]	; (1c <interruptGetTimerVector+0x1c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:41
        return( PYGMY_TIMERVECTORS_L15X[ ucTimer ] );
    } else{
        return( PYGMY_TIMERVECTORS[ ucTimer ] );
  10:	bf16      	itet	ne
  12:	191c      	addne	r4, r3, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:39

u8 interruptGetTimerVector( u8 ucTimer )
{
    // return value of 0 means no timer present
    if( descriptorGetID() == DESC_STM32L151 ){
        return( PYGMY_TIMERVECTORS_L15X[ ucTimer ] );
  14:	5d18      	ldrbeq	r0, [r3, r4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:41
    } else{
        return( PYGMY_TIMERVECTORS[ ucTimer ] );
  16:	7ca0      	ldrbne	r0, [r4, #18]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:44
    } // else
    
}
  18:	bd10      	pop	{r4, pc}
  1a:	bf00      	nop
  1c:	00000000 	.word	0x00000000

Disassembly of section .text.interruptEnable:

00000000 <interruptEnable>:
interruptEnable():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:50

void interruptEnable( u32 ulVector )
{
    // The vectors are arranged 1 bit per vector in 32 groups
    // The vector number must be decoded, first for which group, second the bit to set
    if( ulVector > 63 ){
   0:	283f      	cmp	r0, #63	; 0x3f
   2:	f04f 0301 	mov.w	r3, #1
   6:	d904      	bls.n	12 <interruptEnable+0x12>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:51
        NVIC->ISER[ 2 ] = 0x00000001 << ( ulVector - 64 );
   8:	3840      	subs	r0, #64	; 0x40
   a:	4083      	lsls	r3, r0
   c:	4a06      	ldr	r2, [pc, #24]	; (28 <interruptEnable+0x28>)
   e:	6093      	str	r3, [r2, #8]
  10:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:52
    } else if( ulVector > 31 ){
  12:	281f      	cmp	r0, #31
  14:	4a04      	ldr	r2, [pc, #16]	; (28 <interruptEnable+0x28>)
  16:	d903      	bls.n	20 <interruptEnable+0x20>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:53
        NVIC->ISER[ 1 ] = 0x00000001 << ( ulVector - 32 );
  18:	3820      	subs	r0, #32
  1a:	4083      	lsls	r3, r0
  1c:	6053      	str	r3, [r2, #4]
  1e:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:55
    } else{
        NVIC->ISER[ 0 ] = 0x00000001 << ulVector;
  20:	fa13 f000 	lsls.w	r0, r3, r0
  24:	6010      	str	r0, [r2, #0]
  26:	4770      	bx	lr
  28:	e000e100 	.word	0xe000e100

Disassembly of section .text.interruptDisable:

00000000 <interruptDisable>:
interruptDisable():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:64
void interruptDisable( u32 ulVector )
{
    // The vectors are arranged 1 bit per vector in 32 groups
    // The vector number must be decoded, first for which group, second the bit to set
    // Notice! Bits set in the ICER registers actually clear the interrupt vectors
    if( ulVector > 63 ){
   0:	283f      	cmp	r0, #63	; 0x3f
   2:	f04f 0301 	mov.w	r3, #1
   6:	d905      	bls.n	14 <interruptDisable+0x14>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:65
        NVIC->ICER[ 2 ] = 0x00000001 << ( ulVector - 64 );
   8:	3840      	subs	r0, #64	; 0x40
   a:	4083      	lsls	r3, r0
   c:	4a08      	ldr	r2, [pc, #32]	; (30 <interruptDisable+0x30>)
   e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  12:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:66
    } else if( ulVector > 31 ){
  14:	281f      	cmp	r0, #31
  16:	4a06      	ldr	r2, [pc, #24]	; (30 <interruptDisable+0x30>)
  18:	d904      	bls.n	24 <interruptDisable+0x24>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:67
        NVIC->ICER[ 1 ] = 0x00000001 << ( ulVector - 32 );
  1a:	3820      	subs	r0, #32
  1c:	4083      	lsls	r3, r0
  1e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  22:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:69
    } else{
        NVIC->ICER[ 0 ] = 0x00000001 << ulVector;
  24:	fa13 f000 	lsls.w	r0, r3, r0
  28:	f8c2 0080 	str.w	r0, [r2, #128]	; 0x80
  2c:	4770      	bx	lr
  2e:	bf00      	nop
  30:	e000e100 	.word	0xe000e100

Disassembly of section .text.interruptSetPriority:

00000000 <interruptSetPriority>:
interruptSetPriority():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:82
    // To a corresponding Vector. Only the High nibble of each 8 bit group
    // Is used to represent the priority from 0 - 15
    // Note that some of the Vectors are dealt with in System Registers
    // Those Vectors are all start at 0xF0 according to the system to allow
    // Decoding, they are separated and handled individually below
    if( ulVector > 0xEF ){
   0:	28ef      	cmp	r0, #239	; 0xef
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:74
        NVIC->ICER[ 0 ] = 0x00000001 << ulVector;
    }
}

void interruptSetPriority( u32 ulVector, u8 ucPriority )
{
   2:	b530      	.short	0xb530
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:82
    // To a corresponding Vector. Only the High nibble of each 8 bit group
    // Is used to represent the priority from 0 - 15
    // Note that some of the Vectors are dealt with in System Registers
    // Those Vectors are all start at 0xF0 according to the system to allow
    // Decoding, they are separated and handled individually below
    if( ulVector > 0xEF ){
   4:	d93f      	bls.n	86 <interruptSetPriority+0x86>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:83
        switch( ulVector ){
   6:	38f0      	subs	r0, #240	; 0xf0
   8:	2805      	cmp	r0, #5
   a:	d851      	bhi.n	b0 <interruptSetPriority+0xb0>
   c:	e8df f000 	tbb	[pc, r0]
  10:	1e140b03 	.word	0x1e140b03
  14:	3127      	.short	0x3127
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:85
            case MEMFAULT_IRQ:
                SCB->SHPR[0] &= 0xFFFFFF0F;               // Clear nibble
  16:	4b27      	ldr	r3, [pc, #156]	; (b4 <interruptSetPriority+0xb4>)
  18:	699a      	ldr	r2, [r3, #24]
  1a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  1e:	619a      	str	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:86
                SCB->SHPR[0] |=  ( u32 ) ucPriority ;     // Write Priority
  20:	699a      	ldr	r2, [r3, #24]
  22:	4311      	orrs	r1, r2
  24:	e010      	b.n	48 <interruptSetPriority+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:89
            break;
            case BUSFAULT_IRQ:      
                SCB->SHPR[0] &= 0xFFFF0FFF;               // Clear nibble
  26:	4b23      	ldr	r3, [pc, #140]	; (b4 <interruptSetPriority+0xb4>)
  28:	699a      	ldr	r2, [r3, #24]
  2a:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  2e:	619a      	str	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:90
                SCB->SHPR[0] |= ( u32 ) ucPriority << 8;  // Write Priority
  30:	699a      	ldr	r2, [r3, #24]
  32:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
  36:	e007      	b.n	48 <interruptSetPriority+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:93
            break;
            case USAGEFAULT_IRQ:
                SCB->SHPR[0] &= 0xFF0FFFFF;               // Clear nibble
  38:	4b1e      	ldr	r3, [pc, #120]	; (b4 <interruptSetPriority+0xb4>)
  3a:	699a      	ldr	r2, [r3, #24]
  3c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
  40:	619a      	str	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:94
                SCB->SHPR[0] |= ( u32 ) ucPriority << 16; // Write Priority
  42:	699a      	ldr	r2, [r3, #24]
  44:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
  48:	6199      	str	r1, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:95
            break;
  4a:	bd30      	pop	{r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:97
            case SVCALL_IRQ:
                SCB->SHPR[1] &= 0x0FFFFFFF;               // Clear nibble
  4c:	4b19      	ldr	r3, [pc, #100]	; (b4 <interruptSetPriority+0xb4>)
  4e:	69da      	ldr	r2, [r3, #28]
  50:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
  54:	61da      	str	r2, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:98
                SCB->SHPR[1] |= ( u32 ) ucPriority << 24; // Write Priority
  56:	69da      	ldr	r2, [r3, #28]
  58:	ea42 6101 	orr.w	r1, r2, r1, lsl #24
  5c:	e007      	b.n	6e <interruptSetPriority+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:101
            break;
            case PENDSVCALL_IRQ:
                SCB->SHPR[1] &= 0xFF0FFFFF;               // Clear nibble
  5e:	4b15      	ldr	r3, [pc, #84]	; (b4 <interruptSetPriority+0xb4>)
  60:	69da      	ldr	r2, [r3, #28]
  62:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
  66:	61da      	str	r2, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:102
                SCB->SHPR[1] |= ( u32 ) ucPriority << 16; // Write Priority
  68:	69da      	ldr	r2, [r3, #28]
  6a:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
  6e:	61d9      	str	r1, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:103
            break;
  70:	bd30      	pop	{r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:105
            case SYSTICK_IRQ:
                SCB->SHPR[2] &= 0x0FFFFFFF;               // Clear nibble
  72:	4b10      	ldr	r3, [pc, #64]	; (b4 <interruptSetPriority+0xb4>)
  74:	6a1a      	ldr	r2, [r3, #32]
  76:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
  7a:	621a      	str	r2, [r3, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:106
                SCB->SHPR[2] |= ( u32 ) ucPriority << 24; // Write Priority
  7c:	6a1a      	ldr	r2, [r3, #32]
  7e:	ea42 6101 	orr.w	r1, r2, r1, lsl #24
  82:	6219      	str	r1, [r3, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:107
            break;
  84:	bd30      	pop	{r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:110
        }
    } else{
        NVIC->IPR[ ulVector / 4 ] &= ~( ( u32 )0xF0 ) << ( ( ulVector % 4 ) * 8 );      // Clear nibble
  86:	0882      	lsrs	r2, r0, #2
  88:	f000 0003 	and.w	r0, r0, #3
  8c:	00c0      	lsls	r0, r0, #3
  8e:	f06f 04f0 	mvn.w	r4, #240	; 0xf0
  92:	4084      	lsls	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:111
        NVIC->IPR[ ulVector / 4 ] |= ( ( u32 )ucPriority ) << ( ( ulVector % 4 ) * 8 ); // Write Priority
  94:	fa11 f000 	lsls.w	r0, r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:110
                SCB->SHPR[2] &= 0x0FFFFFFF;               // Clear nibble
                SCB->SHPR[2] |= ( u32 ) ucPriority << 24; // Write Priority
            break;
        }
    } else{
        NVIC->IPR[ ulVector / 4 ] &= ~( ( u32 )0xF0 ) << ( ( ulVector % 4 ) * 8 );      // Clear nibble
  98:	4b07      	ldr	r3, [pc, #28]	; (b8 <interruptSetPriority+0xb8>)
  9a:	32c0      	adds	r2, #192	; 0xc0
  9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
  a0:	402c      	ands	r4, r5
  a2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_nvic.c:111
        NVIC->IPR[ ulVector / 4 ] |= ( ( u32 )ucPriority ) << ( ( ulVector % 4 ) * 8 ); // Write Priority
  a6:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
  aa:	4320      	orrs	r0, r4
  ac:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  b0:	bd30      	pop	{r4, r5, pc}
  b2:	bf00      	nop
  b4:	e000ed00 	.word	0xe000ed00
  b8:	e000e100 	.word	0xe000e100
