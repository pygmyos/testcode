
C:\Users\MightyDubster\Documents\Projects\pygmyos.projects\boot\pygmy_fpec.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.projects\boot\pygmy_fpec.o


Disassembly of section .text.fpecUnlock:

00000000 <fpecUnlock>:
fpecUnlock():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:74
    return( 1 );
}

u8 fpecUnlock( void )
{
    FPEC->KEYR = FPEC_KEY1;
   0:	4b02      	ldr	r3, [pc, #8]	; (c <fpecUnlock+0xc>)
   2:	4a03      	ldr	r2, [pc, #12]	; (10 <fpecUnlock+0x10>)
   4:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:75
    FPEC->KEYR = FPEC_KEY2;
   6:	4a03      	ldr	r2, [pc, #12]	; (14 <fpecUnlock+0x14>)
   8:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:76
}
   a:	4770      	bx	lr
   c:	40022000 	.word	0x40022000
  10:	45670123 	.word	0x45670123
  14:	cdef89ab 	.word	0xcdef89ab

Disassembly of section .text.fpecLock:

00000000 <fpecLock>:
fpecLock():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:80

u8 fpecLock( void )
{
    FPEC->CR |= FPEC_CR_LOCK;
   0:	4b02      	ldr	r3, [pc, #8]	; (c <fpecLock+0xc>)
   2:	691a      	ldr	r2, [r3, #16]
   4:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   8:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:81
}
   a:	4770      	bx	lr
   c:	40022000 	.word	0x40022000

Disassembly of section .text.fpecWriteWord:

00000000 <fpecWriteWord>:
fpecWriteWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:94

    return( ucStatus );
}

u8 fpecWriteWord( u16 *uiAddress, u16 uiData )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:98
    // A dummy write, calling this function and pointing to a valid
    // location is FLASH, is required before writing data after an
    // erase operation!!!
    if( FPEC->CR & FPEC_CR_LOCK ){
   2:	4d0a      	ldr	r5, [pc, #40]	; (2c <fpecWriteWord+0x2c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:94

    return( ucStatus );
}

u8 fpecWriteWord( u16 *uiAddress, u16 uiData )
{
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:98
    // A dummy write, calling this function and pointing to a valid
    // location is FLASH, is required before writing data after an
    // erase operation!!!
    if( FPEC->CR & FPEC_CR_LOCK ){
   6:	692b      	ldr	r3, [r5, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:94

    return( ucStatus );
}

u8 fpecWriteWord( u16 *uiAddress, u16 uiData )
{
   8:	460e      	mov	r6, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:98
    // A dummy write, calling this function and pointing to a valid
    // location is FLASH, is required before writing data after an
    // erase operation!!!
    if( FPEC->CR & FPEC_CR_LOCK ){
   a:	f013 0f80 	tst.w	r3, #128	; 0x80
   e:	d001      	beq.n	6 <fpecWriteWord+0x6>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:99
        fpecUnlock( );
  10:	f7ff fffe 	bl	0 <fpecWriteWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:102
    } // if
    
    FPEC->CR |= FPEC_CR_PG;
  14:	692b      	ldr	r3, [r5, #16]
  16:	f043 0301 	orr.w	r3, r3, #1
  1a:	612b      	str	r3, [r5, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:103
    *uiAddress = uiData;
  1c:	8026      	strh	r6, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:104
    while( FPEC->SR & FPEC_SR_BSY )
  1e:	4b03      	ldr	r3, [pc, #12]	; (2c <fpecWriteWord+0x2c>)
  20:	68db      	ldr	r3, [r3, #12]
  22:	f013 0f01 	tst.w	r3, #1
  26:	d1fa      	bne.n	1e <fpecWriteWord+0x1e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:112
    if( *uiAddress == uiData ){
        return( 1 );
    } // if
    
    return( 0 );
}
  28:	2001      	movs	r0, #1
  2a:	bd70      	pop	{r4, r5, r6, pc}
  2c:	40022000 	.word	0x40022000

Disassembly of section .text.fpecWriteLong:

00000000 <fpecWriteLong>:
fpecWriteLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:84
{
    FPEC->CR |= FPEC_CR_LOCK;
}

u8 fpecWriteLong( u16 *uiAddress, u32 ulData )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:87
    u8 ucStatus;

    ucStatus = fpecWriteWord( uiAddress++, (u16)ulData );
   4:	b289      	uxth	r1, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:84
{
    FPEC->CR |= FPEC_CR_LOCK;
}

u8 fpecWriteLong( u16 *uiAddress, u32 ulData )
{
   6:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:87
    u8 ucStatus;

    ucStatus = fpecWriteWord( uiAddress++, (u16)ulData );
   8:	f7ff fffe 	bl	0 <fpecWriteLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:88
    ucStatus &= fpecWriteWord( uiAddress, (u16)( (u32)ulData >> 16 ) );
   c:	0c21      	lsrs	r1, r4, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:87

u8 fpecWriteLong( u16 *uiAddress, u32 ulData )
{
    u8 ucStatus;

    ucStatus = fpecWriteWord( uiAddress++, (u16)ulData );
   e:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:88
    ucStatus &= fpecWriteWord( uiAddress, (u16)( (u32)ulData >> 16 ) );
  10:	1cb0      	adds	r0, r6, #2
  12:	f7ff fffe 	bl	0 <fpecWriteLong>
  16:	4028      	ands	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:91

    return( ucStatus );
}
  18:	b2c0      	uxtb	r0, r0
  1a:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.fpecProcessIHEX:

00000000 <fpecProcessIHEX>:
fpecProcessIHEX():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:24
***************************************************************************/

#include "pygmy_profile.h"

u8 fpecProcessIHEX( u8 *ucBuffer )
{
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
   2:	b091      	sub	sp, #68	; 0x44
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:33
    u8 ucShortInts[64], ucLen;

    // Dummy write must be to erased area, 0x08002000 is selected as the first sector past the
    // valid bootloader range which is limited to 8KB max
    
    convertHexEncodedStringToBuffer( ucBuffer, ucShortInts );
   4:	4669      	mov	r1, sp
   6:	f7ff fffe 	bl	0 <convertHexEncodedStringToBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:36
    
    ucLen = ucShortInts[ 0 ];
    switch( ucShortInts[ 3 ] ){ // Location three in ShortInts is Record Type
   a:	f89d 3003 	ldrb.w	r3, [sp, #3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:35
    // Dummy write must be to erased area, 0x08002000 is selected as the first sector past the
    // valid bootloader range which is limited to 8KB max
    
    convertHexEncodedStringToBuffer( ucBuffer, ucShortInts );
    
    ucLen = ucShortInts[ 0 ];
   e:	f89d 7000 	ldrb.w	r7, [sp]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:36
    switch( ucShortInts[ 3 ] ){ // Location three in ShortInts is Record Type
  12:	2b05      	cmp	r3, #5
  14:	d845      	bhi.n	a2 <fpecProcessIHEX+0xa2>
  16:	e8df f003 	tbb	[pc, r3]
  1a:	0305      	.short	0x0305
  1c:	342c4444 	.word	0x342c4444
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:65
            ulAddress |= (u32)ucShortInts[ 5 ] << 16;
            ulAddress |= (u32)ucShortInts[ 6 ] << 8;
            ulAddress |= (u32)ucShortInts[ 7 ];
            break;
        case IHEX_EOF:
            return( 0xFF );
  20:	20ff      	movs	r0, #255	; 0xff
  22:	e03f      	b.n	a4 <fpecProcessIHEX+0xa4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:38
    convertHexEncodedStringToBuffer( ucBuffer, ucShortInts );
    
    ucLen = ucShortInts[ 0 ];
    switch( ucShortInts[ 3 ] ){ // Location three in ShortInts is Record Type
        case IHEX_DATA:
            ulAddrOffset = ( (u16)ucShortInts[ 1 ] << 8 ) + ucShortInts[ 2 ];
  24:	f89d 5001 	ldrb.w	r5, [sp, #1]
  28:	f89d 3002 	ldrb.w	r3, [sp, #2]
  2c:	4e1e      	ldr	r6, [pc, #120]	; (a8 <fpecProcessIHEX+0xa8>)
  2e:	022d      	lsls	r5, r5, #8
  30:	18ed      	adds	r5, r5, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:39
            if( !ucDummy ){ // one dummy write to valid erased flash address required after erase
  32:	7933      	ldrb	r3, [r6, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:38
    convertHexEncodedStringToBuffer( ucBuffer, ucShortInts );
    
    ucLen = ucShortInts[ 0 ];
    switch( ucShortInts[ 3 ] ){ // Location three in ShortInts is Record Type
        case IHEX_DATA:
            ulAddrOffset = ( (u16)ucShortInts[ 1 ] << 8 ) + ucShortInts[ 2 ];
  34:	6035      	str	r5, [r6, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:39
            if( !ucDummy ){ // one dummy write to valid erased flash address required after erase
  36:	b93b      	cbnz	r3, 48 <fpecProcessIHEX+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:40
                fpecWriteWord( (u16*)( ulAddress + ulAddrOffset ), 0xFFFF );
  38:	68b0      	ldr	r0, [r6, #8]
  3a:	f64f 71ff 	movw	r1, #65535	; 0xffff
  3e:	1828      	adds	r0, r5, r0
  40:	f7ff fffe 	bl	0 <fpecProcessIHEX>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:41
                ucDummy = 1;
  44:	2301      	movs	r3, #1
  46:	7133      	strb	r3, [r6, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:24
***************************************************************************/

#include "pygmy_profile.h"

u8 fpecProcessIHEX( u8 *ucBuffer )
{
  48:	2400      	movs	r4, #0
  4a:	e00f      	b.n	6c <fpecProcessIHEX+0x6c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:45
                fpecWriteWord( (u16*)( ulAddress + ulAddrOffset ), 0xFFFF );
                ucDummy = 1;
            } // if
            for( i = 0; i < ucLen; ){
                uiData =  (u16)( ucShortInts[ 4 + i ] );
                uiData |= (u16)( ucShortInts[ 4 + i + 1 ] )<<8;
  4c:	aa10      	add	r2, sp, #64	; 0x40
  4e:	1913      	adds	r3, r2, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:47
                
                if( !fpecWriteWord( (u16*)(ulAddress + ulAddrOffset + i), uiData) ){
  50:	68b0      	ldr	r0, [r6, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:45
                fpecWriteWord( (u16*)( ulAddress + ulAddrOffset ), 0xFFFF );
                ucDummy = 1;
            } // if
            for( i = 0; i < ucLen; ){
                uiData =  (u16)( ucShortInts[ 4 + i ] );
                uiData |= (u16)( ucShortInts[ 4 + i + 1 ] )<<8;
  52:	f813 1c3b 	ldrb.w	r1, [r3, #-59]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:44
            if( !ucDummy ){ // one dummy write to valid erased flash address required after erase
                fpecWriteWord( (u16*)( ulAddress + ulAddrOffset ), 0xFFFF );
                ucDummy = 1;
            } // if
            for( i = 0; i < ucLen; ){
                uiData =  (u16)( ucShortInts[ 4 + i ] );
  56:	f813 3c3c 	ldrb.w	r3, [r3, #-60]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:47
                uiData |= (u16)( ucShortInts[ 4 + i + 1 ] )<<8;
                
                if( !fpecWriteWord( (u16*)(ulAddress + ulAddrOffset + i), uiData) ){
  5a:	1828      	adds	r0, r5, r0
  5c:	1900      	adds	r0, r0, r4
  5e:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
  62:	f7ff fffe 	bl	0 <fpecProcessIHEX>
  66:	b1e8      	cbz	r0, a4 <fpecProcessIHEX+0xa4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:50
                    return( 0 ); // Flash failed
                } // if
                i+= 2;
  68:	3402      	adds	r4, #2
  6a:	b2a4      	uxth	r4, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:43
            ulAddrOffset = ( (u16)ucShortInts[ 1 ] << 8 ) + ucShortInts[ 2 ];
            if( !ucDummy ){ // one dummy write to valid erased flash address required after erase
                fpecWriteWord( (u16*)( ulAddress + ulAddrOffset ), 0xFFFF );
                ucDummy = 1;
            } // if
            for( i = 0; i < ucLen; ){
  6c:	42bc      	cmp	r4, r7
  6e:	d3ed      	bcc.n	4c <fpecProcessIHEX+0x4c>
  70:	e017      	b.n	a2 <fpecProcessIHEX+0xa2>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:55
                i+= 2;
                
            }
            break;
        case IHEX_EXTENDEDLINEARADDR: // 16 MSb of 32 bit address stored in data section
            ulAddress = (u32)(ucShortInts[ 4 ]) << 24;
  72:	f89d 2004 	ldrb.w	r2, [sp, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:56
            ulAddress |= (u32)(ucShortInts[ 5 ]) << 16;
  76:	f89d 3005 	ldrb.w	r3, [sp, #5]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:55
                i+= 2;
                
            }
            break;
        case IHEX_EXTENDEDLINEARADDR: // 16 MSb of 32 bit address stored in data section
            ulAddress = (u32)(ucShortInts[ 4 ]) << 24;
  7a:	0612      	lsls	r2, r2, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:56
            ulAddress |= (u32)(ucShortInts[ 5 ]) << 16;
  7c:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  80:	e00d      	b.n	9e <fpecProcessIHEX+0x9e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:60
            break;
        case IHEX_STARTLINEARADDR: // Full 32 byte address stored in data section
            ulAddress = (u32)ucShortInts[ 4 ] << 24;
            ulAddress |= (u32)ucShortInts[ 5 ] << 16;
  82:	f89d 2005 	ldrb.w	r2, [sp, #5]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:59
        case IHEX_EXTENDEDLINEARADDR: // 16 MSb of 32 bit address stored in data section
            ulAddress = (u32)(ucShortInts[ 4 ]) << 24;
            ulAddress |= (u32)(ucShortInts[ 5 ]) << 16;
            break;
        case IHEX_STARTLINEARADDR: // Full 32 byte address stored in data section
            ulAddress = (u32)ucShortInts[ 4 ] << 24;
  86:	f89d 3004 	ldrb.w	r3, [sp, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:60
            ulAddress |= (u32)ucShortInts[ 5 ] << 16;
  8a:	0412      	lsls	r2, r2, #16
  8c:	ea42 6203 	orr.w	r2, r2, r3, lsl #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:62
            ulAddress |= (u32)ucShortInts[ 6 ] << 8;
            ulAddress |= (u32)ucShortInts[ 7 ];
  90:	f89d 3007 	ldrb.w	r3, [sp, #7]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:61
            ulAddress |= (u32)(ucShortInts[ 5 ]) << 16;
            break;
        case IHEX_STARTLINEARADDR: // Full 32 byte address stored in data section
            ulAddress = (u32)ucShortInts[ 4 ] << 24;
            ulAddress |= (u32)ucShortInts[ 5 ] << 16;
            ulAddress |= (u32)ucShortInts[ 6 ] << 8;
  94:	431a      	orrs	r2, r3
  96:	f89d 3006 	ldrb.w	r3, [sp, #6]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:62
            ulAddress |= (u32)ucShortInts[ 7 ];
  9a:	ea42 2203 	orr.w	r2, r2, r3, lsl #8
  9e:	4b02      	ldr	r3, [pc, #8]	; (a8 <fpecProcessIHEX+0xa8>)
  a0:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:69
        case IHEX_EOF:
            return( 0xFF );
            break;
    }

    return( 1 );
  a2:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:70
}
  a4:	b011      	add	sp, #68	; 0x44
  a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
  a8:	00000000 	.word	0x00000000

Disassembly of section .text.fpecErasePage:

00000000 <fpecErasePage>:
fpecErasePage():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:136
    u32 *ulData;
    u16 i;

    ulData = (u32*)ulAddress;
    
    FPEC->CR |= FPEC_CR_PER;            // Page Erase
   0:	691a4b0f 	.word	0x691a4b0f
   4:	f042 0202 	orr.w	r2, r2, #2
   8:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:137
    FPEC->AR = ulAddress;               // Load Address
   a:	6158      	str	r0, [r3, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:138
    FPEC->CR |= FPEC_CR_STRT;           // Start Erase
   c:	691a      	ldr	r2, [r3, #16]
   e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
  12:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:139
    while( FPEC->SR & FPEC_SR_BSY )    // Wait until complete
  14:	4a0a      	ldr	r2, [pc, #40]	; (40 <fpecErasePage+0x40>)
  16:	68d3      	ldr	r3, [r2, #12]
  18:	f013 0301 	ands.w	r3, r3, #1
  1c:	d1fa      	bne.n	14 <fpecErasePage+0x14>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:141
        ;
    FPEC->CR &= ~(FPEC_CR_PER|FPEC_CR_STRT);           // Start Erase
  1e:	6911      	ldr	r1, [r2, #16]
  20:	f021 0142 	bic.w	r1, r1, #66	; 0x42
  24:	6111      	str	r1, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:143
    for( i = 0; i < 256; i++ ){         // Verify the 1KB Page is empty
        if( *(ulData+i) != 0xFFFFFFFF ){
  26:	581a      	ldr	r2, [r3, r0]
  28:	f1b2 3fff 	cmp.w	r2, #4294967295
  2c:	d105      	bne.n	3a <fpecErasePage+0x3a>
  2e:	3304      	adds	r3, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:142
    FPEC->AR = ulAddress;               // Load Address
    FPEC->CR |= FPEC_CR_STRT;           // Start Erase
    while( FPEC->SR & FPEC_SR_BSY )    // Wait until complete
        ;
    FPEC->CR &= ~(FPEC_CR_PER|FPEC_CR_STRT);           // Start Erase
    for( i = 0; i < 256; i++ ){         // Verify the 1KB Page is empty
  30:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
  34:	d1f7      	bne.n	26 <fpecErasePage+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:148
        if( *(ulData+i) != 0xFFFFFFFF ){
            return( 0 );
        } // if
    } // for
    
    return( 1 );
  36:	2001      	movs	r0, #1
  38:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:144
    while( FPEC->SR & FPEC_SR_BSY )    // Wait until complete
        ;
    FPEC->CR &= ~(FPEC_CR_PER|FPEC_CR_STRT);           // Start Erase
    for( i = 0; i < 256; i++ ){         // Verify the 1KB Page is empty
        if( *(ulData+i) != 0xFFFFFFFF ){
            return( 0 );
  3a:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:149
        } // if
    } // for
    
    return( 1 );
}
  3c:	4770      	bx	lr
  3e:	bf00      	nop
  40:	40022000 	.word	0x40022000

Disassembly of section .text.fpecEraseProgramMemory:

00000000 <fpecEraseProgramMemory>:
fpecEraseProgramMemory():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:115
    
    return( 0 );
}

u8 fpecEraseProgramMemory( u16 uiStart, u16 uiEnd )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:114
    } // if
    
    return( 0 );
}

u8 fpecEraseProgramMemory( u16 uiStart, u16 uiEnd )
   4:	f504 3500 	add.w	r5, r4, #131072	; 0x20000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:115
{
   8:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:119
    u32 i, ucFail;
    
    fpecUnlock();
    for( i = uiStart; i < uiEnd; i++ ){
   a:	02ad      	lsls	r5, r5, #10
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:118

u8 fpecEraseProgramMemory( u16 uiStart, u16 uiEnd )
{
    u32 i, ucFail;
    
    fpecUnlock();
   c:	f7ff fffe 	bl	0 <fpecEraseProgramMemory>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:119
    for( i = uiStart; i < uiEnd; i++ ){
  10:	e00c      	b.n	2c <fpecEraseProgramMemory+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:121
        for( ucFail = 0; !fpecErasePage( 0x08000000 + ( i * 1024 ) ) ; ucFail++ ){
            if( ucFail > 3 ) // Acceptable limit of retries before we know something is wrong
  12:	2e04      	cmp	r6, #4
  14:	d00d      	beq.n	32 <fpecEraseProgramMemory+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:120
{
    u32 i, ucFail;
    
    fpecUnlock();
    for( i = uiStart; i < uiEnd; i++ ){
        for( ucFail = 0; !fpecErasePage( 0x08000000 + ( i * 1024 ) ) ; ucFail++ ){
  16:	3601      	adds	r6, #1
  18:	e000      	b.n	1c <fpecEraseProgramMemory+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:119
u8 fpecEraseProgramMemory( u16 uiStart, u16 uiEnd )
{
    u32 i, ucFail;
    
    fpecUnlock();
    for( i = uiStart; i < uiEnd; i++ ){
  1a:	2600      	movs	r6, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:120
        for( ucFail = 0; !fpecErasePage( 0x08000000 + ( i * 1024 ) ) ; ucFail++ ){
  1c:	4628      	mov	r0, r5
  1e:	f7ff fffe 	bl	0 <fpecEraseProgramMemory>
  22:	2800      	cmp	r0, #0
  24:	d0f5      	beq.n	12 <fpecEraseProgramMemory+0x12>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:119
u8 fpecEraseProgramMemory( u16 uiStart, u16 uiEnd )
{
    u32 i, ucFail;
    
    fpecUnlock();
    for( i = uiStart; i < uiEnd; i++ ){
  26:	3401      	adds	r4, #1
  28:	f505 6580 	add.w	r5, r5, #1024	; 0x400
  2c:	42bc      	cmp	r4, r7
  2e:	d3f4      	bcc.n	1a <fpecEraseProgramMemory+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:126
            if( ucFail > 3 ) // Acceptable limit of retries before we know something is wrong
                return( 0 );
        }
    }

    return( 1 );
  30:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_fpec.c:127
}
  32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
