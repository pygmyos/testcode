
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\boot\pygmy_file.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.code\boot\pygmy_file.o


Disassembly of section .text.fileOpenResource:

00000000 <fileOpenResource>:
fileOpenResource():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:162
    /*ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
    */
    pygmyFile->Length = (u32)((u8)*(ucResource)) << 24;
   0:	780a      	ldrb	r2, [r1, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:154
    
    return( 1 );
}

u8 fileOpenResource( PYGMYFILE *pygmyFile, u8 *ucResource )
{
   2:	4603      	mov	r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:162
    /*ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
    */
    pygmyFile->Length = (u32)((u8)*(ucResource)) << 24;
   4:	0612      	lsls	r2, r2, #24
   6:	6042      	str	r2, [r0, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:163
    pygmyFile->Length |= (u32)((u8)*(ucResource+1)) << 16;
   8:	7848      	ldrb	r0, [r1, #1]
   a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   e:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:164
    pygmyFile->Length |= (u32)((u8)*(ucResource+2)) << 8;
  10:	7888      	ldrb	r0, [r1, #2]
  12:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  16:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:165
    pygmyFile->Length |= (u32)((u8)*(ucResource+3));
  18:	78c8      	ldrb	r0, [r1, #3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:166
    pygmyFile->Resource = (u8*)(ucResource+4);
  1a:	3104      	adds	r1, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:165
    ulLen |= (u32)((u8)*(ucResource+3));
    */
    pygmyFile->Length = (u32)((u8)*(ucResource)) << 24;
    pygmyFile->Length |= (u32)((u8)*(ucResource+1)) << 16;
    pygmyFile->Length |= (u32)((u8)*(ucResource+2)) << 8;
    pygmyFile->Length |= (u32)((u8)*(ucResource+3));
  1c:	4302      	orrs	r2, r0
  1e:	605a      	str	r2, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:170
    pygmyFile->Resource = (u8*)(ucResource+4);
    pygmyFile->Name[ 0 ] = '\0';
    //pygmyFile->Length = ulLen;
    pygmyFile->Index = 0;
    pygmyFile->Attributes = READ;
  20:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:167
    pygmyFile->Length = (u32)((u8)*(ucResource)) << 24;
    pygmyFile->Length |= (u32)((u8)*(ucResource+1)) << 16;
    pygmyFile->Length |= (u32)((u8)*(ucResource+2)) << 8;
    pygmyFile->Length |= (u32)((u8)*(ucResource+3));
    pygmyFile->Resource = (u8*)(ucResource+4);
    pygmyFile->Name[ 0 ] = '\0';
  22:	2200      	movs	r2, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:166
    */
    pygmyFile->Length = (u32)((u8)*(ucResource)) << 24;
    pygmyFile->Length |= (u32)((u8)*(ucResource+1)) << 16;
    pygmyFile->Length |= (u32)((u8)*(ucResource+2)) << 8;
    pygmyFile->Length |= (u32)((u8)*(ucResource+3));
    pygmyFile->Resource = (u8*)(ucResource+4);
  24:	6159      	str	r1, [r3, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:167
    pygmyFile->Name[ 0 ] = '\0';
  26:	761a      	strb	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:169
    //pygmyFile->Length = ulLen;
    pygmyFile->Index = 0;
  28:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:170
    pygmyFile->Attributes = READ;
  2a:	7418      	strb	r0, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:173

    return( 1 );
}
  2c:	4770      	bx	lr

Disassembly of section .text.fileCopyHandle:

00000000 <fileCopyHandle>:
fileCopyHandle():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:193
    return( 1 );
}

void fileCopyHandle( PYGMYFILE *pygmyFrom, PYGMYFILE *pygmyTo )
{
    pygmyTo->Sector     = pygmyFrom->Sector;
   0:	6803      	ldr	r3, [r0, #0]
   2:	600b      	str	r3, [r1, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:194
    pygmyTo->Length     = pygmyFrom->Length;
   4:	6843      	ldr	r3, [r0, #4]
   6:	604b      	str	r3, [r1, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:195
    pygmyTo->Index      = pygmyFrom->Index;
   8:	6883      	ldr	r3, [r0, #8]
   a:	608b      	str	r3, [r1, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:196
    pygmyTo->ID_Sector  = pygmyFrom->ID_Sector;
   c:	8983      	ldrh	r3, [r0, #12]
   e:	818b      	strh	r3, [r1, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:197
    pygmyTo->ID_File    = pygmyFrom->ID_File;
  10:	89c3      	ldrh	r3, [r0, #14]
  12:	81cb      	strh	r3, [r1, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:198
    pygmyTo->Attributes = pygmyFrom->Attributes;
  14:	7c03      	ldrb	r3, [r0, #16]
  16:	740b      	strb	r3, [r1, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:199
    pygmyTo->Resource   = pygmyFrom->Resource;
  18:	6943      	ldr	r3, [r0, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:200
    copyString( pygmyFrom->Name, pygmyTo->Name );
  1a:	3018      	adds	r0, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:199
    pygmyTo->Length     = pygmyFrom->Length;
    pygmyTo->Index      = pygmyFrom->Index;
    pygmyTo->ID_Sector  = pygmyFrom->ID_Sector;
    pygmyTo->ID_File    = pygmyFrom->ID_File;
    pygmyTo->Attributes = pygmyFrom->Attributes;
    pygmyTo->Resource   = pygmyFrom->Resource;
  1c:	614b      	str	r3, [r1, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:200
    copyString( pygmyFrom->Name, pygmyTo->Name );
  1e:	3118      	adds	r1, #24
  20:	f7ff bffe 	b.w	0 <copyString>

Disassembly of section .text.fileGetPosition:

00000000 <fileGetPosition>:
fileGetPosition():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:206
}

u32 fileGetPosition( PYGMYFILE *pygmyFile )
{
    return( pygmyFile->Index );
}
   0:	6880      	ldr	r0, [r0, #8]
   2:	4770      	bx	lr

Disassembly of section .text.fileSetPosition:

00000000 <fileSetPosition>:
fileSetPosition():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:210

u8 fileSetPosition( PYGMYFILE *pygmyFile, u8 ucOrigin, s32 lIndex )
{
    if( ucOrigin == START ){ 
   0:	2901      	cmp	r1, #1
   2:	d107      	bne.n	14 <fileSetPosition+0x14>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:211
        if( lIndex >= 0 && lIndex < pygmyFile->Length ){
   4:	2a00      	cmp	r2, #0
   6:	db16      	blt.n	36 <fileSetPosition+0x36>
   8:	6843      	ldr	r3, [r0, #4]
   a:	429a      	cmp	r2, r3
   c:	d213      	bcs.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:212
            pygmyFile->Index = lIndex;
   e:	6082      	str	r2, [r0, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:213
            return( 1 );
  10:	4608      	mov	r0, r1
  12:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:215
        } // if
    } else if( ucOrigin == CURRENT ){
  14:	2902      	cmp	r1, #2
  16:	d106      	bne.n	26 <fileSetPosition+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:216
        if( ( pygmyFile->Index + lIndex ) >= 0 && ( pygmyFile->Index + lIndex ) < pygmyFile->Length ){
  18:	6883      	ldr	r3, [r0, #8]
  1a:	18d2      	adds	r2, r2, r3
  1c:	6843      	ldr	r3, [r0, #4]
  1e:	429a      	cmp	r2, r3
  20:	d209      	bcs.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:217
            pygmyFile->Index += lIndex;
  22:	6082      	str	r2, [r0, #8]
  24:	e005      	b.n	32 <fileSetPosition+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:220
            return( 1 );
        } // if
    } else if( ucOrigin == END ){
  26:	2904      	cmp	r1, #4
  28:	d105      	bne.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:221
        if( ( pygmyFile->Length + lIndex ) >= 0 && ( pygmyFile->Length + lIndex ) < pygmyFile->Length ){
  2a:	6843      	ldr	r3, [r0, #4]
  2c:	18d2      	adds	r2, r2, r3
  2e:	d304      	bcc.n	3a <fileSetPosition+0x3a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:222
                pygmyFile->Length += lIndex;
  30:	6042      	str	r2, [r0, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:223
            return( 1 );
  32:	2001      	movs	r0, #1
  34:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:227
        } // if
    } // else
    
    return( 0 );
  36:	2000      	movs	r0, #0
  38:	4770      	bx	lr
  3a:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:228
}
  3c:	4770      	bx	lr

Disassembly of section .text.fileIsEOF:

00000000 <fileIsEOF>:
fileIsEOF():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:232

u8 fileIsEOF( PYGMYFILE *pygmyFile )
{
    return( pygmyFile->Attributes & EOF );
   0:	7c00      	ldrb	r0, [r0, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:233
}
   2:	f000 0080 	and.w	r0, r0, #128	; 0x80
   6:	4770      	bx	lr

Disassembly of section .text.fileIsRootFull:

00000000 <fileIsRootFull>:
fileIsRootFull():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:237

u8 fileIsRootFull( void )
{
    return( pygmyRootVolume.Attributes & VOLUMEFULL );
   0:	4b02      	ldr	r3, [pc, #8]	; (c <fileIsRootFull+0xc>)
   2:	7b58      	ldrb	r0, [r3, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:238
}
   4:	f000 0080 	and.w	r0, r0, #128	; 0x80
   8:	4770      	bx	lr
   a:	bf00      	nop
   c:	00000000 	.word	0x00000000

Disassembly of section .text.fileIsValidName:

00000000 <fileIsValidName>:
fileIsValidName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:275

    return( ulFreeSpace );
}

u8 fileIsValidName( u8 *ucName )
{
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
   4:	240d      	movs	r4, #13
   6:	e017      	b.n	38 <fileIsValidName+0x38>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:281
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
   8:	2c01      	cmp	r4, #1
   a:	d01b      	beq.n	44 <fileIsValidName+0x44>
   c:	f7ff fffe 	bl	0 <isAlpha>
  10:	b978      	cbnz	r0, 32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:282
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
  12:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  16:	f1a3 0223 	sub.w	r2, r3, #35	; 0x23
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:281
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
  1a:	b2d2      	uxtb	r2, r2
  1c:	2a03      	cmp	r2, #3
  1e:	d908      	bls.n	32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:282
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
  20:	f1a3 022d 	sub.w	r2, r3, #45	; 0x2d
  24:	b2d2      	uxtb	r2, r2
  26:	2a0c      	cmp	r2, #12
  28:	d903      	bls.n	32 <fileIsValidName+0x32>
  2a:	2b5f      	cmp	r3, #95	; 0x5f
  2c:	d001      	beq.n	32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:283
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
  2e:	2b7e      	cmp	r3, #126	; 0x7e
  30:	d10b      	bne.n	4a <fileIsValidName+0x4a>
  32:	3c01      	subs	r4, #1
  34:	b2e4      	uxtb	r4, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:280
{
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
  36:	b13c      	cbz	r4, 48 <fileIsValidName+0x48>
  38:	f815 0b01 	ldrb.w	r0, [r5], #1
  3c:	2800      	cmp	r0, #0
  3e:	d1e3      	bne.n	8 <fileIsValidName+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:288
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  40:	3001      	adds	r0, #1
  42:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:284
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
            return( 0 );
  44:	2000      	movs	r0, #0
  46:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:288
        } // if
    } // for

    return( 1 );
  48:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:289
}
  4a:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.fileGetMaxFiles:

00000000 <fileGetMaxFiles>:
fileGetMaxFiles():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:604
}
 
u16 fileGetMaxFiles( void )
{
    return( pygmyRootVolume.MaxFiles );
}
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <fileGetMaxFiles+0x8>)
   2:	8b98      	ldrh	r0, [r3, #28]
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	00000000 	.word	0x00000000

Disassembly of section .text.spiWriteByte:

00000000 <spiWriteByte>:
spiWriteByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1160
void spiWriteByte( PYGMYSPIPORT *pymgyPort, u8 ucByte )
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
   0:	4b0a      	ldr	r3, [pc, #40]	; (2c <spiWriteByte+0x2c>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1162
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
   a:	2280      	movs	r2, #128	; 0x80
   c:	411a      	asrs	r2, r3
   e:	420a      	tst	r2, r1
  10:	4a06      	ldr	r2, [pc, #24]	; (2c <spiWriteByte+0x2c>)
  12:	f44f 4000 	mov.w	r0, #32768	; 0x8000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1163
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  16:	bf14      	ite	ne
  18:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1165
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1a:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1168
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
  1c:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1167
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  1e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1161
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
  22:	2b08      	cmp	r3, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1167
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  24:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1168
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
  26:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1161
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
  28:	d1ef      	bne.n	a <spiWriteByte+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1170
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
    } // for
} 
  2a:	4770      	bx	lr
  2c:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiWriteWord:

00000000 <spiWriteWord>:
spiWriteWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1177
void spiWriteWord( PYGMYSPIPORT *pymgyPort,  u16 uiWord )
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
   0:	4b0a      	ldr	r3, [pc, #40]	; (2c <spiWriteWord+0x2c>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1179
	for( i = 0; i < 16; i++ ){ 			    // 
		if( uiWord & ( 0x8000 >> i ) ){	    // 
   a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   e:	fa50 f203 	asrs.w	r2, r0, r3
  12:	420a      	tst	r2, r1
  14:	4a05      	ldr	r2, [pc, #20]	; (2c <spiWriteWord+0x2c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1180
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  16:	bf14      	ite	ne
  18:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1182
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1a:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1185
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  1c:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1184
		if( uiWord & ( 0x8000 >> i ) ){	    // 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  1e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1178
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 16; i++ ){ 			    // 
  22:	2b10      	cmp	r3, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1184
		if( uiWord & ( 0x8000 >> i ) ){	    // 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  24:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1185
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  26:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1178
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 16; i++ ){ 			    // 
  28:	d1ef      	bne.n	a <spiWriteWord+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1187
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
} 
  2a:	4770      	bx	lr
  2c:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiWriteLong:

00000000 <spiWriteLong>:
spiWriteLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1194
void spiWriteLong( PYGMYSPIPORT *pymgyPort, u32 ulLong )
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
   0:	4b0b      	ldr	r3, [pc, #44]	; (30 <spiWriteLong+0x30>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1196
	for( i = 0; i < 32; i++ ){ 			    // 
		if( ulLong & ( 0x80000000 >> i ) ){	// 
   a:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
   e:	40da      	lsrs	r2, r3
  10:	420a      	tst	r2, r1
  12:	4a07      	ldr	r2, [pc, #28]	; (30 <spiWriteLong+0x30>)
  14:	f44f 4000 	mov.w	r0, #32768	; 0x8000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1197
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  18:	bf14      	ite	ne
  1a:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1199
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1c:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1202
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  1e:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1201
		if( ulLong & ( 0x80000000 >> i ) ){	// 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  20:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1195
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 32; i++ ){ 			    // 
  24:	2b20      	cmp	r3, #32
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1201
		if( ulLong & ( 0x80000000 >> i ) ){	// 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  26:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1202
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  28:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1195
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 32; i++ ){ 			    // 
  2a:	d1ee      	bne.n	a <spiWriteLong+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1204
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
} 
  2c:	4770      	bx	lr
  2e:	bf00      	nop
  30:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiReadByte:

00000000 <spiReadByte>:
spiReadByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1212
{
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
   0:	4b0d      	ldr	r3, [pc, #52]	; (38 <spiReadByte+0x38>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1213
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
   a:	4618      	mov	r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1214
		FLASH_SCK_HIGH;				        // clock must start low, transition high 			
   c:	4a0a      	ldr	r2, [pc, #40]	; (38 <spiReadByte+0x38>)
   e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  12:	6111      	str	r1, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1215
        if( FLASH_MISO_STATE ){               // Test port input for high and set bit in ucByte
  14:	6892      	ldr	r2, [r2, #8]
  16:	f412 4f80 	tst.w	r2, #16384	; 0x4000
  1a:	d004      	beq.n	26 <spiReadByte+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1216
			ucByte |= ( BIT7 >> i );        //
  1c:	2280      	movs	r2, #128	; 0x80
  1e:	411a      	asrs	r2, r3
  20:	ea42 0000 	orr.w	r0, r2, r0
  24:	b2c0      	uxtb	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1218
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  26:	4a04      	ldr	r2, [pc, #16]	; (38 <spiReadByte+0x38>)
  28:	3301      	adds	r3, #1
  2a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1213
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
  2e:	2b08      	cmp	r3, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1218
		FLASH_SCK_HIGH;				        // clock must start low, transition high 			
        if( FLASH_MISO_STATE ){               // Test port input for high and set bit in ucByte
			ucByte |= ( BIT7 >> i );        //
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  30:	6151      	str	r1, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1213
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
  32:	d1eb      	bne.n	c <spiReadByte+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1222
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
	
	return( ucByte );
}
  34:	4770      	bx	lr
  36:	bf00      	nop
  38:	40010c00 	.word	0x40010c00

Disassembly of section .text.flashReadWord:

00000000 <flashReadWord>:
flashReadWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1227

#endif

u16 flashReadWord( u32 ulAddress )
{
   0:	4c0bb570 	.word	0x4c0bb570
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1231
    u16 uiWord;

    ulAddress |=  0x03000000;
    FLASH_CS_LOW;               // CS active low to enable chip  
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1230

u16 flashReadWord( u32 ulAddress )
{
    u16 uiWord;

    ulAddress |=  0x03000000;
   8:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1231
    FLASH_CS_LOW;               // CS active low to enable chip  
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1232
    spiWriteLong( &pygmyFlashSPI, ulAddress );
   e:	4809      	ldr	r0, [pc, #36]	; (34 <flashReadWord+0x34>)
  10:	f7ff fffe 	bl	0 <flashReadWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1233
	uiWord = (u16)spiReadByte( &pygmyFlashSPI ) << 8;
  14:	4807      	ldr	r0, [pc, #28]	; (20 <flashReadWord+0x20>)
  16:	f7ff fffe 	bl	0 <flashReadWord>
  1a:	0200      	lsls	r0, r0, #8
  1c:	b286      	uxth	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1234
    uiWord |= (u16)spiReadByte( &pygmyFlashSPI );
  1e:	4805      	ldr	r0, [pc, #20]	; (34 <flashReadWord+0x34>)
  20:	f7ff fffe 	bl	0 <flashReadWord>
  24:	ea46 0000 	orr.w	r0, r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1235
    FLASH_CS_HIGH;
  28:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1238
    
    return( uiWord );
}
  2a:	b280      	uxth	r0, r0
  2c:	bd70      	pop	{r4, r5, r6, pc}
  2e:	bf00      	nop
  30:	40010c00 	.word	0x40010c00
  34:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFAT:

00000000 <fileGetFAT>:
fileGetFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:428

    return( 0 );
}

u16 fileGetFAT( u16 uiID, u16 uiIndex )
{
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   4:	4604      	mov	r4, r0
   6:	4689      	mov	r9, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:432
    u8 ucAlloc;
    u16 i, uiTmpID, uiID_Sector;

    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
   8:	2500      	movs	r5, #0
   a:	e017      	b.n	3c <fileGetFAT+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:433
        uiID_Sector = flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
   c:	6970      	ldr	r0, [r6, #20]
   e:	ea4f 0885 	mov.w	r8, r5, lsl #2
  12:	4440      	add	r0, r8
  14:	f7ff fffe 	bl	0 <fileGetFAT>
  18:	4607      	mov	r7, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:438
        ucAlloc = uiID_Sector >> 14;
        uiID_Sector <<= 2;
        uiID_Sector >>= 2; 
        
        uiTmpID = flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) + 2 );
  1a:	6970      	ldr	r0, [r6, #20]
  1c:	3002      	adds	r0, #2
  1e:	4440      	add	r0, r8
  20:	f7ff fffe 	bl	0 <fileGetFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:434
    u8 ucAlloc;
    u16 i, uiTmpID, uiID_Sector;

    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
        uiID_Sector = flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
        ucAlloc = uiID_Sector >> 14;
  24:	0bbb      	lsrs	r3, r7, #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:439
        uiID_Sector <<= 2;
        uiID_Sector >>= 2; 
        
        uiTmpID = flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) + 2 );
        if(  ucAlloc == 0x01 && uiID_Sector == uiIndex && uiID == uiTmpID ){
  26:	b2db      	uxtb	r3, r3
  28:	2b01      	cmp	r3, #1
  2a:	d105      	bne.n	38 <fileGetFAT+0x38>
  2c:	04bf      	lsls	r7, r7, #18
  2e:	0cbf      	lsrs	r7, r7, #18
  30:	454f      	cmp	r7, r9
  32:	d101      	bne.n	38 <fileGetFAT+0x38>
  34:	4284      	cmp	r4, r0
  36:	d007      	beq.n	48 <fileGetFAT+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:432
u16 fileGetFAT( u16 uiID, u16 uiIndex )
{
    u8 ucAlloc;
    u16 i, uiTmpID, uiID_Sector;

    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
  38:	3501      	adds	r5, #1
  3a:	b2ad      	uxth	r5, r5
  3c:	4e04      	ldr	r6, [pc, #16]	; (50 <fileGetFAT+0x50>)
  3e:	8b33      	ldrh	r3, [r6, #24]
  40:	42ab      	cmp	r3, r5
  42:	d8e3      	bhi.n	c <fileGetFAT+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:446
        } // if
    } // for
    #ifndef __PYGMY_BOOT
        pygmyRootVolume.Attributes |= VOLUMEERROR;
    #endif // __PYGMY_BOOT
    return( 0xFFFF ); // 0xFFFF indicates error
  44:	f64f 75ff 	movw	r5, #65535	; 0xffff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:447
}
  48:	4628      	mov	r0, r5
  4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4e:	bf00      	nop
  50:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadLong:

00000000 <flashReadLong>:
flashReadLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1241
    
    return( uiWord );
}

u32 flashReadLong( u32 ulAddress )
{
   0:	41f0e92d 	.word	0x41f0e92d
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1245
    u32 ulLong;

    ulAddress |= 0x03000000;
    FLASH_CS_LOW; 
   4:	4c10      	ldr	r4, [pc, #64]	; (48 <flashReadLong+0x48>)
   6:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1244

u32 flashReadLong( u32 ulAddress )
{
    u32 ulLong;

    ulAddress |= 0x03000000;
   a:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1245
    FLASH_CS_LOW; 
   e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1246
    spiWriteLong( &pygmyFlashSPI, ulAddress );
  10:	480e      	ldr	r0, [pc, #56]	; (4c <flashReadLong+0x4c>)
  12:	f7ff fffe 	bl	0 <flashReadLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1247
    ulLong = (u32)spiReadByte( &pygmyFlashSPI ) << 24;
  16:	480d      	ldr	r0, [pc, #52]	; (38 <flashReadLong+0x38>)
  18:	f7ff fffe 	bl	0 <flashReadLong>
  1c:	0607      	lsls	r7, r0, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1248
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 16;
  1e:	480b      	ldr	r0, [pc, #44]	; (4c <flashReadLong+0x4c>)
  20:	f7ff fffe 	bl	0 <flashReadLong>
  24:	4680      	mov	r8, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1249
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 8;
  26:	4809      	ldr	r0, [pc, #36]	; (4c <flashReadLong+0x4c>)
  28:	f7ff fffe 	bl	0 <flashReadLong>
  2c:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1250
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI );
  2e:	4807      	ldr	r0, [pc, #28]	; (4c <flashReadLong+0x4c>)
  30:	f7ff fffe 	bl	0 <flashReadLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1248

    ulAddress |= 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    ulLong = (u32)spiReadByte( &pygmyFlashSPI ) << 24;
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 16;
  34:	ea47 4308 	orr.w	r3, r7, r8, lsl #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1249
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 8;
  38:	ea43 0000 	orr.w	r0, r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1251
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI );
    FLASH_CS_HIGH;
  3c:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1254

    return( ulLong );
}
  3e:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
  42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  46:	bf00      	nop
  48:	40010c00 	.word	0x40010c00
  4c:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetLength:

00000000 <fileGetLength>:
fileGetLength():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:742
    
    return( 0 );
}

u32 fileGetLength( u32 ulID_File )
{
   0:	2101b538 	.word	0x2101b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:745
    u32 i, ulLen, ulAddress;

    ulAddress = fileGetFAT( ulID_File, 1 ); // This returns sector index, not address
   4:	b280      	uxth	r0, r0
   6:	f7ff fffe 	bl	0 <fileGetLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:746
    if( ulAddress == 0xFFFF ){
   a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   e:	4298      	cmp	r0, r3
  10:	d011      	beq.n	36 <fileGetLength+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:753
    } // if
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    //ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    //ulAddress *= pygmyRootVolume.SectorSize;
    ulAddress = pygmyRootVolume.FirstFileSector + ( ulAddress * pygmyRootVolume.SectorSize );
  12:	4b0a      	ldr	r3, [pc, #40]	; (3c <fileGetLength+0x3c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:754
    for( i = 0; i < 128; ){
  14:	2400      	movs	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:753
    } // if
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    //ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    //ulAddress *= pygmyRootVolume.SectorSize;
    ulAddress = pygmyRootVolume.FirstFileSector + ( ulAddress * pygmyRootVolume.SectorSize );
  16:	8b5d      	ldrh	r5, [r3, #26]
  18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
  1a:	fb05 3500 	mla	r5, r5, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:755
    for( i = 0; i < 128; ){
        ulLen = flashReadLong( ulAddress + i );
  1e:	1960      	adds	r0, r4, r5
  20:	f7ff fffe 	bl	0 <fileGetLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:757
        i += 4;
        if( ulLen != 0x00000000 && ulLen != 0xFFFFFFFF ){
  24:	1e43      	subs	r3, r0, #1
  26:	f113 0f03 	cmn.w	r3, #3
  2a:	d905      	bls.n	38 <fileGetLength+0x38>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:756
    //ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    //ulAddress *= pygmyRootVolume.SectorSize;
    ulAddress = pygmyRootVolume.FirstFileSector + ( ulAddress * pygmyRootVolume.SectorSize );
    for( i = 0; i < 128; ){
        ulLen = flashReadLong( ulAddress + i );
        i += 4;
  2c:	3404      	adds	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:754
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    //ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    //ulAddress *= pygmyRootVolume.SectorSize;
    ulAddress = pygmyRootVolume.FirstFileSector + ( ulAddress * pygmyRootVolume.SectorSize );
    for( i = 0; i < 128; ){
  2e:	2c80      	cmp	r4, #128	; 0x80
  30:	d1f5      	bne.n	1e <fileGetLength+0x1e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:762
        if( ulLen != 0x00000000 && ulLen != 0xFFFFFFFF ){
            return( ulLen );
        } // if
    } // for

    return( 0 ); 
  32:	2000      	movs	r0, #0
  34:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:747
{
    u32 i, ulLen, ulAddress;

    ulAddress = fileGetFAT( ulID_File, 1 ); // This returns sector index, not address
    if( ulAddress == 0xFFFF ){
        return( 0 );
  36:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:763
            return( ulLen );
        } // if
    } // for

    return( 0 ); 
}
  38:	bd38      	pop	{r3, r4, r5, pc}
  3a:	bf00      	nop
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadByte:

00000000 <flashReadByte>:
flashReadByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1257

    return( ulLong );
}

u8 flashReadByte( u32 ulAddress )
{
   0:	4c07b538 	.word	0x4c07b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1261
    u8 ucByte;
    
    ulAddress |= 0x03000000;
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1260

u8 flashReadByte( u32 ulAddress )
{
    u8 ucByte;
    
    ulAddress |= 0x03000000;
   8:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1261
    FLASH_CS_LOW;
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1262
    spiWriteLong( &pygmyFlashSPI, ulAddress );
   e:	4805      	ldr	r0, [pc, #20]	; (24 <flashReadByte+0x24>)
  10:	f7ff fffe 	bl	0 <flashReadByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1263
	ucByte = spiReadByte( &pygmyFlashSPI );
  14:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadByte+0x10>)
  16:	f7ff fffe 	bl	0 <flashReadByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1264
    FLASH_CS_HIGH;
  1a:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1267
	
	return( ucByte );    
}
  1c:	bd38      	pop	{r3, r4, r5, pc}
  1e:	bf00      	nop
  20:	40010c00 	.word	0x40010c00
  24:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetChar:

00000000 <fileGetChar>:
fileGetChar():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:893
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   0:	6882      	ldr	r2, [r0, #8]
   2:	6843      	ldr	r3, [r0, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:889
    return( ulData );
}

#ifdef __FILE_SMALLGETCHAR
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
   4:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:893
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   6:	429a      	cmp	r2, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:889
    return( ulData );
}

#ifdef __FILE_SMALLGETCHAR
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
   8:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:893
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   a:	d211      	bcs.n	30 <fileGetChar+0x30>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:897
        pygmyFile->Attributes |= EOF;
        return( 0 );
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){
   c:	4d1a      	ldr	r5, [pc, #104]	; (78 <fileGetChar+0x78>)
   e:	3280      	adds	r2, #128	; 0x80
  10:	8b6b      	ldrh	r3, [r5, #26]
  12:	fbb2 f1f3 	udiv	r1, r2, r3
  16:	fb03 2311 	mls	r3, r3, r1, r2
  1a:	b9c3      	cbnz	r3, 4e <fileGetChar+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:898
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
  1c:	8981      	ldrh	r1, [r0, #12]
  1e:	89c0      	ldrh	r0, [r0, #14]
  20:	3101      	adds	r1, #1
  22:	b289      	uxth	r1, r1
  24:	f7ff fffe 	bl	0 <fileGetChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:899
        if( i == 0xFFFF ){
  28:	f64f 73ff 	movw	r3, #65535	; 0xffff
  2c:	4298      	cmp	r0, r3
  2e:	d105      	bne.n	3c <fileGetChar+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:900
            pygmyFile->Attributes |= EOF;
  30:	7c23      	ldrb	r3, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:913
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
}
  32:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:900
        return( 0 );
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
  34:	f063 037f 	orn	r3, r3, #127	; 0x7f
  38:	7423      	strb	r3, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:913
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
}
  3a:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:903
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
            return( 0 ); 
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  3c:	8b6b      	ldrh	r3, [r5, #26]
  3e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  40:	fbb2 f3f3 	udiv	r3, r2, r3
  44:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:904
        ++pygmyFile->ID_Sector;
  46:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:903
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
            return( 0 ); 
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  48:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:904
        ++pygmyFile->ID_Sector;
  4a:	3301      	adds	r3, #1
  4c:	81a3      	strh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:907
    } // if
    
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ;
  4e:	68a3      	ldr	r3, [r4, #8]
  50:	8b6a      	ldrh	r2, [r5, #26]
  52:	f103 0180 	add.w	r1, r3, #128	; 0x80
  56:	fbb1 f0f2 	udiv	r0, r1, r2
  5a:	fb02 1110 	mls	r1, r2, r0, r1
  5e:	6820      	ldr	r0, [r4, #0]
  60:	fb00 1002 	mla	r0, r0, r2, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:908
    if( pygmyFile->Index < pygmyFile->Length ){
  64:	6862      	ldr	r2, [r4, #4]
  66:	4293      	cmp	r3, r2
  68:	d201      	bcs.n	6e <fileGetChar+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:909
        ++pygmyFile->Index;
  6a:	3301      	adds	r3, #1
  6c:	60a3      	str	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:913
    } // if

    return( flashReadByte( ulAddress ) );
}
  6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:912
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ;
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
  72:	f7ff bffe 	b.w	0 <fileGetChar>
  76:	bf00      	nop
  78:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetLong:

00000000 <fileGetLong>:
fileGetLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:872

u32 fileGetLong( PYGMYFILE *pygmyFile, u8 ucEndian )
{
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
   0:	2901      	cmp	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:869

    return( uiData );
}

u32 fileGetLong( PYGMYFILE *pygmyFile, u8 ucEndian )
{
   2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:872
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
   6:	d114      	bne.n	32 <fileGetLong+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:873
        ulData = (u32)fileGetChar( pygmyFile ) << 24;
   8:	f7ff fffe 	bl	0 <fileGetLong>
   c:	0605      	lsls	r5, r0, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:874
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
   e:	4620      	mov	r0, r4
  10:	f7ff fffe 	bl	0 <fileGetLong>
  14:	4607      	mov	r7, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:875
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <fileGetLong>
  1c:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:876
        ulData |= (u32)fileGetChar( pygmyFile ); 
  1e:	4620      	mov	r0, r4
  20:	f7ff fffe 	bl	0 <fileGetLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:874
{
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
        ulData = (u32)fileGetChar( pygmyFile ) << 24;
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  24:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:875
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  28:	ea45 0000 	orr.w	r0, r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:876
        ulData |= (u32)fileGetChar( pygmyFile ); 
  2c:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
  30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:878
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
  32:	f7ff fffe 	bl	0 <fileGetLong>
  36:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:879
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  38:	4620      	mov	r0, r4
  3a:	f7ff fffe 	bl	0 <fileGetLong>
  3e:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:880
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <fileGetLong>
  46:	0400      	lsls	r0, r0, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:879
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ); 
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  48:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:881
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
        ulData |= (u32)fileGetChar( pygmyFile ) << 24;
  4c:	4620      	mov	r0, r4
  4e:	f7ff fffe 	bl	0 <fileGetLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:880
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ); 
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  52:	4335      	orrs	r5, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:881
        ulData |= (u32)fileGetChar( pygmyFile ) << 24;
  54:	ea45 6000 	orr.w	r0, r5, r0, lsl #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:885
    } // else

    return( ulData );
}
  58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileGetWord:

00000000 <fileGetWord>:
fileGetWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:857
u16 fileGetWord( PYGMYFILE *pygmyFile, u8 ucEndian )
{
    u16 uiData;
    u8 i;

    if( ucEndian == BIGENDIAN ){
   0:	2901      	cmp	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:853
        ucBuffer[ i ] = fileGetChar( pygmyFile );
    } // for
}

u16 fileGetWord( PYGMYFILE *pygmyFile, u8 ucEndian )
{
   2:	b538      	push	{r3, r4, r5, lr}
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:857
    u16 uiData;
    u8 i;

    if( ucEndian == BIGENDIAN ){
   6:	d10a      	bne.n	1e <fileGetWord+0x1e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:858
        uiData = (u16)fileGetChar( pygmyFile ) << 8;
   8:	f7ff fffe 	bl	0 <fileGetWord>
   c:	0200      	lsls	r0, r0, #8
   e:	b285      	uxth	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:859
        uiData |= (u16)fileGetChar( pygmyFile );
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <fileGetWord>
  16:	ea45 0000 	orr.w	r0, r5, r0
  1a:	b280      	uxth	r0, r0
  1c:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:861
    } else {
        uiData = (u16)fileGetChar( pygmyFile );
  1e:	f7ff fffe 	bl	0 <fileGetWord>
  22:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:862
        uiData |= (u16)fileGetChar( pygmyFile ) << 8;
  24:	4620      	mov	r0, r4
  26:	f7ff fffe 	bl	0 <fileGetWord>
  2a:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
  2e:	b280      	uxth	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:866
    } // else

    return( uiData );
}
  30:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.fileGetBuffer:

00000000 <fileGetBuffer>:
fileGetBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:844
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
    } // else
}

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
   6:	4617      	mov	r7, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:847
    u16 i;

    for( i = 0; i < uiLen; i++ ){
   8:	2600      	movs	r6, #0
   a:	e006      	b.n	1a <fileGetBuffer+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:848
        ucBuffer[ i ] = fileGetChar( pygmyFile );
   c:	4620      	mov	r0, r4
   e:	f7ff fffe 	bl	0 <fileGetBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:847

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    u16 i;

    for( i = 0; i < uiLen; i++ ){
  12:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:848
        ucBuffer[ i ] = fileGetChar( pygmyFile );
  14:	f807 0b01 	strb.w	r0, [r7], #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:847

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    u16 i;

    for( i = 0; i < uiLen; i++ ){
  18:	b2b6      	uxth	r6, r6
  1a:	42ae      	cmp	r6, r5
  1c:	d3f6      	bcc.n	c <fileGetBuffer+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:850
        ucBuffer[ i ] = fileGetChar( pygmyFile );
    } // for
}
  1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileGetActiveFiles:

00000000 <fileGetActiveFiles>:
fileGetActiveFiles():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:529

    return( pygmyRootVolume.FAT_A );
}

u32 fileGetActiveFiles( void )
{
   0:	b510      	push	{r4, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:530
    if( flashReadByte( PYGMY_FILE_FILES_A ) ){
   2:	2000      	movs	r0, #0
   4:	f7ff fffe 	bl	0 <fileGetActiveFiles>
   8:	b930      	cbnz	r0, 18 <fileGetActiveFiles+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:533
        return( PYGMY_FILE_FILES_A );
    } // if
    if( flashReadByte( pygmyRootVolume.Files_B ) ){
   a:	4c06      	ldr	r4, [pc, #24]	; (24 <fileGetActiveFiles+0x24>)
   c:	6b20      	ldr	r0, [r4, #48]	; 0x30
   e:	f7ff fffe 	bl	0 <fileGetActiveFiles>
  12:	b118      	cbz	r0, 1c <fileGetActiveFiles+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:534
        return( pygmyRootVolume.Files_B );
  14:	6b20      	ldr	r0, [r4, #48]	; 0x30
  16:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:531
}

u32 fileGetActiveFiles( void )
{
    if( flashReadByte( PYGMY_FILE_FILES_A ) ){
        return( PYGMY_FILE_FILES_A );
  18:	2000      	movs	r0, #0
  1a:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:540
    } // if
    #ifndef __PYGMY_BOOT
        pygmyRootVolume.Attributes |= VOLUMEERROR;
    #endif // __PYGMY_BOOT
    
    return( 0xFFFFFFFF ); // both Files tables inactive means memory failure
  1c:	f04f 30ff 	mov.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:541
}
  20:	bd10      	pop	{r4, pc}
  22:	bf00      	nop
  24:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeSpace:

00000000 <fileGetFreeSpace>:
fileGetFreeSpace():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:256
    
    return( ucName );
}

u32 fileGetFreeSpace( void )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:262
    u32 ulFreeSpace;
    u16 i;
    u8 ucByte;

    // Count unallocated and erased tags
    for( i = 0, ulFreeSpace = 0; i < pygmyRootVolume.Sectors; i++ ){
   2:	2400      	movs	r4, #0
   4:	4625      	mov	r5, r4
   6:	e00c      	b.n	22 <fileGetFreeSpace+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:263
        ucByte = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
   8:	6970      	ldr	r0, [r6, #20]
   a:	eb00 0084 	add.w	r0, r0, r4, lsl #2
   e:	f7ff fffe 	bl	0 <fileGetFreeSpace>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:264
        ucByte >>= 6;
  12:	0980      	lsrs	r0, r0, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:266
        //if( !ucByte || ucByte == 0xFF ){
        if( ucByte != 1 ){ // Updated for 2 bit allocation
  14:	b2c0      	uxtb	r0, r0
  16:	2801      	cmp	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:267
            ulFreeSpace += pygmyRootVolume.SectorSize;
  18:	bf1c      	itt	ne
  1a:	8b73      	ldrhne	r3, [r6, #26]
  1c:	18ed      	addne	r5, r5, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:262
    u32 ulFreeSpace;
    u16 i;
    u8 ucByte;

    // Count unallocated and erased tags
    for( i = 0, ulFreeSpace = 0; i < pygmyRootVolume.Sectors; i++ ){
  1e:	3401      	adds	r4, #1
  20:	b2a4      	uxth	r4, r4
  22:	4e03      	ldr	r6, [pc, #12]	; (30 <fileGetFreeSpace+0x30>)
  24:	8b33      	ldrh	r3, [r6, #24]
  26:	42a3      	cmp	r3, r4
  28:	d8ee      	bhi.n	8 <fileGetFreeSpace+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:272
            ulFreeSpace += pygmyRootVolume.SectorSize;
        } // if
    } // for

    return( ulFreeSpace );
}
  2a:	4628      	mov	r0, r5
  2c:	bd70      	pop	{r4, r5, r6, pc}
  2e:	bf00      	nop
  30:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetVolumeName:

00000000 <fileGetVolumeName>:
fileGetVolumeName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:241
{
    return( pygmyRootVolume.Attributes & VOLUMEFULL );
}

u8 *fileGetVolumeName( u8 *ucName )
{
   0:	2400b538 	.word	0x2400b538
   4:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:244
    u8 i, ucByte;

    for( i = 0, ucName[ 0 ] = 0; i < 13; i++ ){
   6:	7004      	strb	r4, [r0, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:245
        ucByte = flashReadByte( pygmyRootVolume.ActiveFiles + i );
   8:	4b05      	ldr	r3, [pc, #20]	; (20 <fileGetVolumeName+0x20>)
   a:	6918      	ldr	r0, [r3, #16]
   c:	1820      	adds	r0, r4, r0
   e:	f7ff fffe 	bl	0 <fileGetVolumeName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:246
        ucName[ i ] = ucByte;
  12:	5528      	strb	r0, [r5, r4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:247
        if( !ucByte ){
  14:	b110      	cbz	r0, 1c <fileGetVolumeName+0x1c>
  16:	3401      	adds	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:244

u8 *fileGetVolumeName( u8 *ucName )
{
    u8 i, ucByte;

    for( i = 0, ucName[ 0 ] = 0; i < 13; i++ ){
  18:	2c0d      	cmp	r4, #13
  1a:	d1f5      	bne.n	8 <fileGetVolumeName+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:253
            break;
        } // if
    } // for
    
    return( ucName );
}
  1c:	4628      	mov	r0, r5
  1e:	bd38      	pop	{r3, r4, r5, pc}
  20:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadBuffer:

00000000 <flashReadBuffer>:
flashReadBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1274
void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   0:	4b0d      	ldr	r3, [pc, #52]	; (38 <flashReadBuffer+0x38>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1270
	
	return( ucByte );    
}

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4615      	mov	r5, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1274
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1270
	
	return( ucByte );    
}

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
   a:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1274
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   c:	615a      	str	r2, [r3, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1273

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
    u16 i;

    ulAddress = ulAddress | 0x03000000;
   e:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1275
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
  12:	480a      	ldr	r0, [pc, #40]	; (2c <flashReadBuffer+0x2c>)
  14:	f7ff fffe 	bl	0 <flashReadBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1276
    for( i = 0; i < uiLen; i++ ){
  18:	2600      	movs	r6, #0
  1a:	e006      	b.n	2a <flashReadBuffer+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1277
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
  1c:	4807      	ldr	r0, [pc, #28]	; (3c <flashReadBuffer+0x3c>)
  1e:	f7ff fffe 	bl	0 <flashReadBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1276
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    for( i = 0; i < uiLen; i++ ){
  22:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1277
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
  24:	f804 0b01 	strb.w	r0, [r4], #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1276
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    for( i = 0; i < uiLen; i++ ){
  28:	b2b6      	uxth	r6, r6
  2a:	42ae      	cmp	r6, r5
  2c:	d3f6      	bcc.n	1c <flashReadBuffer+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1279
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
    } // for
    FLASH_CS_HIGH;   
  2e:	4b02      	ldr	r3, [pc, #8]	; (38 <flashReadBuffer+0x38>)
  30:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  34:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1280
}
  36:	bd70      	pop	{r4, r5, r6, pc}
  38:	40010c00 	.word	0x40010c00
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.fileSeekName:

00000000 <fileSeekName>:
fileSeekName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:652
    // return the ID of the file to use to load length
    return( uiID );//flashReadWord( ulAddress + 14 ) );
}

u16 fileSeekName( u8 *ucName )
{
   0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   2:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:656
    u32 i, ii;
    u8 ucBuffer[ 13 ];
    
    for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
   4:	2540      	movs	r5, #64	; 0x40
   6:	2400      	movs	r4, #0
   8:	e00f      	b.n	2a <fileSeekName+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:665
                ucBuffer[ ii ] = '\0';
                break;
            } // if
        } // for
        */
        flashReadBuffer( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ), ucBuffer, 13 );
   a:	6918      	ldr	r0, [r3, #16]
   c:	4669      	mov	r1, sp
   e:	1828      	adds	r0, r5, r0
  10:	220d      	movs	r2, #13
  12:	f7ff fffe 	bl	0 <fileSeekName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:666
        if( isStringSame( ucName, ucBuffer ) ){
  16:	4630      	mov	r0, r6
  18:	4669      	mov	r1, sp
  1a:	f7ff fffe 	bl	0 <isStringSame>
  1e:	3510      	adds	r5, #16
  20:	b110      	cbz	r0, 28 <fileSeekName+0x28>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:667
            return( 4 + i );
  22:	3404      	adds	r4, #4
  24:	b2a0      	uxth	r0, r4
  26:	e005      	b.n	34 <fileSeekName+0x34>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:656
u16 fileSeekName( u8 *ucName )
{
    u32 i, ii;
    u8 ucBuffer[ 13 ];
    
    for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  28:	3401      	adds	r4, #1
  2a:	4b03      	ldr	r3, [pc, #12]	; (38 <fileSeekName+0x38>)
  2c:	69da      	ldr	r2, [r3, #28]
  2e:	4294      	cmp	r4, r2
  30:	d3eb      	bcc.n	a <fileSeekName+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:671
        if( isStringSame( ucName, ucBuffer ) ){
            return( 4 + i );
        } // if
    } // for

    return( 0 );
  32:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:672
}
  34:	b004      	add	sp, #16
  36:	bd70      	pop	{r4, r5, r6, pc}
  38:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetName:

00000000 <fileGetName>:
fileGetName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:607
{
    return( pygmyRootVolume.MaxFiles );
}

u16 fileGetName( u16 uiFileEntry, u8 *ucName )
{
   0:	b5f0      	push	{r4, r5, r6, r7, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:614
    // listing information
    u32 ulAddress;
    u16 uiID;
    u8 i, ucBuffer[ 16 ];

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   2:	4b15      	ldr	r3, [pc, #84]	; (58 <fileGetName+0x58>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:607
{
    return( pygmyRootVolume.MaxFiles );
}

u16 fileGetName( u16 uiFileEntry, u8 *ucName )
{
   4:	b085      	sub	sp, #20
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:614
    // listing information
    u32 ulAddress;
    u16 uiID;
    u8 i, ucBuffer[ 16 ];

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   6:	69da      	ldr	r2, [r3, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:607
{
    return( pygmyRootVolume.MaxFiles );
}

u16 fileGetName( u16 uiFileEntry, u8 *ucName )
{
   8:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:614
    // listing information
    u32 ulAddress;
    u16 uiID;
    u8 i, ucBuffer[ 16 ];

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   a:	4290      	cmp	r0, r2
   c:	d820      	bhi.n	50 <fileGetName+0x50>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:618
        return( 0 );
    } // if
    
    flashReadBuffer( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), ucBuffer, 16 );
   e:	691b      	ldr	r3, [r3, #16]
  10:	2210      	movs	r2, #16
  12:	eb03 1000 	add.w	r0, r3, r0, lsl #4
  16:	4669      	mov	r1, sp
  18:	f7ff fffe 	bl	0 <fileGetName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:619
    uiID = ucBuffer[ 14 ];
  1c:	f89d 600e 	ldrb.w	r6, [sp, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:620
    uiID = uiID << 8 | ucBuffer[ 15 ];
  20:	f89d 500f 	ldrb.w	r5, [sp, #15]
  24:	f10d 32ff 	add.w	r2, sp, #4294967295
  28:	4623      	mov	r3, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:622
    
    for( i = 0; i < 12; i++ ){
  2a:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:623
        if( !ucBuffer[ i ] || ucBuffer[ i ] == 0xFF ){
  2c:	f812 1f01 	ldrb.w	r1, [r2, #1]!
  30:	1e4f      	subs	r7, r1, #1
  32:	b2ff      	uxtb	r7, r7
  34:	2ffd      	cmp	r7, #253	; 0xfd
  36:	d805      	bhi.n	44 <fileGetName+0x44>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:622
    
    flashReadBuffer( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), ucBuffer, 16 );
    uiID = ucBuffer[ 14 ];
    uiID = uiID << 8 | ucBuffer[ 15 ];
    
    for( i = 0; i < 12; i++ ){
  38:	3001      	adds	r0, #1
  3a:	b2c0      	uxtb	r0, r0
  3c:	280c      	cmp	r0, #12
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:626
        if( !ucBuffer[ i ] || ucBuffer[ i ] == 0xFF ){
            break;
        } else{
            ucName[ i ] = ucBuffer[ i ];
  3e:	f803 1b01 	strb.w	r1, [r3], #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:622
    
    flashReadBuffer( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), ucBuffer, 16 );
    uiID = ucBuffer[ 14 ];
    uiID = uiID << 8 | ucBuffer[ 15 ];
    
    for( i = 0; i < 12; i++ ){
  42:	d1f3      	bne.n	2c <fileGetName+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:629
            break;
        } else{
            ucName[ i ] = ucBuffer[ i ];
        } // else
    } // for
    ucName[ i ] = '\0';
  44:	2300      	movs	r3, #0
  46:	5423      	strb	r3, [r4, r0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:630
    if( !i ){
  48:	b118      	cbz	r0, 52 <fileGetName+0x52>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:620
        return( 0 );
    } // if
    
    flashReadBuffer( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), ucBuffer, 16 );
    uiID = ucBuffer[ 14 ];
    uiID = uiID << 8 | ucBuffer[ 15 ];
  4a:	ea45 2006 	orr.w	r0, r5, r6, lsl #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:648
            } // else
        } // if
    } // for
    */
    // return the ID of the file to use to load length
    return( uiID );//flashReadWord( ulAddress + 14 ) );
  4e:	e000      	b.n	52 <fileGetName+0x52>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:615
    u32 ulAddress;
    u16 uiID;
    u8 i, ucBuffer[ 16 ];

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
        return( 0 );
  50:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:649
        } // if
    } // for
    */
    // return the ID of the file to use to load length
    return( uiID );//flashReadWord( ulAddress + 14 ) );
}
  52:	b005      	add	sp, #20
  54:	bdf0      	pop	{r4, r5, r6, r7, pc}
  56:	bf00      	nop
  58:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadStatus:

00000000 <flashReadStatus>:
flashReadStatus():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1283
    } // for
    FLASH_CS_HIGH;   
}

u8 flashReadStatus( void )
{
   0:	4c06b538 	.word	0x4c06b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1286
    u8 ucByte;
    
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1287
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_RDSR );
   8:	2105      	movs	r1, #5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1286

u8 flashReadStatus( void )
{
    u8 ucByte;
    
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1287
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_RDSR );
   c:	4804      	ldr	r0, [pc, #16]	; (20 <flashReadStatus+0x20>)
   e:	f7ff fffe 	bl	0 <flashReadStatus>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1288
    ucByte = spiReadByte( &pygmyFlashSPI );
  12:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadStatus+0x10>)
  14:	f7ff fffe 	bl	0 <flashReadStatus>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1289
    FLASH_CS_HIGH;
  18:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1292

    return( ucByte );
}
  1a:	bd38      	pop	{r3, r4, r5, pc}
  1c:	40010c00 	.word	0x40010c00
  20:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadID:

00000000 <flashReadID>:
flashReadID():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1295

u8 flashReadID( void )
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1298
    u8 ucByte;
    
    FLASH_CS_LOW;
   2:	4c09      	ldr	r4, [pc, #36]	; (28 <flashReadID+0x28>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1299
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_JEDECID );
   8:	219f      	movs	r1, #159	; 0x9f
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1298

u8 flashReadID( void )
{
    u8 ucByte;
    
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1299
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_JEDECID );
   c:	4807      	ldr	r0, [pc, #28]	; (2c <flashReadID+0x2c>)
   e:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1300
    ucByte = spiReadByte( &pygmyFlashSPI ); // Manufacturer
  12:	4806      	ldr	r0, [pc, #24]	; (1c <flashReadID+0x1c>)
  14:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1301
    ucByte = spiReadByte( &pygmyFlashSPI ); // Type
  18:	4804      	ldr	r0, [pc, #16]	; (14 <flashReadID+0x14>)
  1a:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1302
    ucByte = spiReadByte( &pygmyFlashSPI ); // Capacity
  1e:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadID+0x10>)
  20:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1303
    FLASH_CS_HIGH;
  24:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1307

    return( ucByte );
    
}
  26:	bd38      	pop	{r3, r4, r5, pc}
  28:	40010c00 	.word	0x40010c00
  2c:	00000000 	.word	0x00000000

Disassembly of section .text.flashWaitForBusy:

00000000 <flashWaitForBusy>:
flashWaitForBusy():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1335
    
    return( 1 );
}

void flashWaitForBusy( void )
{
   0:	b508      	push	{r3, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1336
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
   2:	f7ff fffe 	bl	0 <flashWaitForBusy>
   6:	f010 0f01 	tst.w	r0, #1
   a:	d1fa      	bne.n	2 <flashWaitForBusy+0x2>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1337
}
   c:	bd08      	pop	{r3, pc}

Disassembly of section .text.flashChipErase:

00000000 <flashChipErase>:
flashChipErase():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1322
    FLASH_CS_HIGH;
    flashWaitForBusy();
}

u8 flashChipErase( void )
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1323
    FLASH_CS_LOW;
   2:	4c09      	ldr	r4, [pc, #36]	; (28 <flashChipErase+0x28>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1324
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   8:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1323
    flashWaitForBusy();
}

u8 flashChipErase( void )
{
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1324
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   c:	4807      	ldr	r0, [pc, #28]	; (2c <flashChipErase+0x2c>)
   e:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1325
    FLASH_CS_HIGH;
  12:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1327
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_ERASE_ALL );
  14:	4805      	ldr	r0, [pc, #20]	; (2c <flashChipErase+0x2c>)
  16:	2160      	movs	r1, #96	; 0x60
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1326
u8 flashChipErase( void )
{
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  18:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1327
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_ERASE_ALL );
  1a:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1328
    FLASH_CS_HIGH;
  1e:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1329
    flashWaitForBusy( );
  20:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1332
    
    return( 1 );
}
  24:	2001      	movs	r0, #1
  26:	bd38      	pop	{r3, r4, r5, pc}
  28:	40010c00 	.word	0x40010c00
  2c:	00000000 	.word	0x00000000

Disassembly of section .text.flashSectorErase:

00000000 <flashSectorErase>:
flashSectorErase():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1310
    return( ucByte );
    
}

void flashSectorErase( u32 ulSector )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1312
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
   2:	4c0a      	ldr	r4, [pc, #40]	; (2c <flashSectorErase+0x2c>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1310
    return( ucByte );
    
}

void flashSectorErase( u32 ulSector )
{
   8:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1313
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   a:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1312
}

void flashSectorErase( u32 ulSector )
{
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1313
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   e:	4808      	ldr	r0, [pc, #32]	; (30 <flashSectorErase+0x30>)
  10:	f7ff fffe 	bl	0 <flashSectorErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1314
    FLASH_CS_HIGH;
  14:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1316
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulSector );
  16:	4806      	ldr	r0, [pc, #24]	; (30 <flashSectorErase+0x30>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1315
{
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  18:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1316
    spiWriteLong( &pygmyFlashSPI, ulSector );
  1a:	f046 5100 	orr.w	r1, r6, #536870912	; 0x20000000
  1e:	f7ff fffe 	bl	0 <flashSectorErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1317
    FLASH_CS_HIGH;
  22:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1319
    flashWaitForBusy();
}
  24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1318
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulSector );
    FLASH_CS_HIGH;
    flashWaitForBusy();
  28:	f7ff bffe 	b.w	0 <flashSectorErase>
  2c:	40010c00 	.word	0x40010c00
  30:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteByte:

00000000 <flashWriteByte>:
flashWriteByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1377
    }
}


void flashWriteByte( u32 ulAddress, u8 ucByte )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1380
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
   4:	4c0c      	ldr	r4, [pc, #48]	; (38 <flashWriteByte+0x38>)
   6:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1377
    }
}


void flashWriteByte( u32 ulAddress, u8 ucByte )
{
   a:	4607      	mov	r7, r0
   c:	460e      	mov	r6, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1380
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
   e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1381
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN unlocks write capability for one operation
  10:	2106      	movs	r1, #6
  12:	480a      	ldr	r0, [pc, #40]	; (3c <flashWriteByte+0x3c>)
  14:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1382
    FLASH_CS_HIGH;
  18:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1384
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
  1a:	f047 7100 	orr.w	r1, r7, #33554432	; 0x2000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1383
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN unlocks write capability for one operation
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  1e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1384
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
  20:	4806      	ldr	r0, [pc, #24]	; (3c <flashWriteByte+0x3c>)
  22:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1385
    spiWriteByte( &pygmyFlashSPI, ucByte ); // Write data byte
  26:	4805      	ldr	r0, [pc, #20]	; (3c <flashWriteByte+0x3c>)
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1386
    FLASH_CS_HIGH;
  2e:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1388
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
}
  30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1387
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
    spiWriteByte( &pygmyFlashSPI, ucByte ); // Write data byte
    FLASH_CS_HIGH;
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
  34:	f7ff bffe 	b.w	0 <flashWriteByte>
  38:	40010c00 	.word	0x40010c00
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteBuffer:

00000000 <flashWriteBuffer>:
flashWriteBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1366
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
    } // if
}

void flashWriteBuffer( u32 ulAddress, u16 uiLen , u8 *ucBuffer )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	4617      	mov	r7, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1370
    // Function returns 1 for all bytes good, 0 for failure of one or more bytes
    u32 i;
    
    for( i = 0; i < uiLen; i++ ){
   8:	2600      	movs	r6, #0
   a:	e004      	b.n	16 <flashWriteBuffer+0x16>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1371
        flashWriteByte( ulAddress + i, ucBuffer[ i ] );
   c:	1970      	adds	r0, r6, r5
   e:	5db9      	ldrb	r1, [r7, r6]
  10:	f7ff fffe 	bl	0 <flashWriteBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1370
void flashWriteBuffer( u32 ulAddress, u16 uiLen , u8 *ucBuffer )
{
    // Function returns 1 for all bytes good, 0 for failure of one or more bytes
    u32 i;
    
    for( i = 0; i < uiLen; i++ ){
  14:	3601      	adds	r6, #1
  16:	42a6      	cmp	r6, r4
  18:	d3f8      	bcc.n	c <flashWriteBuffer+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1373
        flashWriteByte( ulAddress + i, ucBuffer[ i ] );
    }
}
  1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.flashWriteString:

00000000 <flashWriteString>:
flashWriteString():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1355
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
    } // for
}

void flashWriteString( u32 ulAddress, u8 ucTerminate, u8 *ucBuffer )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4615      	mov	r5, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1357

    for( ; *ucBuffer; ){
   6:	e003      	b.n	10 <flashWriteString+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1358
        flashWriteByte( ulAddress++, *(ucBuffer++) );
   8:	1c46      	adds	r6, r0, #1
   a:	f7ff fffe 	bl	0 <flashWriteString>
   e:	4630      	mov	r0, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1357
}

void flashWriteString( u32 ulAddress, u8 ucTerminate, u8 *ucBuffer )
{

    for( ; *ucBuffer; ){
  10:	f815 1b01 	ldrb.w	r1, [r5], #1
  14:	2900      	cmp	r1, #0
  16:	d1f7      	bne.n	8 <flashWriteString+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1360
        flashWriteByte( ulAddress++, *(ucBuffer++) );
    } // for
    if( ucTerminate ){
  18:	b11c      	cbz	r4, 22 <flashWriteString+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1363
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
    } // if
}
  1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1361

    for( ; *ucBuffer; ){
        flashWriteByte( ulAddress++, *(ucBuffer++) );
    } // for
    if( ucTerminate ){
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
  1e:	f7ff bffe 	b.w	0 <flashWriteString>
  22:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.flashWriteLong:

00000000 <flashWriteLong>:
flashWriteLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1346
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
}

void flashWriteLong( u32 ulAddress, u32 ulLong )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460e      	mov	r6, r1
   6:	2418      	movs	r4, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1350
    u8 i;
    
    for( i = 0; i < 4; i++ ){
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
   8:	fa36 f104 	lsrs.w	r1, r6, r4
   c:	4628      	mov	r0, r5
   e:	b2c9      	uxtb	r1, r1
  10:	3c08      	subs	r4, #8
  12:	f7ff fffe 	bl	0 <flashWriteLong>
  16:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1349

void flashWriteLong( u32 ulAddress, u32 ulLong )
{
    u8 i;
    
    for( i = 0; i < 4; i++ ){
  18:	f114 0f08 	cmn.w	r4, #8
  1c:	d1f4      	bne.n	8 <flashWriteLong+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1352
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
    } // for
}
  1e:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.fileWriteLength:

00000000 <fileWriteLength>:
fileWriteLength():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:718
    
    return( 0 ); 
}

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:721
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   2:	4c13      	ldr	r4, [pc, #76]	; (50 <fileWriteLength+0x50>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:718
    
    return( 0 ); 
}

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
   4:	460d      	mov	r5, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:721
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   6:	89c0      	ldrh	r0, [r0, #14]
   8:	2101      	movs	r1, #1
   a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
   c:	f7ff fffe 	bl	0 <fileWriteLength>
  10:	8b63      	ldrh	r3, [r4, #26]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:723
    
    for( i = 0; i < 128; ){
  12:	2400      	movs	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:721

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
  14:	fb03 6600 	mla	r6, r3, r0, r6
  18:	19a7      	adds	r7, r4, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:724
    
    for( i = 0; i < 128; ){
        ulTmp = flashReadLong( ulAddress + i );
  1a:	4638      	mov	r0, r7
  1c:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:726
        
        if( ulTmp == 0xFFFFFFFF ){
  20:	f1b0 3fff 	cmp.w	r0, #4294967295
  24:	d105      	bne.n	32 <fileWriteLength+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:727
            flashWriteLong( ulAddress + i, ulLength );
  26:	4638      	mov	r0, r7
  28:	4629      	mov	r1, r5
  2a:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:728
            return( 1 );
  2e:	2001      	movs	r0, #1
  30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:729
        } else if( ulTmp ){ //ulTmp != 0xFFFFFFFF && ulTmp != 0x00000000 ){
  32:	b128      	cbz	r0, 40 <fileWriteLength+0x40>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:730
            if( ulTmp == ulLength ){ // Don't waste a write cycle if Length hasn't changed
  34:	42a8      	cmp	r0, r5
  36:	d008      	beq.n	4a <fileWriteLength+0x4a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:733
                return( 1 );
            } // if
            flashWriteLong( ulAddress + i, 0x00000000 );
  38:	4638      	mov	r0, r7
  3a:	2100      	movs	r1, #0
  3c:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:735
        } // if
        i += 4;
  40:	3404      	adds	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:723
{
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
    
    for( i = 0; i < 128; ){
  42:	2c80      	cmp	r4, #128	; 0x80
  44:	d1e8      	bne.n	18 <fileWriteLength+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:738
            flashWriteLong( ulAddress + i, 0x00000000 );
        } // if
        i += 4;
    } // if
    
    return( 0 );
  46:	2000      	movs	r0, #0
  48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:731
        if( ulTmp == 0xFFFFFFFF ){
            flashWriteLong( ulAddress + i, ulLength );
            return( 1 );
        } else if( ulTmp ){ //ulTmp != 0xFFFFFFFF && ulTmp != 0x00000000 ){
            if( ulTmp == ulLength ){ // Don't waste a write cycle if Length hasn't changed
                return( 1 );
  4a:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:739
        } // if
        i += 4;
    } // if
    
    return( 0 );
}
  4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4e:	bf00      	nop
  50:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteWord:

00000000 <flashWriteWord>:
flashWriteWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1340
{
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1341
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
   4:	0a09      	lsrs	r1, r1, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1340
{
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
   6:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1341
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
   8:	f7ff fffe 	bl	0 <flashWriteWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1342
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
   c:	1c68      	adds	r0, r5, #1
   e:	b2e1      	uxtb	r1, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1343
}
  10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1342
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
  14:	f7ff bffe 	b.w	0 <flashWriteWord>

Disassembly of section .text.fileDeleteFATEntry:

00000000 <fileDeleteFATEntry>:
fileDeleteFATEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:544
    
    return( 0xFFFFFFFF ); // both Files tables inactive means memory failure
}

u8 fileDeleteFATEntry( u16 uiID_File, u16 uiID_Sector )
{
   0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:550
    u32 i, ii;
    u16 uiTmpID, uiDeleted, uiSector;
    u8 ucAlloc;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
   4:	f04f 0900 	mov.w	r9, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:544
    
    return( 0xFFFFFFFF ); // both Files tables inactive means memory failure
}

u8 fileDeleteFATEntry( u16 uiID_File, u16 uiID_Sector )
{
   8:	4606      	mov	r6, r0
   a:	460d      	mov	r5, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:550
    u32 i, ii;
    u16 uiTmpID, uiDeleted, uiSector;
    u8 ucAlloc;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
   c:	464c      	mov	r4, r9
   e:	e039      	b.n	84 <fileDeleteFATEntry+0x84>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:552
        ii = i * 4;
        uiSector = flashReadWord( pygmyRootVolume.ActiveFAT + ii );
  10:	6978      	ldr	r0, [r7, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:550
    u32 i, ii;
    u16 uiTmpID, uiDeleted, uiSector;
    u8 ucAlloc;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
  12:	ea4f 0884 	mov.w	r8, r4, lsl #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:552
        ii = i * 4;
        uiSector = flashReadWord( pygmyRootVolume.ActiveFAT + ii );
  16:	4440      	add	r0, r8
  18:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  1c:	4682      	mov	sl, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:555
        ucAlloc = uiSector >> 14;
        uiSector &= 0x3FFF;
        uiTmpID = flashReadByte( pygmyRootVolume.ActiveFAT + ii + 2 ) << 8;
  1e:	6978      	ldr	r0, [r7, #20]
  20:	3002      	adds	r0, #2
  22:	4440      	add	r0, r8
  24:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  28:	0200      	lsls	r0, r0, #8
  2a:	fa1f fb80 	uxth.w	fp, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:556
        uiTmpID |= flashReadByte( pygmyRootVolume.ActiveFAT + ii + 3 );
  2e:	6978      	ldr	r0, [r7, #20]
  30:	3003      	adds	r0, #3
  32:	4440      	add	r0, r8
  34:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  38:	ea4b 0b00 	orr.w	fp, fp, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:557
        if( uiTmpID == uiID_File ){
  3c:	fa1f fb8b 	uxth.w	fp, fp
  40:	45b3      	cmp	fp, r6
  42:	d11e      	bne.n	82 <fileDeleteFATEntry+0x82>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:558
            pygmyRootVolume.Attributes &= ~VOLUMEFULL;
  44:	7b7b      	ldrb	r3, [r7, #13]
  46:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  4a:	737b      	strb	r3, [r7, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:559
            if( !uiID_Sector ){
  4c:	b93d      	cbnz	r5, 5e <fileDeleteFATEntry+0x5e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:560
                flashWriteByte( pygmyRootVolume.ActiveFAT + ii, 0x0F );
  4e:	6978      	ldr	r0, [r7, #20]
  50:	210f      	movs	r1, #15
  52:	4440      	add	r0, r8
  54:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:561
                uiDeleted = 1;
  58:	f04f 0901 	mov.w	r9, #1
  5c:	e011      	b.n	82 <fileDeleteFATEntry+0x82>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:562
            } else if( uiID_Sector == uiSector ){
  5e:	ea4f 438a 	mov.w	r3, sl, lsl #18
  62:	0c9b      	lsrs	r3, r3, #18
  64:	429d      	cmp	r5, r3
  66:	d10c      	bne.n	82 <fileDeleteFATEntry+0x82>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:553

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
        ii = i * 4;
        uiSector = flashReadWord( pygmyRootVolume.ActiveFAT + ii );
        ucAlloc = uiSector >> 14;
  68:	ea4f 3a9a 	mov.w	sl, sl, lsr #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:563
            pygmyRootVolume.Attributes &= ~VOLUMEFULL;
            if( !uiID_Sector ){
                flashWriteByte( pygmyRootVolume.ActiveFAT + ii, 0x0F );
                uiDeleted = 1;
            } else if( uiID_Sector == uiSector ){
                if ( ucAlloc ){
  6c:	f01a 0fff 	tst.w	sl, #255	; 0xff
  70:	d007      	beq.n	82 <fileDeleteFATEntry+0x82>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:564
                    flashWriteByte( pygmyRootVolume.ActiveFAT + ii, 0x0F );
  72:	6978      	ldr	r0, [r7, #20]
  74:	210f      	movs	r1, #15
  76:	4440      	add	r0, r8
  78:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:565
                    return( 1 );
  7c:	2001      	movs	r0, #1
  7e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:550
    u32 i, ii;
    u16 uiTmpID, uiDeleted, uiSector;
    u8 ucAlloc;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
  82:	3401      	adds	r4, #1
  84:	4f03      	ldr	r7, [pc, #12]	; (94 <fileDeleteFATEntry+0x94>)
  86:	8b3b      	ldrh	r3, [r7, #24]
  88:	429c      	cmp	r4, r3
  8a:	d3c1      	bcc.n	10 <fileDeleteFATEntry+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:571
                } // if
            } //else if
        } // if
    } // for
 
    return( uiDeleted );
  8c:	fa5f f089 	uxtb.w	r0, r9
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:572
}
  90:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  94:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetActiveFAT:

00000000 <fileGetActiveFAT>:
fileGetActiveFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:510
    
    return( 0xFFFF ); // No memory left
}

u32 fileGetActiveFAT( void )
{  
   0:	4c11b510 	.word	0x4c11b510
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:515
    // Warning! Changed to mark ACTIVE table with 0!
    // Note: Sectors may never be an even value such as 1024, 
    //  normally the file and FAT sectors will see to this, but the last 32 bit field should always be
    //  left for use by the Active/Inactive tag below
    if( flashReadByte( pygmyRootVolume.FAT_A + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1 ) == 0x00 ){
   4:	6b63      	ldr	r3, [r4, #52]	; 0x34
   6:	8b62      	ldrh	r2, [r4, #26]
   8:	8d20      	ldrh	r0, [r4, #40]	; 0x28
   a:	3b01      	subs	r3, #1
   c:	fb00 3002 	mla	r0, r0, r2, r3
  10:	f7ff fffe 	bl	0 <fileGetActiveFAT>
  14:	b908      	cbnz	r0, 1a <fileGetActiveFAT+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:516
        return( pygmyRootVolume.FAT_A ); // Table A Active, last byte is set to 0x00 for active, 0xFF for inactive
  16:	6b60      	ldr	r0, [r4, #52]	; 0x34
  18:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:519
    } // if
 
    if( flashReadByte( pygmyRootVolume.FAT_B + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1 ) == 0x00 ){
  1a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
  1c:	8b62      	ldrh	r2, [r4, #26]
  1e:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  20:	3b01      	subs	r3, #1
  22:	fb00 3002 	mla	r0, r0, r2, r3
  26:	f7ff fffe 	bl	0 <fileGetActiveFAT>
  2a:	b908      	cbnz	r0, 30 <fileGetActiveFAT+0x30>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:520
        return( pygmyRootVolume.FAT_B ); // Table B Active, last byte is set to 0x00 for active, 0xFF for inactive
  2c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  2e:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:523
    } // if
    
    flashWriteByte( pygmyRootVolume.FAT_A + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  30:	6b63      	ldr	r3, [r4, #52]	; 0x34
  32:	8b62      	ldrh	r2, [r4, #26]
  34:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  36:	3b01      	subs	r3, #1
  38:	fb00 3002 	mla	r0, r0, r2, r3
  3c:	2100      	movs	r1, #0
  3e:	f7ff fffe 	bl	0 <fileGetActiveFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:525

    return( pygmyRootVolume.FAT_A );
  42:	6b60      	ldr	r0, [r4, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:526
}
  44:	bd10      	pop	{r4, pc}
  46:	bf00      	nop
  48:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeFATEntry:

00000000 <fileGetFreeFATEntry>:
fileGetFreeFATEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:450
    #endif // __PYGMY_BOOT
    return( 0xFFFF ); // 0xFFFF indicates error
}

u16 fileGetFreeFATEntry( void )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:452
    u32 i, ii, ulFAT, ulAddress, ulEntry;
    u8 ucErased = 0;
   4:	2500      	movs	r5, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:459
    // Read MSB of each Entry until 0xFF is found 
    // Return 0xFF for failure, last entry is invalid for a FAT Entry
    // Last Entry would always be reserved for Active Table Byte
    // [ ALLOCATION 4bits MSb ][ SEQUENCE 4 bits LSb ][ SEQUENCE 1B ][ FILE 2B ]
    // Note that sequence is a 12 bit field, allocation should be shifted 4 bits before testing 
    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
   6:	462f      	mov	r7, r5
   8:	e00b      	b.n	22 <fileGetFreeFATEntry+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:460
        ii = flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) ); 
   a:	6958      	ldr	r0, [r3, #20]
   c:	eb00 0087 	add.w	r0, r0, r7, lsl #2
  10:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:461
        ii >>= 14;
  14:	0b80      	lsrs	r0, r0, #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:462
        if( ii == 3 ){
  16:	2803      	cmp	r0, #3
  18:	d046      	beq.n	a8 <fileGetFreeFATEntry+0xa8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:466
            return( i );
        } // if
        if( ii == 1 ){
            ucErased = 1;
  1a:	2801      	cmp	r0, #1
  1c:	bf08      	it	eq
  1e:	2501      	moveq	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:459
    // Read MSB of each Entry until 0xFF is found 
    // Return 0xFF for failure, last entry is invalid for a FAT Entry
    // Last Entry would always be reserved for Active Table Byte
    // [ ALLOCATION 4bits MSb ][ SEQUENCE 4 bits LSb ][ SEQUENCE 1B ][ FILE 2B ]
    // Note that sequence is a 12 bit field, allocation should be shifted 4 bits before testing 
    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
  20:	3701      	adds	r7, #1
  22:	4b25      	ldr	r3, [pc, #148]	; (b8 <fileGetFreeFATEntry+0xb8>)
  24:	8b1a      	ldrh	r2, [r3, #24]
  26:	461c      	mov	r4, r3
  28:	4297      	cmp	r7, r2
  2a:	d3ee      	bcc.n	a <fileGetFreeFATEntry+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:472
        } // else if
    } // for
    
    // We have deleted entries in the FAT that can be recycled, since we have no free entries
    // To recycle we must swap the tables A to B or B to A
    if( ucErased ){
  2c:	2d00      	cmp	r5, #0
  2e:	d03e      	beq.n	ae <fileGetFreeFATEntry+0xae>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:473
        pygmyRootVolume.Attributes &= ~VOLUMEFULL;
  30:	7b5b      	ldrb	r3, [r3, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:483
            ulAddress = pygmyRootVolume.FAT_B;
        } //else
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
  32:	f04f 37ff 	mov.w	r7, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:473
    } // for
    
    // We have deleted entries in the FAT that can be recycled, since we have no free entries
    // To recycle we must swap the tables A to B or B to A
    if( ucErased ){
        pygmyRootVolume.Attributes &= ~VOLUMEFULL;
  36:	f003 037f 	and.w	r3, r3, #127	; 0x7f
  3a:	7363      	strb	r3, [r4, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:474
        pygmyRootVolume.ActiveFAT = fileGetActiveFAT( );
  3c:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:475
        if( pygmyRootVolume.ActiveFAT == pygmyRootVolume.FAT_B ){
  40:	6ba5      	ldr	r5, [r4, #56]	; 0x38
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:474
    
    // We have deleted entries in the FAT that can be recycled, since we have no free entries
    // To recycle we must swap the tables A to B or B to A
    if( ucErased ){
        pygmyRootVolume.Attributes &= ~VOLUMEFULL;
        pygmyRootVolume.ActiveFAT = fileGetActiveFAT( );
  42:	6160      	str	r0, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:475
        if( pygmyRootVolume.ActiveFAT == pygmyRootVolume.FAT_B ){
  44:	42a8      	cmp	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:476
            ulAddress = pygmyRootVolume.FAT_A;
  46:	bf08      	it	eq
  48:	6b65      	ldreq	r5, [r4, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:483
            ulAddress = pygmyRootVolume.FAT_B;
        } //else
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
  4a:	2600      	movs	r6, #0
  4c:	46a8      	mov	r8, r5
  4e:	e014      	b.n	7a <fileGetFreeFATEntry+0x7a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:485
            ii = i * 4;
            ulEntry = flashReadLong( pygmyRootVolume.ActiveFAT + ii );
  50:	4b19      	ldr	r3, [pc, #100]	; (b8 <fileGetFreeFATEntry+0xb8>)
  52:	6958      	ldr	r0, [r3, #20]
  54:	eb00 0086 	add.w	r0, r0, r6, lsl #2
  58:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:486
            if( ulEntry & 0xC0000000 ){ // ToDo: Test
  5c:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:485
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
            ii = i * 4;
            ulEntry = flashReadLong( pygmyRootVolume.ActiveFAT + ii );
  60:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:486
            if( ulEntry & 0xC0000000 ){ // ToDo: Test
  62:	d003      	beq.n	6c <fileGetFreeFATEntry+0x6c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:488
            //if( ulEntry & 0xFF000000 ){
                flashWriteLong( ulAddress + ii, ulEntry );
  64:	4640      	mov	r0, r8
  66:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
  6a:	e003      	b.n	74 <fileGetFreeFATEntry+0x74>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:489
            } else if( ulFAT == 0xFFFFFFFF ){
  6c:	f1b7 3fff 	cmp.w	r7, #4294967295
  70:	bf08      	it	eq
  72:	4637      	moveq	r7, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:483
            ulAddress = pygmyRootVolume.FAT_B;
        } //else
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
  74:	3601      	adds	r6, #1
  76:	f108 0804 	add.w	r8, r8, #4
  7a:	8b23      	ldrh	r3, [r4, #24]
  7c:	429e      	cmp	r6, r3
  7e:	d3e7      	bcc.n	50 <fileGetFreeFATEntry+0x50>
  80:	2600      	movs	r6, #0
  82:	e005      	b.n	90 <fileGetFreeFATEntry+0x90>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:496
            } // else if
        } // for 
        // Now delete original table and make updated table active
        // This will set the Active/Inactive byte to 0xFF, or inactive
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
  84:	6948      	ldr	r0, [r1, #20]
  86:	fb02 0006 	mla	r0, r2, r6, r0
  8a:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:495
                ulFAT = i; // Only assign ulFAT on first recycled Entry
            } // else if
        } // for 
        // Now delete original table and make updated table active
        // This will set the Active/Inactive byte to 0xFF, or inactive
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
  8e:	3601      	adds	r6, #1
  90:	8d23      	ldrh	r3, [r4, #40]	; 0x28
  92:	4909      	ldr	r1, [pc, #36]	; (b8 <fileGetFreeFATEntry+0xb8>)
  94:	429e      	cmp	r6, r3
  96:	8b62      	ldrh	r2, [r4, #26]
  98:	d3f4      	bcc.n	84 <fileGetFreeFATEntry+0x84>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:501
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        // Finally clear last byte of FAT table to mark as unused
        // Warning! Changed to mark ACTIVE table with 0!
        pygmyRootVolume.ActiveFAT = ulAddress; // Now update the ActiveFAT to the updated table
        flashWriteByte( pygmyRootVolume.ActiveFAT + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  9a:	1e68      	subs	r0, r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:500
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        // Finally clear last byte of FAT table to mark as unused
        // Warning! Changed to mark ACTIVE table with 0!
        pygmyRootVolume.ActiveFAT = ulAddress; // Now update the ActiveFAT to the updated table
  9c:	614d      	str	r5, [r1, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:501
        flashWriteByte( pygmyRootVolume.ActiveFAT + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  9e:	fb02 0003 	mla	r0, r2, r3, r0
  a2:	2100      	movs	r1, #0
  a4:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:503
        
        return( (u16)ulFAT ); // Return the recycled value
  a8:	b2b8      	uxth	r0, r7
  aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:506
    } // if 
    
    return( 0xFFFF ); // No memory left
  ae:	f64f 70ff 	movw	r0, #65535	; 0xffff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:507
}
  b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  b6:	bf00      	nop
  b8:	00000000 	.word	0x00000000

Disassembly of section .text.fileAllocateFAT:

00000000 <fileAllocateFAT>:
fileAllocateFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:583
    // BIT15 set, BIT14 set is empty
    // BIT15 clear, BIT14 set is allocated
    // BIT15 clear, BIT14 clear is deleted
    // An ID_Sector of 0x00 and 0xFF reserved for error
    // If these IDs are requested, return error ( 0xFFFF )
    if( !uiID_Sector || uiID_Sector > 0x3FFE ){
   0:	b2921e4a 	.word	0xb2921e4a
   4:	f643 73fd 	movw	r3, #16381	; 0x3ffd
   8:	429a      	cmp	r2, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:575
 
    return( uiDeleted );
}

u16 fileAllocateFAT( u16 uiID_File, u16 uiID_Sector )
{
   a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   e:	4607      	mov	r7, r0
  10:	4688      	mov	r8, r1
  12:	f64f 75ff 	movw	r5, #65535	; 0xffff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:583
    // BIT15 set, BIT14 set is empty
    // BIT15 clear, BIT14 set is allocated
    // BIT15 clear, BIT14 clear is deleted
    // An ID_Sector of 0x00 and 0xFF reserved for error
    // If these IDs are requested, return error ( 0xFFFF )
    if( !uiID_Sector || uiID_Sector > 0x3FFE ){
  16:	d819      	bhi.n	36 <fileAllocateFAT+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:589
        #ifndef __PYGMY_BOOT
            pygmyRootVolume.Attributes |= VOLUMEERROR;
        #endif //__PYGMY_BOOT
        return( 0xFFFF );
    } // if
    ulFAT = fileGetFreeFATEntry( );
  18:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:590
    if( ulFAT != 0xFFFF ){
  1c:	42a8      	cmp	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:589
        #ifndef __PYGMY_BOOT
            pygmyRootVolume.Attributes |= VOLUMEERROR;
        #endif //__PYGMY_BOOT
        return( 0xFFFF );
    } // if
    ulFAT = fileGetFreeFATEntry( );
  1e:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:590
    if( ulFAT != 0xFFFF ){
  20:	d015      	beq.n	4e <fileAllocateFAT+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:591
        flashSectorErase( pygmyRootVolume.FirstFileSector + ( ulFAT * pygmyRootVolume.SectorSize ) );
  22:	4d0c      	ldr	r5, [pc, #48]	; (54 <fileAllocateFAT+0x54>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:592
        ulAddress = ulFAT * 4;
  24:	00a6      	lsls	r6, r4, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:591
        #endif //__PYGMY_BOOT
        return( 0xFFFF );
    } // if
    ulFAT = fileGetFreeFATEntry( );
    if( ulFAT != 0xFFFF ){
        flashSectorErase( pygmyRootVolume.FirstFileSector + ( ulFAT * pygmyRootVolume.SectorSize ) );
  26:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
  28:	8b68      	ldrh	r0, [r5, #26]
  2a:	fb00 3004 	mla	r0, r0, r4, r3
  2e:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:594
        ulAddress = ulFAT * 4;
        //flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, 0x7F ); // 0x07 = Allocated, shifted 4 bits, F leaves bits unaffected
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress, BIT14 | uiID_Sector ); 
  32:	6968      	ldr	r0, [r5, #20]
  34:	f448 4180 	orr.w	r1, r8, #16384	; 0x4000
  38:	1830      	adds	r0, r6, r0
  3a:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:595
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress + 2, uiID_File );  
  3e:	6968      	ldr	r0, [r5, #20]
  40:	4639      	mov	r1, r7
  42:	3002      	adds	r0, #2
  44:	1980      	adds	r0, r0, r6
  46:	f7ff fffe 	bl	0 <fileAllocateFAT>
  4a:	e000      	b.n	4e <fileAllocateFAT+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:587
    // If these IDs are requested, return error ( 0xFFFF )
    if( !uiID_Sector || uiID_Sector > 0x3FFE ){
        #ifndef __PYGMY_BOOT
            pygmyRootVolume.Attributes |= VOLUMEERROR;
        #endif //__PYGMY_BOOT
        return( 0xFFFF );
  4c:	462c      	mov	r4, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:599
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress, BIT14 | uiID_Sector ); 
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress + 2, uiID_File );  
    } // if

    return( ulFAT );
}
  4e:	4620      	mov	r0, r4
  50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  54:	00000000 	.word	0x00000000

Disassembly of section .text.filePutChar:

00000000 <filePutChar>:
filePutChar():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:788

    return( 1 );
}

u8 filePutChar( PYGMYFILE *pygmyFile, u8 ucChar )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:791
    u32 i, ulAddress;
    
    if( !( pygmyFile->Attributes & WRITE ) || pygmyRootVolume.Attributes & VOLUMEFULL ) {
   4:	7c00      	ldrb	r0, [r0, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:788

    return( 1 );
}

u8 filePutChar( PYGMYFILE *pygmyFile, u8 ucChar )
{
   6:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:791
    u32 i, ulAddress;
    
    if( !( pygmyFile->Attributes & WRITE ) || pygmyRootVolume.Attributes & VOLUMEFULL ) {
   8:	f010 0002 	ands.w	r0, r0, #2
   c:	d03c      	beq.n	88 <filePutChar+0x88>
   e:	4d1f      	ldr	r5, [pc, #124]	; (8c <filePutChar+0x8c>)
  10:	f995 300d 	ldrsb.w	r3, [r5, #13]
  14:	2b00      	cmp	r3, #0
  16:	db32      	blt.n	7e <filePutChar+0x7e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:794
        return( 0 ); // In Write mode, Length and Index must match or memory corruption will occur
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
  18:	68a6      	ldr	r6, [r4, #8]
  1a:	8b6b      	ldrh	r3, [r5, #26]
  1c:	3680      	adds	r6, #128	; 0x80
  1e:	fbb6 f2f3 	udiv	r2, r6, r3
  22:	fb03 6612 	mls	r6, r3, r2, r6
  26:	b996      	cbnz	r6, 4e <filePutChar+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:795
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
  28:	89a1      	ldrh	r1, [r4, #12]
  2a:	89e0      	ldrh	r0, [r4, #14]
  2c:	3101      	adds	r1, #1
  2e:	b289      	uxth	r1, r1
  30:	f7ff fffe 	bl	0 <filePutChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:796
        if( pygmyRootVolume.Attributes & VOLUMEFULL ){
  34:	f995 300d 	ldrsb.w	r3, [r5, #13]
  38:	2b00      	cmp	r3, #0
  3a:	db22      	blt.n	82 <filePutChar+0x82>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:799
            return( 0 );// memory is full!
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  3c:	8b6b      	ldrh	r3, [r5, #26]
  3e:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  40:	fbb2 f3f3 	udiv	r3, r2, r3
  44:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:800
        ++pygmyFile->ID_Sector;     
  46:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:799
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
        if( pygmyRootVolume.Attributes & VOLUMEFULL ){
            return( 0 );// memory is full!
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  48:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:800
        ++pygmyFile->ID_Sector;     
  4a:	3301      	adds	r3, #1
  4c:	81a3      	strh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:802
    } // if
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize );
  4e:	68a0      	ldr	r0, [r4, #8]
  50:	8b6b      	ldrh	r3, [r5, #26]
  52:	3080      	adds	r0, #128	; 0x80
  54:	fbb0 f2f3 	udiv	r2, r0, r3
  58:	fb03 0012 	mls	r0, r3, r2, r0
  5c:	6822      	ldr	r2, [r4, #0]
  5e:	fb02 0003 	mla	r0, r2, r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:803
    if( ulAddress < ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize ) ) {//|| ulAddress > 0x03FFF000 ){
  62:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  64:	fbb2 f3f3 	udiv	r3, r2, r3
  68:	4298      	cmp	r0, r3
  6a:	d30c      	bcc.n	86 <filePutChar+0x86>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:809
        #ifndef __PYGMY_BOOT
            pygmyRootVolume.Attributes |= VOLUMEERROR;
        #endif // __PYGMY_BOOT
        return( 0 );
    } // if 
    flashWriteByte( ulAddress, ucChar );
  6c:	4639      	mov	r1, r7
  6e:	f7ff fffe 	bl	0 <filePutChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:811
    
    ++pygmyFile->Index;
  72:	68a3      	ldr	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:814
    pygmyFile->Length = pygmyFile->Index;

    return( 1 );
  74:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:811
        #endif // __PYGMY_BOOT
        return( 0 );
    } // if 
    flashWriteByte( ulAddress, ucChar );
    
    ++pygmyFile->Index;
  76:	3301      	adds	r3, #1
  78:	60a3      	str	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:812
    pygmyFile->Length = pygmyFile->Index;
  7a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:814

    return( 1 );
  7c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:792
u8 filePutChar( PYGMYFILE *pygmyFile, u8 ucChar )
{
    u32 i, ulAddress;
    
    if( !( pygmyFile->Attributes & WRITE ) || pygmyRootVolume.Attributes & VOLUMEFULL ) {
        return( 0 ); // In Write mode, Length and Index must match or memory corruption will occur
  7e:	2000      	movs	r0, #0
  80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:797
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
        if( pygmyRootVolume.Attributes & VOLUMEFULL ){
            return( 0 );// memory is full!
  82:	4630      	mov	r0, r6
  84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:807
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize );
    if( ulAddress < ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize ) ) {//|| ulAddress > 0x03FFF000 ){
        #ifndef __PYGMY_BOOT
            pygmyRootVolume.Attributes |= VOLUMEERROR;
        #endif // __PYGMY_BOOT
        return( 0 );
  86:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:815
    
    ++pygmyFile->Index;
    pygmyFile->Length = pygmyFile->Index;

    return( 1 );
}
  88:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  8a:	bf00      	nop
  8c:	00000000 	.word	0x00000000

Disassembly of section .text.filePutLong:

00000000 <filePutLong>:
filePutLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:830
    } // else
}

void filePutLong( PYGMYFILE *pygmyFile, u32 ulData, u8 ucEndian )
{
    if( ucEndian == BIGENDIAN ){
   0:	2a01      	cmp	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:829
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
    } // else
}

void filePutLong( PYGMYFILE *pygmyFile, u32 ulData, u8 ucEndian )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:830
    if( ucEndian == BIGENDIAN ){
   8:	d10f      	bne.n	2a <filePutLong+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:831
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
   a:	0e09      	lsrs	r1, r1, #24
   c:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:832
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
  10:	0c21      	lsrs	r1, r4, #16
  12:	b2c9      	uxtb	r1, r1
  14:	4628      	mov	r0, r5
  16:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:833
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
  1a:	0a21      	lsrs	r1, r4, #8
  1c:	b2c9      	uxtb	r1, r1
  1e:	4628      	mov	r0, r5
  20:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:834
        filePutChar( pygmyFile, (u8) ulData );
  24:	4628      	mov	r0, r5
  26:	b2e1      	uxtb	r1, r4
  28:	e00e      	b.n	48 <filePutLong+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:836
    } else {
        filePutChar( pygmyFile, (u8) ulData );
  2a:	b2c9      	uxtb	r1, r1
  2c:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:837
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
  30:	0a21      	lsrs	r1, r4, #8
  32:	b2c9      	uxtb	r1, r1
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:838
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
  3a:	0c21      	lsrs	r1, r4, #16
  3c:	b2c9      	uxtb	r1, r1
  3e:	4628      	mov	r0, r5
  40:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:839
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
  44:	4628      	mov	r0, r5
  46:	0e21      	lsrs	r1, r4, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:841
    } // else
}
  48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:839
        filePutChar( pygmyFile, (u8) ulData );
    } else {
        filePutChar( pygmyFile, (u8) ulData );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
  4c:	f7ff bffe 	b.w	0 <filePutLong>

Disassembly of section .text.filePutWord:

00000000 <filePutWord>:
filePutWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:819
    return( 1 );
}

void filePutWord( PYGMYFILE *pygmyFile, u16 uiData, u8 ucEndian )
{
    if( ucEndian == BIGENDIAN ){
   0:	2a01      	cmp	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:818

    return( 1 );
}

void filePutWord( PYGMYFILE *pygmyFile, u16 uiData, u8 ucEndian )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
   8:	ea4f 2611 	mov.w	r6, r1, lsr #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:819
    if( ucEndian == BIGENDIAN ){
   c:	d105      	bne.n	1a <filePutWord+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:820
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
   e:	4631      	mov	r1, r6
  10:	f7ff fffe 	bl	0 <filePutWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:821
        filePutChar( pygmyFile, (u8)uiData );
  14:	4628      	mov	r0, r5
  16:	b2e1      	uxtb	r1, r4
  18:	e004      	b.n	24 <filePutWord+0x24>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:823
    } else {
        filePutChar( pygmyFile, (u8)uiData );
  1a:	b2c9      	uxtb	r1, r1
  1c:	f7ff fffe 	bl	0 <filePutWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:824
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
  20:	4628      	mov	r0, r5
  22:	4631      	mov	r1, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:826
    } // else
}
  24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:824
    if( ucEndian == BIGENDIAN ){
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
        filePutChar( pygmyFile, (u8)uiData );
    } else {
        filePutChar( pygmyFile, (u8)uiData );
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
  28:	f7ff bffe 	b.w	0 <filePutWord>

Disassembly of section .text.filePutString:

00000000 <filePutString>:
filePutString():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:777

    return( 1 );
}

u8 filePutString( PYGMYFILE *pygmyFile, u8 *ucString )
{   
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:778
    for( ; *ucString; ){
   6:	e003      	b.n	10 <filePutString+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:779
        if( !filePutChar( pygmyFile, *(ucString++) ) ){
   8:	4628      	mov	r0, r5
   a:	f7ff fffe 	bl	0 <filePutString>
   e:	b120      	cbz	r0, 1a <filePutString+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:778
    return( 1 );
}

u8 filePutString( PYGMYFILE *pygmyFile, u8 *ucString )
{   
    for( ; *ucString; ){
  10:	f814 1b01 	ldrb.w	r1, [r4], #1
  14:	2900      	cmp	r1, #0
  16:	d1f7      	bne.n	8 <filePutString+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:784
        if( !filePutChar( pygmyFile, *(ucString++) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  18:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:785
}
  1a:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.filePutBuffer:

00000000 <filePutBuffer>:
filePutBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:766

    return( 0 ); 
}

u8 filePutBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	4616      	mov	r6, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:767
    for( ; uiLen--; ){
   8:	e007      	b.n	1a <filePutBuffer+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:768
        if( !filePutChar( pygmyFile, *(ucBuffer++) ) ){
   a:	4628      	mov	r0, r5
   c:	f816 1b01 	ldrb.w	r1, [r6], #1
  10:	f7ff fffe 	bl	0 <filePutBuffer>
  14:	3c01      	subs	r4, #1
  16:	b2a4      	uxth	r4, r4
  18:	b110      	cbz	r0, 20 <filePutBuffer+0x20>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:767
    return( 0 ); 
}

u8 filePutBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    for( ; uiLen--; ){
  1a:	2c00      	cmp	r4, #0
  1c:	d1f5      	bne.n	a <filePutBuffer+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:773
        if( !filePutChar( pygmyFile, *(ucBuffer++) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  1e:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:774
}
  20:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.fileClose:

00000000 <fileClose>:
fileClose():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:675

    return( 0 );
}

u8 fileClose( PYGMYFILE *pygmyFile )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:685
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   4:	4e25      	ldr	r6, [pc, #148]	; (9c <fileClose+0x9c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:675

    return( 0 );
}

u8 fileClose( PYGMYFILE *pygmyFile )
{
   6:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:685
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   8:	2101      	movs	r1, #1
   a:	89c0      	ldrh	r0, [r0, #14]
   c:	6af5      	ldr	r5, [r6, #44]	; 0x2c
   e:	f7ff fffe 	bl	0 <fileClose>
  12:	8b77      	ldrh	r7, [r6, #26]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:686
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  14:	6861      	ldr	r1, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:685
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
  16:	fb07 5700 	mla	r7, r7, r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:686
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <fileClose>
  20:	4605      	mov	r5, r0
  22:	2800      	cmp	r0, #0
  24:	d133      	bne.n	8e <fileClose+0x8e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:690
        return( 1 );
    } // if
    // Out of length slots in Sector, Handle Sector copy and re-allocation
    fileDeleteFATEntry( pygmyFile->ID_File, 1 ); // Deletes on first sequential FAT entry
  26:	2101      	movs	r1, #1
  28:	89e0      	ldrh	r0, [r4, #14]
  2a:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:691
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
  2e:	2101      	movs	r1, #1
  30:	89e0      	ldrh	r0, [r4, #14]
  32:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:692
    if( ulAddress2 == 0xFFFF ){
  36:	f64f 73ff 	movw	r3, #65535	; 0xffff
  3a:	4298      	cmp	r0, r3
  3c:	d02a      	beq.n	94 <fileClose+0x94>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:695
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
    } // if
    ulAddress2 += pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
  3e:	f8b6 801a 	ldrh.w	r8, [r6, #26]
  42:	6af3      	ldr	r3, [r6, #44]	; 0x2c
  44:	fbb3 f3f8 	udiv	r3, r3, r8
  48:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:696
    if( pygmyFile->ID_Sector == 1 ){
  4a:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:699
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
  4c:	fb08 f800 	mul.w	r8, r8, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:696
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
    if( ulAddress2 == 0xFFFF ){
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
    } // if
    ulAddress2 += pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
    if( pygmyFile->ID_Sector == 1 ){
  50:	2b01      	cmp	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:697
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
  52:	bf08      	it	eq
  54:	6020      	streq	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:701
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
  56:	2580      	movs	r5, #128	; 0x80
  58:	e00a      	b.n	70 <fileClose+0x70>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:702
        ucByte = flashReadByte( ulAddress + i );
  5a:	19e8      	adds	r0, r5, r7
  5c:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:703
        if( ucByte != 0xFF ) {// Don't attempt to erase the erased
  60:	28ff      	cmp	r0, #255	; 0xff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:702
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
        ucByte = flashReadByte( ulAddress + i );
  62:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:703
        if( ucByte != 0xFF ) {// Don't attempt to erase the erased
  64:	d003      	beq.n	6e <fileClose+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:704
            flashWriteByte( ulAddress2 + i, ucByte ); 
  66:	eb05 0008 	add.w	r0, r5, r8
  6a:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:706
        } // if
        ++i;
  6e:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:701
    if( pygmyFile->ID_Sector == 1 ){
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
  70:	8b73      	ldrh	r3, [r6, #26]
  72:	429d      	cmp	r5, r3
  74:	d3f1      	bcc.n	5a <fileClose+0x5a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:709
            flashWriteByte( ulAddress2 + i, ucByte ); 
        } // if
        ++i;
    } // for
    
    flashSectorErase( ulAddress );// Pre-erase to speed next write operation
  76:	4638      	mov	r0, r7
  78:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:710
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  7c:	4620      	mov	r0, r4
  7e:	6861      	ldr	r1, [r4, #4]
  80:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:687
    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
        return( 1 );
  84:	3800      	subs	r0, #0
  86:	bf18      	it	ne
  88:	2001      	movne	r0, #1
  8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  8e:	2001      	movs	r0, #1
  90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:693
    } // if
    // Out of length slots in Sector, Handle Sector copy and re-allocation
    fileDeleteFATEntry( pygmyFile->ID_File, 1 ); // Deletes on first sequential FAT entry
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
    if( ulAddress2 == 0xFFFF ){
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
  94:	4628      	mov	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:715
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
        return( 1 ); 
    } // if
    
    return( 0 ); 
}
  96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  9a:	bf00      	nop
  9c:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeFileEntry:

00000000 <fileGetFreeFileEntry>:
fileGetFreeFileEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:361

    return( 1 );
}

u16 fileGetFreeFileEntry( void )
{
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:369
    u8 ucBuffer[ 16 ];

    // Read MSB of each Entry until 0xFF is found
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );
   4:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
   8:	4f39      	ldr	r7, [pc, #228]	; (f0 <fileGetFreeFileEntry+0xf0>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:371

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
   a:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:369
    u8 ucBuffer[ 16 ];

    // Read MSB of each Entry until 0xFF is found
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );
   e:	6138      	str	r0, [r7, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:371

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
  10:	d06a      	beq.n	e8 <fileGetFreeFileEntry+0xe8>
  12:	2404      	movs	r4, #4
  14:	2500      	movs	r5, #0
  16:	e00e      	b.n	36 <fileGetFreeFileEntry+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:376
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
  18:	6918      	ldr	r0, [r3, #16]
  1a:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  1e:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:377
        if( ii == 0xFF ){
  22:	28ff      	cmp	r0, #255	; 0xff
  24:	d102      	bne.n	2c <fileGetFreeFileEntry+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:378
            return( 4 + i );
  26:	b2a0      	uxth	r0, r4
  28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:380
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  2c:	b915      	cbnz	r5, 34 <fileGetFreeFileEntry+0x34>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:381
            uiErased = 4 + i; // Store deleted entry, if no entries left we will free up and use
  2e:	2800      	cmp	r0, #0
  30:	bf08      	it	eq
  32:	4625      	moveq	r5, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:380
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
        if( ii == 0xFF ){
            return( 4 + i );
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  34:	3401      	adds	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:375

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  36:	69fa      	ldr	r2, [r7, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:380
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
        if( ii == 0xFF ){
            return( 4 + i );
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  38:	1f21      	subs	r1, r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:375

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  3a:	4291      	cmp	r1, r2
  3c:	4b2c      	ldr	r3, [pc, #176]	; (f0 <fileGetFreeFileEntry+0xf0>)
  3e:	d3eb      	bcc.n	18 <fileGetFreeFileEntry+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:385
        if( !uiErased && !ii ){ // We have a deleted entry
            uiErased = 4 + i; // Store deleted entry, if no entries left we will free up and use
        } // if
    } // for
    // If we exit the loop then we are out of memory
    if( uiErased ){
  40:	2d00      	cmp	r5, #0
  42:	d04a      	beq.n	da <fileGetFreeFileEntry+0xda>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:387
        // Create pointer to unused Table set
        if( pygmyRootVolume.ActiveFiles == pygmyRootVolume.Files_B ){ 
  44:	6b1c      	ldr	r4, [r3, #48]	; 0x30
  46:	691b      	ldr	r3, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:392
            ulAddress = PYGMY_FILE_FILES_A;
        } else{
            ulAddress = pygmyRootVolume.Files_B;
        } // else
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
  48:	2600      	movs	r6, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:388
    } // for
    // If we exit the loop then we are out of memory
    if( uiErased ){
        // Create pointer to unused Table set
        if( pygmyRootVolume.ActiveFiles == pygmyRootVolume.Files_B ){ 
            ulAddress = PYGMY_FILE_FILES_A;
  4a:	42a3      	cmp	r3, r4
  4c:	bf08      	it	eq
  4e:	2400      	moveq	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:392
        } else{
            ulAddress = pygmyRootVolume.Files_B;
        } // else
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
  50:	e006      	b.n	60 <fileGetFreeFileEntry+0x60>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:393
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
  52:	4b27      	ldr	r3, [pc, #156]	; (f0 <fileGetFreeFileEntry+0xf0>)
  54:	8b58      	ldrh	r0, [r3, #26]
  56:	fb00 4006 	mla	r0, r0, r6, r4
  5a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:392
        if( pygmyRootVolume.ActiveFiles == pygmyRootVolume.Files_B ){ 
            ulAddress = PYGMY_FILE_FILES_A;
        } else{
            ulAddress = pygmyRootVolume.Files_B;
        } // else
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
  5e:	3601      	adds	r6, #1
  60:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
  62:	429e      	cmp	r6, r3
  64:	d3f5      	bcc.n	52 <fileGetFreeFileEntry+0x52>
  66:	2600      	movs	r6, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:397
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
  68:	6938      	ldr	r0, [r7, #16]
  6a:	1830      	adds	r0, r6, r0
  6c:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
  70:	4601      	mov	r1, r0
  72:	1930      	adds	r0, r6, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:396
        } // else
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
  74:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:397
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
  76:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:396
        } // else
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
  7a:	2e40      	cmp	r6, #64	; 0x40
  7c:	d1f4      	bne.n	68 <fileGetFreeFileEntry+0x68>
  7e:	f04f 0900 	mov.w	r9, #0
  82:	e01b      	b.n	bc <fileGetFreeFileEntry+0xbc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:403
        } // for
        
        for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
            ii = ( i + 4 ) * 16;
            // Test first byte, if marked deleted ( 0 ), then skip entry since 0xFF cannot be written to 0xFF in flash
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
  84:	f8d8 0010 	ldr.w	r0, [r8, #16]
  88:	1830      	adds	r0, r6, r0
  8a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:404
            if( !ucBuffer[ 0 ] ){
  8e:	b190      	cbz	r0, b6 <fileGetFreeFileEntry+0xb6>
  90:	f04f 0800 	mov.w	r8, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:408
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
                ucBuffer[ iii ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii + iii );  
  94:	6938      	ldr	r0, [r7, #16]
  96:	1830      	adds	r0, r6, r0
  98:	4440      	add	r0, r8
  9a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:409
                if( ucBuffer[ iii ] != 0xFF ){
  9e:	28ff      	cmp	r0, #255	; 0xff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:408
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
            if( !ucBuffer[ 0 ] ){
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
                ucBuffer[ iii ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii + iii );  
  a0:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:409
                if( ucBuffer[ iii ] != 0xFF ){
  a2:	d003      	beq.n	ac <fileGetFreeFileEntry+0xac>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:410
                    flashWriteByte( ulAddress + ii + iii, ucBuffer[ iii ] );
  a4:	1930      	adds	r0, r6, r4
  a6:	4440      	add	r0, r8
  a8:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:407
            // Test first byte, if marked deleted ( 0 ), then skip entry since 0xFF cannot be written to 0xFF in flash
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
            if( !ucBuffer[ 0 ] ){
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
  ac:	f108 0801 	add.w	r8, r8, #1
  b0:	f1b8 0f10 	cmp.w	r8, #16
  b4:	d1ee      	bne.n	94 <fileGetFreeFileEntry+0x94>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:400
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
        } // for
        
        for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  b6:	f109 0901 	add.w	r9, r9, #1
  ba:	3610      	adds	r6, #16
  bc:	69fb      	ldr	r3, [r7, #28]
  be:	f8df 8030 	ldr.w	r8, [pc, #48]	; f0 <fileGetFreeFileEntry+0xf0>
  c2:	4599      	cmp	r9, r3
  c4:	d3de      	bcc.n	84 <fileGetFreeFileEntry+0x84>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:415
                    flashWriteByte( ulAddress + ii + iii, ucBuffer[ iii ] );
                } // if
            } // for
        } // for
        // Now set first byte of ActiveFiles to 0 to delete
        flashWriteByte( pygmyRootVolume.ActiveFiles, 0x00 );
  c6:	f8d8 0010 	ldr.w	r0, [r8, #16]
  ca:	2100      	movs	r1, #0
  cc:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:416
        pygmyRootVolume.ActiveFiles = ulAddress;
  d0:	f8c8 4010 	str.w	r4, [r8, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:418
    
        return( uiErased ); // This was the location of the first known deleted entry, now free
  d4:	b2a8      	uxth	r0, r5
  d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:422
    } // if
    
    // If we drop through, there are no free sectors remaining, mark volume as full
    pygmyRootVolume.Attributes |= VOLUMEFULL;
  da:	7b5a      	ldrb	r2, [r3, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:424

    return( 0 );
  dc:	4628      	mov	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:422
    
        return( uiErased ); // This was the location of the first known deleted entry, now free
    } // if
    
    // If we drop through, there are no free sectors remaining, mark volume as full
    pygmyRootVolume.Attributes |= VOLUMEFULL;
  de:	f062 027f 	orn	r2, r2, #127	; 0x7f
  e2:	735a      	strb	r2, [r3, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:424

    return( 0 );
  e4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:372
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
  e8:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:425
    
    // If we drop through, there are no free sectors remaining, mark volume as full
    pygmyRootVolume.Attributes |= VOLUMEFULL;

    return( 0 );
}
  ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  ee:	bf00      	nop
  f0:	00000000 	.word	0x00000000

Disassembly of section .text.fileRename:

00000000 <fileRename>:
fileRename():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:316

    return( 0 );
}

u8 fileRename( u8 *ucCurrentName, u8 *ucName )
{
   0:	43f8e92d 	.word	0x43f8e92d
   4:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:325
 
    /*if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
        return( 0 );
    } // if
    */
    if( !fileIsValidName( ucName ) ){
   6:	4608      	mov	r0, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:316

    return( 0 );
}

u8 fileRename( u8 *ucCurrentName, u8 *ucName )
{
   8:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:325
 
    /*if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
        return( 0 );
    } // if
    */
    if( !fileIsValidName( ucName ) ){
   a:	f7ff fffe 	bl	0 <fileRename>
   e:	2800      	cmp	r0, #0
  10:	d035      	beq.n	7e <fileRename+0x7e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:328
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
  12:	4628      	mov	r0, r5
  14:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:329
    if( !ulFileEntry || fileSeekName( ucName ) ){
  18:	4605      	mov	r5, r0
  1a:	b368      	cbz	r0, 78 <fileRename+0x78>
  1c:	4638      	mov	r0, r7
  1e:	f7ff fffe 	bl	0 <fileRename>
  22:	4681      	mov	r9, r0
  24:	bb50      	cbnz	r0, 7c <fileRename+0x7c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:333
        return( 0 );
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  26:	4c17      	ldr	r4, [pc, #92]	; (84 <fileRename+0x84>)
  28:	6923      	ldr	r3, [r4, #16]
  2a:	eb03 1805 	add.w	r8, r3, r5, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:334
    ulFileID = (u32)flashReadByte( ulFileEntry + 13 ) << 24;
  2e:	f108 000d 	add.w	r0, r8, #13
  32:	f7ff fffe 	bl	0 <fileRename>
  36:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:335
    ulFileID |= (u32)flashReadWord( ulFileEntry + 14 );
  38:	f108 000e 	add.w	r0, r8, #14
  3c:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:338
    //ucAttrib = flashReadByte( ulFileEntry + 13 );
    //uiFileID = flashReadWord( ulFileEntry + 14 );
    flashWriteByte( ulFileEntry, 0x00 ); // Delete old entry by setting first byte to NULL
  40:	4649      	mov	r1, r9
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:335
        return( 0 );
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
    ulFileID = (u32)flashReadByte( ulFileEntry + 13 ) << 24;
    ulFileID |= (u32)flashReadWord( ulFileEntry + 14 );
  42:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:338
    //ucAttrib = flashReadByte( ulFileEntry + 13 );
    //uiFileID = flashReadWord( ulFileEntry + 14 );
    flashWriteByte( ulFileEntry, 0x00 ); // Delete old entry by setting first byte to NULL
  44:	4640      	mov	r0, r8
  46:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:340
    
    ulFileEntry = fileGetFreeFileEntry( );
  4a:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:341
    if( !ulFileEntry ){
  4e:	b1b0      	cbz	r0, 7e <fileRename+0x7e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:345
        return( 0 ); // This can only happen in the case of memory failure
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  50:	6924      	ldr	r4, [r4, #16]
  52:	eb04 1400 	add.w	r4, r4, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:346
    flashWriteBuffer( ulFileEntry, len( ucName ), ucName );
  56:	4638      	mov	r0, r7
  58:	f7ff fffe 	bl	0 <len>
  5c:	463a      	mov	r2, r7
  5e:	4601      	mov	r1, r0
  60:	4620      	mov	r0, r4
  62:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:349
    //ulFileID = ( (u32)ucAttrib << 24 ) | uiFileID;
    
    flashWriteLong( ulFileEntry + 12, ulFileID );
  66:	f104 000c 	add.w	r0, r4, #12
  6a:	ea45 6106 	orr.w	r1, r5, r6, lsl #24
  6e:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:357
    // Next we write the ID, this starts as the physical offset of the entry
    // This tag cannot be used to identify the entry location since the tag will follow the
    // file through name changes, etc. If ID changes, all associated FAT Entries are lost
    //flashWriteWord( ulFileEntry+14, uiFileID );

    return( 1 );
  72:	2001      	movs	r0, #1
  74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  78:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:330
    if( !fileIsValidName( ucName ) ){
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
    if( !ulFileEntry || fileSeekName( ucName ) ){
        return( 0 );
  7c:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:358
    // This tag cannot be used to identify the entry location since the tag will follow the
    // file through name changes, etc. If ID changes, all associated FAT Entries are lost
    //flashWriteWord( ulFileEntry+14, uiFileID );

    return( 1 );
}
  7e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  82:	bf00      	nop
  84:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteEnable:

00000000 <flashWriteEnable>:
flashWriteEnable():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1391
    FLASH_CS_HIGH;
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
}

void flashWriteEnable( void )
{
   0:	4c1ab538 	.word	0x4c1ab538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1402
        FLASH_CS_INIT; // To be defined in profile
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1397
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
   8:	6863      	ldr	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1403
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
   a:	4819      	ldr	r0, [pc, #100]	; (70 <flashWriteEnable+0x70>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1397
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
   c:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  10:	6063      	str	r3, [r4, #4]
  12:	6863      	ldr	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1403
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
  14:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1397
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
  16:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
  1a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1398
        FLASH_SCK_INIT;
  1c:	6863      	ldr	r3, [r4, #4]
  1e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
  22:	6063      	str	r3, [r4, #4]
  24:	6863      	ldr	r3, [r4, #4]
  26:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
  2a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1399
        FLASH_MISO_INIT;
  2c:	6863      	ldr	r3, [r4, #4]
  2e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
  32:	6063      	str	r3, [r4, #4]
  34:	6863      	ldr	r3, [r4, #4]
  36:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
  3a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1400
        FLASH_MOSI_INIT; 
  3c:	6863      	ldr	r3, [r4, #4]
  3e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
  42:	6063      	str	r3, [r4, #4]
  44:	6863      	ldr	r3, [r4, #4]
  46:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
  4a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1402
    #endif
    FLASH_CS_LOW;
  4c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1403
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
  4e:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1404
    FLASH_CS_HIGH;
  52:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1406
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WRSR );
  54:	4806      	ldr	r0, [pc, #24]	; (70 <flashWriteEnable+0x70>)
  56:	2101      	movs	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1405
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  58:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1406
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WRSR );
  5a:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1407
    spiWriteByte( &pygmyFlashSPI, 0 );
  5e:	4804      	ldr	r0, [pc, #16]	; (70 <flashWriteEnable+0x70>)
  60:	2100      	movs	r1, #0
  62:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1408
    FLASH_CS_HIGH;
  66:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1409
}
  68:	bd38      	pop	{r3, r4, r5, pc}
  6a:	bf00      	nop
  6c:	40010c00 	.word	0x40010c00
  70:	00000000 	.word	0x00000000

Disassembly of section .text.fileFormat:

00000000 <fileFormat>:
fileFormat():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1089
    } // for
}
#endif // __PYGMYSTREAMS

u32 fileFormat( u8 *ucName )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1102
            return( 0 );
        } // if
    #endif
    // Start by erasing chip
    
    flashWriteEnable( );
   2:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1103
    flashChipErase( );
   6:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1104
    ulCapacity = flashReadID( );
   a:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1111
    ucAttribs = 0;
    // If ID is for FLASH, use the following settings:
        ucAttribs = READ|WRITE|MEDIAFLASH;
        uiSectorSize = 0x1000;
    // Flash ICs up to 32Mbit use 1 4KB sector for FAT_A and 1 for FAT_B
    if( ulCapacity == SST_ID_32M ){
   e:	284a      	cmp	r0, #74	; 0x4a
  10:	d009      	beq.n	26 <fileFormat+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1114
        uiSectors = 1024;
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
  12:	2841      	cmp	r0, #65	; 0x41
  14:	d00b      	beq.n	2e <fileFormat+0x2e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1117
        uiSectors = 512;
        uiSecPerFAT = 2;
    } else if( ulCapacity == SST_ID_8M ){
  16:	288e      	cmp	r0, #142	; 0x8e
  18:	d00d      	beq.n	36 <fileFormat+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1105
    // Start by erasing chip
    
    flashWriteEnable( );
    flashChipErase( );
    ulCapacity = flashReadID( );
    uiSecPerFAT = 1;
  1a:	2401      	movs	r4, #1
  1c:	288d      	cmp	r0, #141	; 0x8d
  1e:	bf0c      	ite	eq
  20:	2580      	moveq	r5, #128	; 0x80
  22:	2500      	movne	r5, #0
  24:	e00a      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1113
        ucAttribs = READ|WRITE|MEDIAFLASH;
        uiSectorSize = 0x1000;
    // Flash ICs up to 32Mbit use 1 4KB sector for FAT_A and 1 for FAT_B
    if( ulCapacity == SST_ID_32M ){
        uiSectors = 1024;
        uiSecPerFAT = 4;
  26:	2404      	movs	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1112
    // If ID is for FLASH, use the following settings:
        ucAttribs = READ|WRITE|MEDIAFLASH;
        uiSectorSize = 0x1000;
    // Flash ICs up to 32Mbit use 1 4KB sector for FAT_A and 1 for FAT_B
    if( ulCapacity == SST_ID_32M ){
        uiSectors = 1024;
  28:	f44f 6580 	mov.w	r5, #1024	; 0x400
  2c:	e006      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1116
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
        uiSectors = 512;
        uiSecPerFAT = 2;
  2e:	2402      	movs	r4, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1115
    // Flash ICs up to 32Mbit use 1 4KB sector for FAT_A and 1 for FAT_B
    if( ulCapacity == SST_ID_32M ){
        uiSectors = 1024;
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
        uiSectors = 512;
  30:	f44f 7500 	mov.w	r5, #512	; 0x200
  34:	e002      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1105
    // Start by erasing chip
    
    flashWriteEnable( );
    flashChipErase( );
    ulCapacity = flashReadID( );
    uiSecPerFAT = 1;
  36:	2401      	movs	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1118
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
        uiSectors = 512;
        uiSecPerFAT = 2;
    } else if( ulCapacity == SST_ID_8M ){
        uiSectors = 256;
  38:	f44f 7580 	mov.w	r5, #256	; 0x100
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1130
        if( ucName[ 0 ] ){ // As long as first char of name field is non-null, name is optional
            flashWriteString( PYGMY_FILE_VOLUME_FIELD_NAME, TRUE, ucName );
        } // if
    #endif
    flashWriteByte( PYGMY_FILE_VOLUME_FIELD_ATTRIB, ucAttribs );
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORS, uiSecPerFAT * 252 ); 
  3c:	27fc      	movs	r7, #252	; 0xfc
  3e:	4367      	muls	r7, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1129
        // Next write optional volume name, if needed
        if( ucName[ 0 ] ){ // As long as first char of name field is non-null, name is optional
            flashWriteString( PYGMY_FILE_VOLUME_FIELD_NAME, TRUE, ucName );
        } // if
    #endif
    flashWriteByte( PYGMY_FILE_VOLUME_FIELD_ATTRIB, ucAttribs );
  40:	200f      	movs	r0, #15
  42:	210b      	movs	r1, #11
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1130
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORS, uiSecPerFAT * 252 ); 
  44:	b2be      	uxth	r6, r7
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1129
        // Next write optional volume name, if needed
        if( ucName[ 0 ] ){ // As long as first char of name field is non-null, name is optional
            flashWriteString( PYGMY_FILE_VOLUME_FIELD_NAME, TRUE, ucName );
        } // if
    #endif
    flashWriteByte( PYGMY_FILE_VOLUME_FIELD_ATTRIB, ucAttribs );
  46:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1130
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORS, uiSecPerFAT * 252 ); 
  4a:	2010      	movs	r0, #16
  4c:	4631      	mov	r1, r6
  4e:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1131
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORSIZE, uiSectorSize ); // hard coded to SST family sectors size
  52:	2012      	movs	r0, #18
  54:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  58:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1132
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_MAXFILES, uiSecPerFAT * 252 );
  5c:	2014      	movs	r0, #20
  5e:	4639      	mov	r1, r7
  60:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1134
    // Media size is defined as total sectors minus FILE and FAT sectors * SECTOR SIZE
    ulCapacity = ( uiSectors - ( uiSecPerFAT * 2 ) ) * uiSectorSize;
  64:	0063      	lsls	r3, r4, #1
  66:	1aed      	subs	r5, r5, r3
  68:	032d      	lsls	r5, r5, #12
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1135
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_MEDIASIZE, ulCapacity );
  6a:	2018      	movs	r0, #24
  6c:	4629      	mov	r1, r5
  6e:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1136
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_ENTRIESPERFAT, uiSecPerFAT * 252 ); // 252
  72:	201c      	movs	r0, #28
  74:	4631      	mov	r1, r6
  76:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1137
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FILESSECTORS, uiSecPerFAT );
  7a:	201e      	movs	r0, #30
  7c:	4621      	mov	r1, r4
  7e:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1138
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FATSECTORS, 1 );
  82:	2020      	movs	r0, #32
  84:	2101      	movs	r1, #1
  86:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1139
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FIRSTFILESECTOR, ( ( ( uiSecPerFAT * 2 ) + 2 )* uiSectorSize ) );
  8a:	1c61      	adds	r1, r4, #1
  8c:	2022      	movs	r0, #34	; 0x22
  8e:	0349      	lsls	r1, r1, #13
  90:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1140
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_A, PYGMY_FILE_FILES_A );
  94:	2026      	movs	r0, #38	; 0x26
  96:	2100      	movs	r1, #0
  98:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1141
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_B, uiSecPerFAT * uiSectorSize );
  9c:	0321      	lsls	r1, r4, #12
  9e:	202a      	movs	r0, #42	; 0x2a
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1142
    ulFATBase = ( uiSecPerFAT * 2 ) * uiSectorSize;
  a0:	0364      	lsls	r4, r4, #13
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1141
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_ENTRIESPERFAT, uiSecPerFAT * 252 ); // 252
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FILESSECTORS, uiSecPerFAT );
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FATSECTORS, 1 );
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FIRSTFILESECTOR, ( ( ( uiSecPerFAT * 2 ) + 2 )* uiSectorSize ) );
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_A, PYGMY_FILE_FILES_A );
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_B, uiSecPerFAT * uiSectorSize );
  a2:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1143
    ulFATBase = ( uiSecPerFAT * 2 ) * uiSectorSize;
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FAT_A, ulFATBase );
  a6:	202e      	movs	r0, #46	; 0x2e
  a8:	4621      	mov	r1, r4
  aa:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1144
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FAT_B, ulFATBase + uiSectorSize );
  ae:	2032      	movs	r0, #50	; 0x32
  b0:	f504 5180 	add.w	r1, r4, #4096	; 0x1000
  b4:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1145
    flashWriteByte( ( ulFATBase - uiSectorSize ) - 1, 0x00 ); // Mark FAT_A as active
  b8:	f5a4 5080 	sub.w	r0, r4, #4096	; 0x1000
  bc:	3801      	subs	r0, #1
  be:	2100      	movs	r1, #0
  c0:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1147
    
    fileMountRoot();
  c4:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1150
    
    return( ulCapacity );
}       
  c8:	4628      	mov	r0, r5
  ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileMountRoot:

00000000 <fileMountRoot>:
fileMountRoot():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:969
    return( ucBuffer[ ucIndex++ ] );
}
#endif

u8 fileMountRoot( void )//Volume( void )//PYGMYFILEVOLUME *pygmyFileVolume )
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:972
    u32 ulTableOffset;
    
    flashWriteEnable( );
   2:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:975
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    //pygmyRootVolume.Files_A = PYGMY_FILE_FILES_A;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
   6:	202a      	movs	r0, #42	; 0x2a
   8:	f7ff fffe 	bl	0 <fileMountRoot>
   c:	4d27      	ldr	r5, [pc, #156]	; (ac <fileMountRoot+0xac>)
   e:	6328      	str	r0, [r5, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:977
    
    ulTableOffset = fileGetActiveFiles();
  10:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:978
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
  14:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:977
    flashWriteEnable( );
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    //pygmyRootVolume.Files_A = PYGMY_FILE_FILES_A;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
    
    ulTableOffset = fileGetActiveFiles();
  18:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:978
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
  1a:	d108      	bne.n	2e <fileMountRoot+0x2e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:979
        fileFormat( "" );
  1c:	4824      	ldr	r0, [pc, #144]	; (b0 <fileMountRoot+0xb0>)
  1e:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:980
        ulTableOffset = fileGetActiveFiles();
  22:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:981
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
  26:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:980
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
    
    ulTableOffset = fileGetActiveFiles();
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
        fileFormat( "" );
        ulTableOffset = fileGetActiveFiles();
  2a:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:981
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
  2c:	d03b      	beq.n	a6 <fileMountRoot+0xa6>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:988
        } // if
    } // if
    
    // Add code to copy volume name to structure here, if needed
     
    pygmyRootVolume.Attributes          = flashReadByte( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_ATTRIB );
  2e:	f104 000f 	add.w	r0, r4, #15
  32:	f7ff fffe 	bl	0 <fileMountRoot>
  36:	7368      	strb	r0, [r5, #13]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:989
    pygmyRootVolume.Sectors             = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_SECTORS );
  38:	f104 0010 	add.w	r0, r4, #16
  3c:	f7ff fffe 	bl	0 <fileMountRoot>
  40:	8328      	strh	r0, [r5, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:990
    pygmyRootVolume.SectorSize          = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_SECTORSIZE );
  42:	f104 0012 	add.w	r0, r4, #18
  46:	f7ff fffe 	bl	0 <fileMountRoot>
  4a:	8368      	strh	r0, [r5, #26]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:991
    pygmyRootVolume.MaxFiles            = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_MAXFILES );
  4c:	f104 0014 	add.w	r0, r4, #20
  50:	f7ff fffe 	bl	0 <fileMountRoot>
  54:	61e8      	str	r0, [r5, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:992
    pygmyRootVolume.MediaSize           = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_MEDIASIZE );
  56:	f104 0018 	add.w	r0, r4, #24
  5a:	f7ff fffe 	bl	0 <fileMountRoot>
  5e:	6228      	str	r0, [r5, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:993
    pygmyRootVolume.EntriesPerFAT       = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_ENTRIESPERFAT );
  60:	f104 001c 	add.w	r0, r4, #28
  64:	f7ff fffe 	bl	0 <fileMountRoot>
  68:	84a8      	strh	r0, [r5, #36]	; 0x24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:994
    pygmyRootVolume.FilesSectors        = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FILESSECTORS );
  6a:	f104 001e 	add.w	r0, r4, #30
  6e:	f7ff fffe 	bl	0 <fileMountRoot>
  72:	84e8      	strh	r0, [r5, #38]	; 0x26
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:995
    pygmyRootVolume.FATSectors          = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FATSECTORS );
  74:	f104 0020 	add.w	r0, r4, #32
  78:	f7ff fffe 	bl	0 <fileMountRoot>
  7c:	8528      	strh	r0, [r5, #40]	; 0x28
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:996
    pygmyRootVolume.FirstFileSector     = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FIRSTFILESECTOR );
  7e:	f104 0022 	add.w	r0, r4, #34	; 0x22
  82:	f7ff fffe 	bl	0 <fileMountRoot>
  86:	62e8      	str	r0, [r5, #44]	; 0x2c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:997
    pygmyRootVolume.FAT_A               = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_A );
  88:	f104 002e 	add.w	r0, r4, #46	; 0x2e
  8c:	f7ff fffe 	bl	0 <fileMountRoot>
  90:	6368      	str	r0, [r5, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:998
    pygmyRootVolume.FAT_B               = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_B );
  92:	f104 0032 	add.w	r0, r4, #50	; 0x32
  96:	f7ff fffe 	bl	0 <fileMountRoot>
  9a:	63a8      	str	r0, [r5, #56]	; 0x38
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:999
    pygmyRootVolume.ActiveFAT           = fileGetActiveFAT();
  9c:	f7ff fffe 	bl	0 <fileMountRoot>
  a0:	6168      	str	r0, [r5, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1001

    return( 1 );
  a2:	2001      	movs	r0, #1
  a4:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:982
    ulTableOffset = fileGetActiveFiles();
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
        fileFormat( "" );
        ulTableOffset = fileGetActiveFiles();
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
            return( 0 );
  a6:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1002
    pygmyRootVolume.FAT_A               = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_A );
    pygmyRootVolume.FAT_B               = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_B );
    pygmyRootVolume.ActiveFAT           = fileGetActiveFAT();

    return( 1 );
}
  a8:	bd38      	pop	{r3, r4, r5, pc}
  aa:	bf00      	nop
	...

Disassembly of section .text.fileDelete:

00000000 <fileDelete>:
fileDelete():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:176

    return( 1 );
}

u8 fileDelete( u8 *ucName )
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:179
    u16 uiFileEntry;

    fileMountRoot( );
   4:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:180
    uiFileEntry = fileSeekName( ucName );
   8:	4620      	mov	r0, r4
   a:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:181
    if( !uiFileEntry || !( pygmyRootVolume.Attributes & WRITE ) ){
   e:	4604      	mov	r4, r0
  10:	b180      	cbz	r0, 34 <fileDelete+0x34>
  12:	4b09      	ldr	r3, [pc, #36]	; (38 <fileDelete+0x38>)
  14:	7b58      	ldrb	r0, [r3, #13]
  16:	f010 0002 	ands.w	r0, r0, #2
  1a:	d00b      	beq.n	34 <fileDelete+0x34>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:184
        return( 0 );
    } // if
    flashWriteByte( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), 0 ); // First byte 0 marks as deleted
  1c:	6918      	ldr	r0, [r3, #16]
  1e:	2100      	movs	r1, #0
  20:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  24:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:186
    // Next find all FAT entries with the ID uiFleEntry and Delete
    fileDeleteFATEntry( uiFileEntry, 0 ); // 0 erases all FAT Entries with ID uiFileEntry
  28:	4620      	mov	r0, r4
  2a:	2100      	movs	r1, #0
  2c:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:188
    
    return( 1 );
  30:	2001      	movs	r0, #1
  32:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:189
}
  34:	bd10      	pop	{r4, pc}
  36:	bf00      	nop
  38:	00000000 	.word	0x00000000

Disassembly of section .text.fileOpen:

00000000 <fileOpen>:
fileOpen():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:84

PYGMYFILEVOLUME pygmyRootVolume;
PYGMYSPIPORT pygmyFlashSPI;

u8 fileOpen( PYGMYFILE *pygmyFile, u8 *ucName, u8 ucAttrib )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:88
    u32 ulFileEntry;
    u32 ulEntryAddress, ulNameMatch;

    if( !(ucAttrib & (WRITE|READ) ) ){
   6:	f012 0003 	ands.w	r0, r2, #3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:84

PYGMYFILEVOLUME pygmyRootVolume;
PYGMYSPIPORT pygmyFlashSPI;

u8 fileOpen( PYGMYFILE *pygmyFile, u8 *ucName, u8 ucAttrib )
{
   a:	4688      	mov	r8, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:88
    u32 ulFileEntry;
    u32 ulEntryAddress, ulNameMatch;

    if( !(ucAttrib & (WRITE|READ) ) ){
   c:	d076      	beq.n	fc <fileOpen+0xfc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:92
        return( 0 );
    } // if
    
    if( ucAttrib & APPEND ){
   e:	f012 0f04 	tst.w	r2, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:94
        // Append must always have write 
        ucAttrib |= WRITE; 
  12:	bf18      	it	ne
  14:	f042 0202 	orrne.w	r2, r2, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:96
    } // if
    pygmyFile->Attributes = ucAttrib;
  18:	7422      	strb	r2, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:103
    //    pygmyFile->Attributes = ucAttrib;
    //} else{ 
    //    pygmyFile->Attributes = READ;
    //} // else
    
    fileMountRoot( );
  1a:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:105
    
    if( !fileIsValidName( ucName ) ){
  1e:	4640      	mov	r0, r8
  20:	f7ff fffe 	bl	0 <fileOpen>
  24:	2800      	cmp	r0, #0
  26:	d069      	beq.n	fc <fileOpen+0xfc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:109
       return( 0 );
    } // if
    
    ulNameMatch = fileSeekName( ucName );
  28:	4640      	mov	r0, r8
  2a:	f7ff fffe 	bl	0 <fileOpen>
  2e:	4606      	mov	r6, r0
  30:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:110
    if( !ulNameMatch && ( pygmyFile->Attributes & READ ) ){
  32:	b918      	cbnz	r0, 3c <fileOpen+0x3c>
  34:	7c23      	ldrb	r3, [r4, #16]
  36:	f013 0f01 	tst.w	r3, #1
  3a:	d15d      	bne.n	f8 <fileOpen+0xf8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:113
        return( 0 );
    } // if
    copyString( ucName, pygmyFile->Name );
  3c:	f104 0718 	add.w	r7, r4, #24
  40:	4640      	mov	r0, r8
  42:	4639      	mov	r1, r7
  44:	f7ff fffe 	bl	0 <copyString>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:114
    pygmyFile->Resource = NULL;
  48:	2300      	movs	r3, #0
  4a:	6163      	str	r3, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:115
    if( ( pygmyFile->Attributes & WRITE ) && 
  4c:	7c23      	ldrb	r3, [r4, #16]
  4e:	f013 0f02 	tst.w	r3, #2
  52:	d029      	beq.n	a8 <fileOpen+0xa8>
  54:	b12e      	cbz	r6, 62 <fileOpen+0x62>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:116
        !( ulNameMatch && ( pygmyFile->Attributes & APPEND ) ) ){
  56:	f013 0f04 	tst.w	r3, #4
  5a:	d125      	bne.n	a8 <fileOpen+0xa8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:118
        if ( ulNameMatch ){ // File exists and we are in write mode, delete
            fileDelete( pygmyFile->Name ); // If file exists and not in append mode, file must be deleted
  5c:	4638      	mov	r0, r7
  5e:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:121
            ulNameMatch = 0;
        } // if    
        ulFileEntry = fileGetFreeFileEntry( );
  62:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:123
        ulNameMatch = ulFileEntry;
        if( !ulFileEntry ){
  66:	4605      	mov	r5, r0
  68:	2800      	cmp	r0, #0
  6a:	d047      	beq.n	fc <fileOpen+0xfc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:127
            return( 0 ); // No Sectors left to allocate     
        } // if
        //[ FILENAME 13B ][ ATTRIB 1B ][ ID_File 2B ] ( 16B total )
        ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  6c:	4b24      	ldr	r3, [pc, #144]	; (100 <fileOpen+0x100>)
  6e:	691e      	ldr	r6, [r3, #16]
  70:	eb06 1600 	add.w	r6, r6, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:129
        
        flashWriteBuffer( ulFileEntry, len( pygmyFile->Name )+1, pygmyFile->Name );
  74:	4638      	mov	r0, r7
  76:	f7ff fffe 	bl	0 <len>
  7a:	1c41      	adds	r1, r0, #1
  7c:	463a      	mov	r2, r7
  7e:	4630      	mov	r0, r6
  80:	b289      	uxth	r1, r1
  82:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:130
        flashWriteByte( ulFileEntry+13, (WRITE|READ) );
  86:	f106 000d 	add.w	r0, r6, #13
  8a:	2103      	movs	r1, #3
  8c:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:132
        pygmyFile->ID_File = ulNameMatch;
        pygmyFile->ID_Sector = 1;
  90:	2201      	movs	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:133
        flashWriteWord( ulFileEntry+14, pygmyFile->ID_File );
  92:	f106 000e 	add.w	r0, r6, #14
  96:	4629      	mov	r1, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:131
        //[ FILENAME 13B ][ ATTRIB 1B ][ ID_File 2B ] ( 16B total )
        ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
        
        flashWriteBuffer( ulFileEntry, len( pygmyFile->Name )+1, pygmyFile->Name );
        flashWriteByte( ulFileEntry+13, (WRITE|READ) );
        pygmyFile->ID_File = ulNameMatch;
  98:	81e5      	strh	r5, [r4, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:132
        pygmyFile->ID_Sector = 1;
  9a:	81a2      	strh	r2, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:133
        flashWriteWord( ulFileEntry+14, pygmyFile->ID_File );
  9c:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:134
        fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector );    
  a0:	89e0      	ldrh	r0, [r4, #14]
  a2:	89a1      	ldrh	r1, [r4, #12]
  a4:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:137
    } // if 
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
  a8:	4e15      	ldr	r6, [pc, #84]	; (100 <fileOpen+0x100>)
  aa:	6930      	ldr	r0, [r6, #16]
  ac:	300e      	adds	r0, #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:139
    
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
  ae:	eb00 1005 	add.w	r0, r0, r5, lsl #4
  b2:	f7ff fffe 	bl	0 <fileOpen>
  b6:	81e0      	strh	r0, [r4, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:140
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
  b8:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:142
    pygmyFile->Sector = (u16)((u32)pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize);
    pygmyFile->ID_Sector = 1;
  bc:	2201      	movs	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:141
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
    
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
    pygmyFile->Sector = (u16)((u32)pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize);
  be:	8b73      	ldrh	r3, [r6, #26]
  c0:	6af5      	ldr	r5, [r6, #44]	; 0x2c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:142
    pygmyFile->ID_Sector = 1;
  c2:	81a2      	strh	r2, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:143
    pygmyFile->Index = 0;
  c4:	2200      	movs	r2, #0
  c6:	60a2      	str	r2, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:144
    if( pygmyFile->Attributes & APPEND ){
  c8:	7c22      	ldrb	r2, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:141
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
    
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
    pygmyFile->Sector = (u16)((u32)pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize);
  ca:	fbb5 f5f3 	udiv	r5, r5, r3
  ce:	b2ad      	uxth	r5, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:144
    pygmyFile->ID_Sector = 1;
    pygmyFile->Index = 0;
    if( pygmyFile->Attributes & APPEND ){
  d0:	f012 0f04 	tst.w	r2, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:140
    } // if 
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
    
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
  d4:	6060      	str	r0, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:141
    pygmyFile->Sector = (u16)((u32)pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize);
  d6:	6025      	str	r5, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:144
    pygmyFile->ID_Sector = 1;
    pygmyFile->Index = 0;
    if( pygmyFile->Attributes & APPEND ){
  d8:	d005      	beq.n	e6 <fileOpen+0xe6>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:145
        pygmyFile->Index = pygmyFile->Length;
  da:	60a0      	str	r0, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:146
        pygmyFile->ID_Sector += ( ( pygmyFile->Length + 128 ) / pygmyRootVolume.SectorSize );
  dc:	3080      	adds	r0, #128	; 0x80
  de:	fbb0 f3f3 	udiv	r3, r0, r3
  e2:	3301      	adds	r3, #1
  e4:	81a3      	strh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:148
    } // if
    pygmyFile->Sector += fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector );
  e6:	89e0      	ldrh	r0, [r4, #14]
  e8:	89a1      	ldrh	r1, [r4, #12]
  ea:	f7ff fffe 	bl	0 <fileOpen>
  ee:	1940      	adds	r0, r0, r5
  f0:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:150
    
    return( 1 );
  f2:	2001      	movs	r0, #1
  f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:151
}
  fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 100:	00000000 	.word	0x00000000

Disassembly of section .text.fileCopy:

00000000 <fileCopy>:
fileCopy():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:292

    return( 1 );
}

u8 fileCopy( u8 *ucCurrentName, u8 *ucName )
{
   0:	b510      	push	{r4, lr}
   2:	4603      	mov	r3, r0
   4:	b094      	sub	sp, #80	; 0x50
   6:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:298
    PYGMYFILE pygmyFileTo, pygmyFileFrom;    
    u8 ucByte;

    //if( fileIsValidName( ucCurrentName ) && fileIsValidName( ucName ) ){  
    //if( fileIsValidName( ucName ) ){
        if( !fileOpen( &pygmyFileFrom, ucCurrentName, READ ) || 
   8:	4668      	mov	r0, sp
   a:	4619      	mov	r1, r3
   c:	2201      	movs	r2, #1
   e:	f7ff fffe 	bl	0 <fileCopy>
  12:	b1c8      	cbz	r0, 48 <fileCopy+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:299
            !fileOpen( &pygmyFileTo, ucName, WRITE ) ){
  14:	a80a      	add	r0, sp, #40	; 0x28
  16:	4621      	mov	r1, r4
  18:	2202      	movs	r2, #2
  1a:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:298
    PYGMYFILE pygmyFileTo, pygmyFileFrom;    
    u8 ucByte;

    //if( fileIsValidName( ucCurrentName ) && fileIsValidName( ucName ) ){  
    //if( fileIsValidName( ucName ) ){
        if( !fileOpen( &pygmyFileFrom, ucCurrentName, READ ) || 
  1e:	b958      	cbnz	r0, 38 <fileCopy+0x38>
  20:	e012      	b.n	48 <fileCopy+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:303
            !fileOpen( &pygmyFileTo, ucName, WRITE ) ){
            return( 0 );
        } // if
        for( ; !(pygmyFileFrom.Attributes & EOF ); ){
            ucByte = fileGetChar( &pygmyFileFrom );
  22:	4668      	mov	r0, sp
  24:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:304
            if( !(pygmyFileFrom.Attributes & EOF ) ){
  28:	f99d 3010 	ldrsb.w	r3, [sp, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:303
        if( !fileOpen( &pygmyFileFrom, ucCurrentName, READ ) || 
            !fileOpen( &pygmyFileTo, ucName, WRITE ) ){
            return( 0 );
        } // if
        for( ; !(pygmyFileFrom.Attributes & EOF ); ){
            ucByte = fileGetChar( &pygmyFileFrom );
  2c:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:304
            if( !(pygmyFileFrom.Attributes & EOF ) ){
  2e:	2b00      	cmp	r3, #0
  30:	db02      	blt.n	38 <fileCopy+0x38>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:305
                filePutChar( &pygmyFileTo, ucByte );
  32:	a80a      	add	r0, sp, #40	; 0x28
  34:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:302
    //if( fileIsValidName( ucName ) ){
        if( !fileOpen( &pygmyFileFrom, ucCurrentName, READ ) || 
            !fileOpen( &pygmyFileTo, ucName, WRITE ) ){
            return( 0 );
        } // if
        for( ; !(pygmyFileFrom.Attributes & EOF ); ){
  38:	f99d 3010 	ldrsb.w	r3, [sp, #16]
  3c:	2b00      	cmp	r3, #0
  3e:	daf0      	bge.n	22 <fileCopy+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:308
            ucByte = fileGetChar( &pygmyFileFrom );
            if( !(pygmyFileFrom.Attributes & EOF ) ){
                filePutChar( &pygmyFileTo, ucByte );
            } // if
        } // for
        fileClose( &pygmyFileTo );
  40:	a80a      	add	r0, sp, #40	; 0x28
  42:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:309
        return( 1 );
  46:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:313
    //} // if

    return( 0 );
}
  48:	b014      	add	sp, #80	; 0x50
  4a:	bd10      	pop	{r4, pc}
