
C:\Users\MightyDubster\Documents\Projects\pygmyos.projects\boot\pygmy_file.o:     file format elf32-littlearm
C:\Users\MightyDubster\Documents\Projects\pygmyos.projects\boot\pygmy_file.o


Disassembly of section .text.fileOpenResource:

00000000 <fileOpenResource>:
fileOpenResource():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:150
    u32 ulLen; 

    ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
   0:	78ca      	ldrb	r2, [r1, #3]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:144

    return( 1 );
}

u8 fileOpenResource( PYGMYFILE *pygmyFile, u8 *ucResource )
{
   2:	4603      	mov	r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:147
    u32 ulLen; 

    ulLen = (u32)((u8)*(ucResource)) << 24;
   4:	7808      	ldrb	r0, [r1, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:148
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
   6:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
   a:	784a      	ldrb	r2, [r1, #1]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:149
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
   c:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
  10:	788a      	ldrb	r2, [r1, #2]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:151
    ulLen |= (u32)((u8)*(ucResource+3));
    pygmyFile->Resource = (u8*)(ucResource+4);
  12:	3104      	adds	r1, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:150
    u32 ulLen; 

    ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
  14:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:153
    pygmyFile->Resource = (u8*)(ucResource+4);
    pygmyFile->Name[ 0 ] = '\0';
    pygmyFile->Length = ulLen;
  18:	6058      	str	r0, [r3, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:152
    ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
    pygmyFile->Resource = (u8*)(ucResource+4);
    pygmyFile->Name[ 0 ] = '\0';
  1a:	2200      	movs	r2, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:155
    pygmyFile->Length = ulLen;
    pygmyFile->Index = 0;
    pygmyFile->Attributes = READ;
  1c:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:151

    ulLen = (u32)((u8)*(ucResource)) << 24;
    ulLen |= (u32)((u8)*(ucResource+1)) << 16;
    ulLen |= (u32)((u8)*(ucResource+2)) << 8;
    ulLen |= (u32)((u8)*(ucResource+3));
    pygmyFile->Resource = (u8*)(ucResource+4);
  1e:	6159      	str	r1, [r3, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:152
    pygmyFile->Name[ 0 ] = '\0';
  20:	761a      	strb	r2, [r3, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:154
    pygmyFile->Length = ulLen;
    pygmyFile->Index = 0;
  22:	609a      	str	r2, [r3, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:155
    pygmyFile->Attributes = READ;
  24:	7418      	strb	r0, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:158

    return( 1 );
}
  26:	4770      	bx	lr

Disassembly of section .text.fileGetPosition:

00000000 <fileGetPosition>:
fileGetPosition():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:163

u32 fileGetPosition( PYGMYFILE *pygmyFile )
{
    return( pygmyFile->Index );
}
   0:	6880      	ldr	r0, [r0, #8]
   2:	4770      	bx	lr

Disassembly of section .text.fileSetPosition:

00000000 <fileSetPosition>:
fileSetPosition():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:167

u8 fileSetPosition( PYGMYFILE *pygmyFile, u8 ucOrigin, s32 lIndex )
{
    if( ucOrigin == START ){ 
   0:	2901      	cmp	r1, #1
   2:	d107      	bne.n	14 <fileSetPosition+0x14>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:168
        if( lIndex >= 0 && lIndex < pygmyFile->Length ){
   4:	2a00      	cmp	r2, #0
   6:	db16      	blt.n	36 <fileSetPosition+0x36>
   8:	6843      	ldr	r3, [r0, #4]
   a:	429a      	cmp	r2, r3
   c:	d213      	bcs.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:169
            pygmyFile->Index = lIndex;
   e:	6082      	str	r2, [r0, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:170
            return( 1 );
  10:	4608      	mov	r0, r1
  12:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:172
        } // if
    } else if( ucOrigin == CURRENT ){
  14:	2902      	cmp	r1, #2
  16:	d106      	bne.n	26 <fileSetPosition+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:173
        if( ( pygmyFile->Index + lIndex ) >= 0 && ( pygmyFile->Index + lIndex ) < pygmyFile->Length ){
  18:	6883      	ldr	r3, [r0, #8]
  1a:	18d2      	adds	r2, r2, r3
  1c:	6843      	ldr	r3, [r0, #4]
  1e:	429a      	cmp	r2, r3
  20:	d209      	bcs.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:174
            pygmyFile->Index += lIndex;
  22:	6082      	str	r2, [r0, #8]
  24:	e005      	b.n	32 <fileSetPosition+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:177
            return( 1 );
        } // if
    } else if( ucOrigin == END ){
  26:	2904      	cmp	r1, #4
  28:	d105      	bne.n	36 <fileSetPosition+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:178
        if( ( pygmyFile->Length + lIndex ) >= 0 && ( pygmyFile->Length + lIndex ) < pygmyFile->Length ){
  2a:	6843      	ldr	r3, [r0, #4]
  2c:	18d2      	adds	r2, r2, r3
  2e:	d304      	bcc.n	3a <fileSetPosition+0x3a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:179
                pygmyFile->Length += lIndex;
  30:	6042      	str	r2, [r0, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:180
            return( 1 );
  32:	2001      	movs	r0, #1
  34:	4770      	bx	lr
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:184
        } // if
    } // else
    
    return( 0 );
  36:	2000      	movs	r0, #0
  38:	4770      	bx	lr
  3a:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:185
}
  3c:	4770      	bx	lr

Disassembly of section .text.fileIsEOF:

00000000 <fileIsEOF>:
fileIsEOF():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:189

u8 fileIsEOF( PYGMYFILE *pygmyFile )
{
    return( pygmyFile->Attributes & EOF );
   0:	7c00      	ldrb	r0, [r0, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:190
}
   2:	f000 0080 	and.w	r0, r0, #128	; 0x80
   6:	4770      	bx	lr

Disassembly of section .text.fileIsValidName:

00000000 <fileIsValidName>:
fileIsValidName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:225

    return( ulFreeSpace );
}

u8 fileIsValidName( u8 *ucName )
{
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
   4:	240d      	movs	r4, #13
   6:	e017      	b.n	38 <fileIsValidName+0x38>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:231
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
   8:	2c01      	cmp	r4, #1
   a:	d01b      	beq.n	44 <fileIsValidName+0x44>
   c:	f7ff fffe 	bl	0 <isAlpha>
  10:	b978      	cbnz	r0, 32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:232
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
  12:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  16:	f1a3 0223 	sub.w	r2, r3, #35	; 0x23
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:231
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
  1a:	b2d2      	uxtb	r2, r2
  1c:	2a03      	cmp	r2, #3
  1e:	d908      	bls.n	32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:232
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
  20:	f1a3 022d 	sub.w	r2, r3, #45	; 0x2d
  24:	b2d2      	uxtb	r2, r2
  26:	2a0c      	cmp	r2, #12
  28:	d903      	bls.n	32 <fileIsValidName+0x32>
  2a:	2b5f      	cmp	r3, #95	; 0x5f
  2c:	d001      	beq.n	32 <fileIsValidName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:233
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
  2e:	2b7e      	cmp	r3, #126	; 0x7e
  30:	d10b      	bne.n	4a <fileIsValidName+0x4a>
  32:	3c01      	subs	r4, #1
  34:	b2e4      	uxtb	r4, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:230
{
    u8 i;   

    // alpha upper and lower allowed, 35-38 allowed, 45-57 allowed ( numeric plus - and . )
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
  36:	b13c      	cbz	r4, 48 <fileIsValidName+0x48>
  38:	f815 0b01 	ldrb.w	r0, [r5], #1
  3c:	2800      	cmp	r0, #0
  3e:	d1e3      	bne.n	8 <fileIsValidName+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:238
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  40:	3001      	adds	r0, #1
  42:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:234
    // 95 ( _ ) and 126 ( ~ ) also allowed 
    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN+1 && ucName[ i ]; i++ ){    
        if( i == PYGMY_FILE_MAXFILENAMELEN || ( !isAlpha( ucName[ i ] ) && 
            !( ucName[ i ] > 34 && ucName[ i ] < 39 ) && !( ucName[ i ] > 44 && ucName[ i ] < 58 ) &&
            !(ucName[ i ] == 95 ) && !(ucName[ i ] == 126 ) ) ){
            return( 0 );
  44:	2000      	movs	r0, #0
  46:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:238
        } // if
    } // for

    return( 1 );
  48:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:239
}
  4a:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.fileGetMaxFiles:

00000000 <fileGetMaxFiles>:
fileGetMaxFiles():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:332
}
 
u16 fileGetMaxFiles( void )
{
    return( pygmyRootVolume.MaxFiles );
}
   0:	4b01      	ldr	r3, [pc, #4]	; (8 <fileGetMaxFiles+0x8>)
   2:	8c18      	ldrh	r0, [r3, #32]
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	00000000 	.word	0x00000000

Disassembly of section .text.spiWriteByte:

00000000 <spiWriteByte>:
spiWriteByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1051
void spiWriteByte( PYGMYSPIPORT *pymgyPort, u8 ucByte )
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
   0:	4b0a      	ldr	r3, [pc, #40]	; (2c <spiWriteByte+0x2c>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1053
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
   a:	2280      	movs	r2, #128	; 0x80
   c:	411a      	asrs	r2, r3
   e:	420a      	tst	r2, r1
  10:	4a06      	ldr	r2, [pc, #24]	; (2c <spiWriteByte+0x2c>)
  12:	f44f 4000 	mov.w	r0, #32768	; 0x8000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1054
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  16:	bf14      	ite	ne
  18:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1056
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1a:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1059
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
  1c:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1058
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  1e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1052
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
  22:	2b08      	cmp	r3, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1058
		if( ucByte & ( BIT7 >> i ) ){       // SRAM clocks MSB first, test each bit in sequence from 7 to 0 		
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{                             //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  24:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1059
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
  26:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1052
{
    // Clocks out 8 bits
	u16 i;
	
	FLASH_SCK_LOW;		                    // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 8; i++ ){ 		        // Clock out Write CMD
  28:	d1ef      	bne.n	a <spiWriteByte+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1061
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;			            // Low transition finishes clock sequence
    } // for
} 
  2a:	4770      	bx	lr
  2c:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiWriteWord:

00000000 <spiWriteWord>:
spiWriteWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1068
void spiWriteWord( PYGMYSPIPORT *pymgyPort,  u16 uiWord )
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
   0:	4b0a      	ldr	r3, [pc, #40]	; (2c <spiWriteWord+0x2c>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1070
	for( i = 0; i < 16; i++ ){ 			    // 
		if( uiWord & ( 0x8000 >> i ) ){	    // 
   a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
   e:	fa50 f203 	asrs.w	r2, r0, r3
  12:	420a      	tst	r2, r1
  14:	4a05      	ldr	r2, [pc, #20]	; (2c <spiWriteWord+0x2c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1071
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  16:	bf14      	ite	ne
  18:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1073
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1a:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1076
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  1c:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1075
		if( uiWord & ( 0x8000 >> i ) ){	    // 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  1e:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1069
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 16; i++ ){ 			    // 
  22:	2b10      	cmp	r3, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1075
		if( uiWord & ( 0x8000 >> i ) ){	    // 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  24:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1076
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  26:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1069
{
    // Clocks out 16 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 16; i++ ){ 			    // 
  28:	d1ef      	bne.n	a <spiWriteWord+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1078
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           // 
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
} 
  2a:	4770      	bx	lr
  2c:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiWriteLong:

00000000 <spiWriteLong>:
spiWriteLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1085
void spiWriteLong( PYGMYSPIPORT *pymgyPort, u32 ulLong )
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
   0:	4b0b      	ldr	r3, [pc, #44]	; (30 <spiWriteLong+0x30>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1087
	for( i = 0; i < 32; i++ ){ 			    // 
		if( ulLong & ( 0x80000000 >> i ) ){	// 
   a:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
   e:	40da      	lsrs	r2, r3
  10:	420a      	tst	r2, r1
  12:	4a07      	ldr	r2, [pc, #28]	; (30 <spiWriteLong+0x30>)
  14:	f44f 4000 	mov.w	r0, #32768	; 0x8000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1088
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
  18:	bf14      	ite	ne
  1a:	6110      	strne	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1090
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
  1c:	6150      	streq	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1093
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  1e:	3301      	adds	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1092
		if( ulLong & ( 0x80000000 >> i ) ){	// 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  20:	f44f 5000 	mov.w	r0, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1086
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 32; i++ ){ 			    // 
  24:	2b20      	cmp	r3, #32
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1092
		if( ulLong & ( 0x80000000 >> i ) ){	// 
            FLASH_MOSI_HIGH;                  // SlaveInMasterOut high if bit set
		} else{ 		                    //        
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
  26:	6110      	str	r0, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1093
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  28:	6150      	str	r0, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1086
{
    // Clocks out 32 bits
	u16 i;
	
	FLASH_SCK_LOW;					        // Clock starts low, low-high-low clocks data in or out
	for( i = 0; i < 32; i++ ){ 			    // 
  2a:	d1ee      	bne.n	a <spiWriteLong+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1095
            FLASH_MOSI_LOW;                   // SlaveInMasterOut low if bit clear
        } // else                           //     
		FLASH_SCK_HIGH;				        // clock must start low, transition high
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
} 
  2c:	4770      	bx	lr
  2e:	bf00      	nop
  30:	40010c00 	.word	0x40010c00

Disassembly of section .text.spiReadByte:

00000000 <spiReadByte>:
spiReadByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1103
{
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
   0:	4b0d      	ldr	r3, [pc, #52]	; (38 <spiReadByte+0x38>)
   2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
   6:	615a      	str	r2, [r3, #20]
   8:	2300      	movs	r3, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1104
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
   a:	4618      	mov	r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1105
		FLASH_SCK_HIGH;				        // clock must start low, transition high 			
   c:	4a0a      	ldr	r2, [pc, #40]	; (38 <spiReadByte+0x38>)
   e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  12:	6111      	str	r1, [r2, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1106
        if( FLASH_MISO_STATE ){               // Test port input for high and set bit in ucByte
  14:	6892      	ldr	r2, [r2, #8]
  16:	f412 4f80 	tst.w	r2, #16384	; 0x4000
  1a:	d004      	beq.n	26 <spiReadByte+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1107
			ucByte |= ( BIT7 >> i );        //
  1c:	2280      	movs	r2, #128	; 0x80
  1e:	411a      	asrs	r2, r3
  20:	ea42 0000 	orr.w	r0, r2, r0
  24:	b2c0      	uxtb	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1109
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  26:	4a04      	ldr	r2, [pc, #16]	; (38 <spiReadByte+0x38>)
  28:	3301      	adds	r3, #1
  2a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1104
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
  2e:	2b08      	cmp	r3, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1109
		FLASH_SCK_HIGH;				        // clock must start low, transition high 			
        if( FLASH_MISO_STATE ){               // Test port input for high and set bit in ucByte
			ucByte |= ( BIT7 >> i );        //
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
  30:	6151      	str	r1, [r2, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1104
    // Clocks in 8 bits
    u16 i;
	u8 ucByte;
	
    FLASH_SCK_LOW;                            // Clock starts low, low-high-low clocks data in or out
	for( i = 0, ucByte = 0; i < 8; i++ ){   // 
  32:	d1eb      	bne.n	c <spiReadByte+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1113
        } // if                             //
		FLASH_SCK_LOW;				        // Low transition finishes clock sequence
    } // for
	
	return( ucByte );
}
  34:	4770      	bx	lr
  36:	bf00      	nop
  38:	40010c00 	.word	0x40010c00

Disassembly of section .text.flashReadWord:

00000000 <flashReadWord>:
flashReadWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1118

#endif

u16 flashReadWord( u32 ulAddress )
{
   0:	4c0bb570 	.word	0x4c0bb570
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1122
    u16 uiWord;

    ulAddress |=  0x03000000;
    FLASH_CS_LOW;               // CS active low to enable chip  
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1121

u16 flashReadWord( u32 ulAddress )
{
    u16 uiWord;

    ulAddress |=  0x03000000;
   8:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1122
    FLASH_CS_LOW;               // CS active low to enable chip  
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1123
    spiWriteLong( &pygmyFlashSPI, ulAddress );
   e:	4809      	ldr	r0, [pc, #36]	; (34 <flashReadWord+0x34>)
  10:	f7ff fffe 	bl	0 <flashReadWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1124
	uiWord = (u16)spiReadByte( &pygmyFlashSPI ) << 8;
  14:	4807      	ldr	r0, [pc, #28]	; (20 <flashReadWord+0x20>)
  16:	f7ff fffe 	bl	0 <flashReadWord>
  1a:	0200      	lsls	r0, r0, #8
  1c:	b286      	uxth	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1125
    uiWord |= (u16)spiReadByte( &pygmyFlashSPI );
  1e:	4805      	ldr	r0, [pc, #20]	; (34 <flashReadWord+0x34>)
  20:	f7ff fffe 	bl	0 <flashReadWord>
  24:	ea46 0000 	orr.w	r0, r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1126
    FLASH_CS_HIGH;
  28:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1129
    
    return( uiWord );
}
  2a:	b280      	uxth	r0, r0
  2c:	bd70      	pop	{r4, r5, r6, pc}
  2e:	bf00      	nop
  30:	40010c00 	.word	0x40010c00
  34:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadLong:

00000000 <flashReadLong>:
flashReadLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1132

u32 flashReadLong( u32 ulAddress )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1136
    u32 ulLong;

    ulAddress |= 0x03000000;
    FLASH_CS_LOW; 
   4:	4c10      	ldr	r4, [pc, #64]	; (48 <flashReadLong+0x48>)
   6:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1135

u32 flashReadLong( u32 ulAddress )
{
    u32 ulLong;

    ulAddress |= 0x03000000;
   a:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1136
    FLASH_CS_LOW; 
   e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1137
    spiWriteLong( &pygmyFlashSPI, ulAddress );
  10:	480e      	ldr	r0, [pc, #56]	; (4c <flashReadLong+0x4c>)
  12:	f7ff fffe 	bl	0 <flashReadLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1138
    ulLong = (u32)spiReadByte( &pygmyFlashSPI ) << 24;
  16:	480d      	ldr	r0, [pc, #52]	; (38 <flashReadLong+0x38>)
  18:	f7ff fffe 	bl	0 <flashReadLong>
  1c:	0607      	lsls	r7, r0, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1139
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 16;
  1e:	480b      	ldr	r0, [pc, #44]	; (4c <flashReadLong+0x4c>)
  20:	f7ff fffe 	bl	0 <flashReadLong>
  24:	4680      	mov	r8, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1140
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 8;
  26:	4809      	ldr	r0, [pc, #36]	; (4c <flashReadLong+0x4c>)
  28:	f7ff fffe 	bl	0 <flashReadLong>
  2c:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1141
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI );
  2e:	4807      	ldr	r0, [pc, #28]	; (4c <flashReadLong+0x4c>)
  30:	f7ff fffe 	bl	0 <flashReadLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1139

    ulAddress |= 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    ulLong = (u32)spiReadByte( &pygmyFlashSPI ) << 24;
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 16;
  34:	ea47 4308 	orr.w	r3, r7, r8, lsl #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1140
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI ) << 8;
  38:	ea43 0000 	orr.w	r0, r3, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1142
    ulLong |= (u32)spiReadByte( &pygmyFlashSPI );
    FLASH_CS_HIGH;
  3c:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1145

    return( ulLong );
}
  3e:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
  42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  46:	bf00      	nop
  48:	40010c00 	.word	0x40010c00
  4c:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadByte:

00000000 <flashReadByte>:
flashReadByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1148

u8 flashReadByte( u32 ulAddress )
{
   0:	4c07b538 	.word	0x4c07b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1152
    u8 ucByte;
    
    ulAddress |= 0x03000000;
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1151

u8 flashReadByte( u32 ulAddress )
{
    u8 ucByte;
    
    ulAddress |= 0x03000000;
   8:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1152
    FLASH_CS_LOW;
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1153
    spiWriteLong( &pygmyFlashSPI, ulAddress );
   e:	4805      	ldr	r0, [pc, #20]	; (24 <flashReadByte+0x24>)
  10:	f7ff fffe 	bl	0 <flashReadByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1154
	ucByte = spiReadByte( &pygmyFlashSPI );
  14:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadByte+0x10>)
  16:	f7ff fffe 	bl	0 <flashReadByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1155
    FLASH_CS_HIGH;
  1a:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1158
	
	return( ucByte );    
}
  1c:	bd38      	pop	{r3, r4, r5, pc}
  1e:	bf00      	nop
  20:	40010c00 	.word	0x40010c00
  24:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetActiveFiles:

00000000 <fileGetActiveFiles>:
fileGetActiveFiles():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:562
        
    return( pygmyRootVolume.FAT_A );
}

u32 fileGetActiveFiles( void )
{
   0:	b510      	push	{r4, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:563
    if( flashReadByte( pygmyRootVolume.Files_A ) ){
   2:	4c08      	ldr	r4, [pc, #32]	; (24 <fileGetActiveFiles+0x24>)
   4:	6b60      	ldr	r0, [r4, #52]	; 0x34
   6:	f7ff fffe 	bl	0 <fileGetActiveFiles>
   a:	b108      	cbz	r0, 10 <fileGetActiveFiles+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:564
        return( pygmyRootVolume.Files_A );
   c:	6b60      	ldr	r0, [r4, #52]	; 0x34
   e:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:566
    } // if
    if( flashReadByte( pygmyRootVolume.Files_B ) ){
  10:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  12:	f7ff fffe 	bl	0 <fileGetActiveFiles>
  16:	b108      	cbz	r0, 1c <fileGetActiveFiles+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:567
        return( pygmyRootVolume.Files_B );
  18:	6ba0      	ldr	r0, [r4, #56]	; 0x38
  1a:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:570
    } // if
    
    return( 0xFFFFFFFF ); // both Files tables inactive means memory failure
  1c:	f04f 30ff 	mov.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:571
}
  20:	bd10      	pop	{r4, pc}
  22:	bf00      	nop
  24:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFAT:

00000000 <fileGetFAT>:
fileGetFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:451

    return( 0 );
}

u16 fileGetFAT( u16 uiID, u8 ucIndex )
{
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   4:	4604      	mov	r4, r0
   6:	4688      	mov	r8, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:455
    u8 ucAlloc, ucID_Sector;
    u16 i, uiTmpID;

    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
   8:	2500      	movs	r5, #0
   a:	e019      	b.n	40 <fileGetFAT+0x40>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:456
        ucAlloc = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
   c:	6970      	ldr	r0, [r6, #20]
   e:	00af      	lsls	r7, r5, #2
  10:	1838      	adds	r0, r7, r0
  12:	f7ff fffe 	bl	0 <fileGetFAT>
  16:	4682      	mov	sl, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:457
        ucID_Sector = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) + 1 );
  18:	6970      	ldr	r0, [r6, #20]
  1a:	3001      	adds	r0, #1
  1c:	19c0      	adds	r0, r0, r7
  1e:	f7ff fffe 	bl	0 <fileGetFAT>
  22:	4681      	mov	r9, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:458
        uiTmpID = (u16)flashReadWord( pygmyRootVolume.ActiveFAT + ( i * 4 ) + 2 );
  24:	6970      	ldr	r0, [r6, #20]
  26:	3002      	adds	r0, #2
  28:	19c0      	adds	r0, r0, r7
  2a:	f7ff fffe 	bl	0 <fileGetFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:459
        if(  ucAlloc == 0x7F && ucID_Sector == ucIndex && uiID == uiTmpID ){
  2e:	f1ba 0f7f 	cmp.w	sl, #127	; 0x7f
  32:	d103      	bne.n	3c <fileGetFAT+0x3c>
  34:	45c1      	cmp	r9, r8
  36:	d101      	bne.n	3c <fileGetFAT+0x3c>
  38:	4284      	cmp	r4, r0
  3a:	d007      	beq.n	4c <fileGetFAT+0x4c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:455
u16 fileGetFAT( u16 uiID, u8 ucIndex )
{
    u8 ucAlloc, ucID_Sector;
    u16 i, uiTmpID;

    for( i = 0; i < pygmyRootVolume.Sectors; i++ ){
  3c:	3501      	adds	r5, #1
  3e:	b2ad      	uxth	r5, r5
  40:	4e04      	ldr	r6, [pc, #16]	; (54 <fileGetFAT+0x54>)
  42:	69b3      	ldr	r3, [r6, #24]
  44:	429d      	cmp	r5, r3
  46:	d3e1      	bcc.n	c <fileGetFAT+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:464
        if(  ucAlloc == 0x7F && ucID_Sector == ucIndex && uiID == uiTmpID ){
            return( i );
        } // if
    } // for
    
    return( 0xFFFF ); // 0xFFFF indicates error
  48:	f64f 75ff 	movw	r5, #65535	; 0xffff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:465
}
  4c:	4628      	mov	r0, r5
  4e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  52:	bf00      	nop
  54:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetLength:

00000000 <fileGetLength>:
fileGetLength():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:682
    
    return( 0 );
}

u32 fileGetLength( u32 ulID_File )
{
   0:	2101b538 	.word	0x2101b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:685
    u32 i, ulLen, ulAddress;

    ulAddress = fileGetFAT( ulID_File, 1 ); // This returns sector index, not address
   4:	b280      	uxth	r0, r0
   6:	f7ff fffe 	bl	0 <fileGetLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:686
    if( ulAddress == 0xFFFF ){
   a:	f64f 73ff 	movw	r3, #65535	; 0xffff
   e:	4298      	cmp	r0, r3
  10:	d013      	beq.n	3a <fileGetLength+0x3a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:691
        return( 0 );//xFFFFFFFF );
    } // if
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  12:	4a0b      	ldr	r2, [pc, #44]	; (40 <fileGetLength+0x40>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:693
    ulAddress *= pygmyRootVolume.SectorSize;
    for( i = 0; i < 128; ){
  14:	2400      	movs	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:691
    if( ulAddress == 0xFFFF ){
        return( 0 );//xFFFFFFFF );
    } // if
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  16:	8b93      	ldrh	r3, [r2, #28]
  18:	6b15      	ldr	r5, [r2, #48]	; 0x30
  1a:	fbb5 f5f3 	udiv	r5, r5, r3
  1e:	1945      	adds	r5, r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:692
    ulAddress *= pygmyRootVolume.SectorSize;
  20:	435d      	muls	r5, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:694
    for( i = 0; i < 128; ){
        ulLen = flashReadLong( ulAddress + i );
  22:	1960      	adds	r0, r4, r5
  24:	f7ff fffe 	bl	0 <fileGetLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:696
        i += 4;
        if( ulLen != 0x00000000 && ulLen != 0xFFFFFFFF ){
  28:	1e43      	subs	r3, r0, #1
  2a:	f113 0f03 	cmn.w	r3, #3
  2e:	d905      	bls.n	3c <fileGetLength+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:695
    // sector size to get address
    ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    ulAddress *= pygmyRootVolume.SectorSize;
    for( i = 0; i < 128; ){
        ulLen = flashReadLong( ulAddress + i );
        i += 4;
  30:	3404      	adds	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:693
    } // if
    // Sector index retrieved from FAT is 0 based, add index to first file sector and mult by
    // sector size to get address
    ulAddress += ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
    ulAddress *= pygmyRootVolume.SectorSize;
    for( i = 0; i < 128; ){
  32:	2c80      	cmp	r4, #128	; 0x80
  34:	d1f5      	bne.n	22 <fileGetLength+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:701
        if( ulLen != 0x00000000 && ulLen != 0xFFFFFFFF ){
            return( ulLen );
        } // if
    } // for

    return( 0 ); // Return the only invalid file length on error
  36:	2000      	movs	r0, #0
  38:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:687
{
    u32 i, ulLen, ulAddress;

    ulAddress = fileGetFAT( ulID_File, 1 ); // This returns sector index, not address
    if( ulAddress == 0xFFFF ){
        return( 0 );//xFFFFFFFF );
  3a:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:702
            return( ulLen );
        } // if
    } // for

    return( 0 ); // Return the only invalid file length on error
}
  3c:	bd38      	pop	{r3, r4, r5, pc}
  3e:	bf00      	nop
  40:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetChar:

00000000 <fileGetChar>:
fileGetChar():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:859
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   0:	6882      	ldr	r2, [r0, #8]
   2:	6843      	ldr	r3, [r0, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:855
    return( ulData );
}

#ifdef __FILE_SMALLGETCHAR
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
   4:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:859
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   6:	429a      	cmp	r2, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:855
    return( ulData );
}

#ifdef __FILE_SMALLGETCHAR
u8 fileGetChar( PYGMYFILE *pygmyFile )
{ 
   8:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:859
    // This function only remains for use with bootloaders
    u32 i, ulAddress;
    
    if( pygmyFile->Index >= pygmyFile->Length ){
   a:	d211      	bcs.n	30 <fileGetChar+0x30>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:863
        pygmyFile->Attributes |= EOF;
        return( 0 );
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){
   c:	4d1a      	ldr	r5, [pc, #104]	; (78 <fileGetChar+0x78>)
   e:	3280      	adds	r2, #128	; 0x80
  10:	8bab      	ldrh	r3, [r5, #28]
  12:	fbb2 f1f3 	udiv	r1, r2, r3
  16:	fb03 2311 	mls	r3, r3, r1, r2
  1a:	b9c3      	cbnz	r3, 4e <fileGetChar+0x4e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:864
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
  1c:	7b01      	ldrb	r1, [r0, #12]
  1e:	89c0      	ldrh	r0, [r0, #14]
  20:	3101      	adds	r1, #1
  22:	b2c9      	uxtb	r1, r1
  24:	f7ff fffe 	bl	0 <fileGetChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:865
        if( i == 0xFFFF ){
  28:	f64f 73ff 	movw	r3, #65535	; 0xffff
  2c:	4298      	cmp	r0, r3
  2e:	d105      	bne.n	3c <fileGetChar+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:866
            pygmyFile->Attributes |= EOF;
  30:	7c23      	ldrb	r3, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:879
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
}
  32:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:866
        return( 0 );
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
  34:	f063 037f 	orn	r3, r3, #127	; 0x7f
  38:	7423      	strb	r3, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:879
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
}
  3a:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:869
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
            return( 0 ); 
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  3c:	8bab      	ldrh	r3, [r5, #28]
  3e:	6b2a      	ldr	r2, [r5, #48]	; 0x30
  40:	fbb2 f3f3 	udiv	r3, r2, r3
  44:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:870
        ++pygmyFile->ID_Sector;
  46:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:869
        i = fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector+1 );
        if( i == 0xFFFF ){
            pygmyFile->Attributes |= EOF;
            return( 0 ); 
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  48:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:870
        ++pygmyFile->ID_Sector;
  4a:	3301      	adds	r3, #1
  4c:	81a3      	strh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:873
    } // if
    
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ;
  4e:	68a3      	ldr	r3, [r4, #8]
  50:	8baa      	ldrh	r2, [r5, #28]
  52:	f103 0180 	add.w	r1, r3, #128	; 0x80
  56:	fbb1 f0f2 	udiv	r0, r1, r2
  5a:	fb02 1110 	mls	r1, r2, r0, r1
  5e:	6820      	ldr	r0, [r4, #0]
  60:	fb00 1002 	mla	r0, r0, r2, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:874
    if( pygmyFile->Index < pygmyFile->Length ){
  64:	6862      	ldr	r2, [r4, #4]
  66:	4293      	cmp	r3, r2
  68:	d201      	bcs.n	6e <fileGetChar+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:875
        ++pygmyFile->Index;
  6a:	3301      	adds	r3, #1
  6c:	60a3      	str	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:879
    } // if

    return( flashReadByte( ulAddress ) );
}
  6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:878
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ;
    if( pygmyFile->Index < pygmyFile->Length ){
        ++pygmyFile->Index;
    } // if

    return( flashReadByte( ulAddress ) );
  72:	f7ff bffe 	b.w	0 <fileGetChar>
  76:	bf00      	nop
  78:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetLong:

00000000 <fileGetLong>:
fileGetLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:838

u32 fileGetLong( PYGMYFILE *pygmyFile, u8 ucEndian )
{
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
   0:	2901      	cmp	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:835

    return( uiData );
}

u32 fileGetLong( PYGMYFILE *pygmyFile, u8 ucEndian )
{
   2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:838
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
   6:	d114      	bne.n	32 <fileGetLong+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:839
        ulData = (u32)fileGetChar( pygmyFile ) << 24;
   8:	f7ff fffe 	bl	0 <fileGetLong>
   c:	0605      	lsls	r5, r0, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:840
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
   e:	4620      	mov	r0, r4
  10:	f7ff fffe 	bl	0 <fileGetLong>
  14:	4607      	mov	r7, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:841
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  16:	4620      	mov	r0, r4
  18:	f7ff fffe 	bl	0 <fileGetLong>
  1c:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:842
        ulData |= (u32)fileGetChar( pygmyFile ); 
  1e:	4620      	mov	r0, r4
  20:	f7ff fffe 	bl	0 <fileGetLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:840
{
    u32 ulData;

    if( ucEndian == BIGENDIAN ){
        ulData = (u32)fileGetChar( pygmyFile ) << 24;
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  24:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:841
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  28:	ea45 0000 	orr.w	r0, r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:842
        ulData |= (u32)fileGetChar( pygmyFile ); 
  2c:	ea40 2006 	orr.w	r0, r0, r6, lsl #8
  30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:844
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
  32:	f7ff fffe 	bl	0 <fileGetLong>
  36:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:845
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  38:	4620      	mov	r0, r4
  3a:	f7ff fffe 	bl	0 <fileGetLong>
  3e:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:846
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  40:	4620      	mov	r0, r4
  42:	f7ff fffe 	bl	0 <fileGetLong>
  46:	0400      	lsls	r0, r0, #16
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:845
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ); 
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
  48:	ea40 2505 	orr.w	r5, r0, r5, lsl #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:847
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
        ulData |= (u32)fileGetChar( pygmyFile ) << 24;
  4c:	4620      	mov	r0, r4
  4e:	f7ff fffe 	bl	0 <fileGetLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:846
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ); 
    } else{
        ulData = (u32)fileGetChar( pygmyFile );
        ulData |= (u32)fileGetChar( pygmyFile ) << 8;
        ulData |= (u32)fileGetChar( pygmyFile ) << 16;
  52:	4335      	orrs	r5, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:847
        ulData |= (u32)fileGetChar( pygmyFile ) << 24;
  54:	ea45 6000 	orr.w	r0, r5, r0, lsl #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:851
    } // else

    return( ulData );
}
  58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileGetWord:

00000000 <fileGetWord>:
fileGetWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:823
u16 fileGetWord( PYGMYFILE *pygmyFile, u8 ucEndian )
{
    u16 uiData;
    u8 i;

    if( ucEndian == BIGENDIAN ){
   0:	2901      	cmp	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:819
        ucBuffer[ i ] = fileGetChar( pygmyFile );
    } // for
}

u16 fileGetWord( PYGMYFILE *pygmyFile, u8 ucEndian )
{
   2:	b538      	push	{r3, r4, r5, lr}
   4:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:823
    u16 uiData;
    u8 i;

    if( ucEndian == BIGENDIAN ){
   6:	d10a      	bne.n	1e <fileGetWord+0x1e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:824
        uiData = (u16)fileGetChar( pygmyFile ) << 8;
   8:	f7ff fffe 	bl	0 <fileGetWord>
   c:	0200      	lsls	r0, r0, #8
   e:	b285      	uxth	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:825
        uiData |= (u16)fileGetChar( pygmyFile );
  10:	4620      	mov	r0, r4
  12:	f7ff fffe 	bl	0 <fileGetWord>
  16:	ea45 0000 	orr.w	r0, r5, r0
  1a:	b280      	uxth	r0, r0
  1c:	bd38      	pop	{r3, r4, r5, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:827
    } else {
        uiData = (u16)fileGetChar( pygmyFile );
  1e:	f7ff fffe 	bl	0 <fileGetWord>
  22:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:828
        uiData |= (u16)fileGetChar( pygmyFile ) << 8;
  24:	4620      	mov	r0, r4
  26:	f7ff fffe 	bl	0 <fileGetWord>
  2a:	ea45 2000 	orr.w	r0, r5, r0, lsl #8
  2e:	b280      	uxth	r0, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:832
    } // else

    return( uiData );
}
  30:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.fileGetBuffer:

00000000 <fileGetBuffer>:
fileGetBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:810
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
    } // else
}

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
   6:	4617      	mov	r7, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:813
    u16 i;

    for( i = 0; i < uiLen; i++ ){
   8:	2600      	movs	r6, #0
   a:	e006      	b.n	1a <fileGetBuffer+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:814
        ucBuffer[ i ] = fileGetChar( pygmyFile );
   c:	4620      	mov	r0, r4
   e:	f7ff fffe 	bl	0 <fileGetBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:813

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    u16 i;

    for( i = 0; i < uiLen; i++ ){
  12:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:814
        ucBuffer[ i ] = fileGetChar( pygmyFile );
  14:	f807 0b01 	strb.w	r0, [r7], #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:813

void fileGetBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    u16 i;

    for( i = 0; i < uiLen; i++ ){
  18:	b2b6      	uxth	r6, r6
  1a:	42ae      	cmp	r6, r5
  1c:	d3f6      	bcc.n	c <fileGetBuffer+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:816
        ucBuffer[ i ] = fileGetChar( pygmyFile );
    } // for
}
  1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileSeekName:

00000000 <fileSeekName>:
fileSeekName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:366
    // return the ID of the file to use to load length
    return( flashReadWord( ulAddress + 14 ) );
}

u16 fileSeekName( u8 *ucName )
{
   0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   4:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:370
    u32 i, ii;
    u8 ucBuffer[ 16 ];
    
    for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
   6:	2540      	movs	r5, #64	; 0x40
   8:	2400      	movs	r4, #0
   a:	e01f      	b.n	4c <fileSeekName+0x4c>
   c:	2700      	movs	r7, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:372
        for( ii = 0; ii < PYGMY_FILE_MAXFILENAMELEN; ii++ ){
            ucBuffer[ ii ] = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( 4 + i ) * 16 ) + ii );
   e:	f8d8 0010 	ldr.w	r0, [r8, #16]
  12:	1828      	adds	r0, r5, r0
  14:	19c0      	adds	r0, r0, r7
  16:	f7ff fffe 	bl	0 <fileSeekName>
  1a:	f80d 0007 	strb.w	r0, [sp, r7]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:373
            if( !ucBuffer[ ii ] || ucBuffer[ ii ] == 0xFF ){
  1e:	3801      	subs	r0, #1
  20:	b2c0      	uxtb	r0, r0
  22:	28fd      	cmp	r0, #253	; 0xfd
  24:	d905      	bls.n	32 <fileSeekName+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:374
                ucBuffer[ ii ] = '\0';
  26:	ab04      	add	r3, sp, #16
  28:	19df      	adds	r7, r3, r7
  2a:	2300      	movs	r3, #0
  2c:	f807 3c10 	strb.w	r3, [r7, #-16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:375
                break;
  30:	e002      	b.n	38 <fileSeekName+0x38>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:371
{
    u32 i, ii;
    u8 ucBuffer[ 16 ];
    
    for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
        for( ii = 0; ii < PYGMY_FILE_MAXFILENAMELEN; ii++ ){
  32:	3701      	adds	r7, #1
  34:	2f0c      	cmp	r7, #12
  36:	d1ea      	bne.n	e <fileSeekName+0xe>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:378
            if( !ucBuffer[ ii ] || ucBuffer[ ii ] == 0xFF ){
                ucBuffer[ ii ] = '\0';
                break;
            } // if
        } // for
        if( isStringSame( ucName, ucBuffer ) ){
  38:	4630      	mov	r0, r6
  3a:	4669      	mov	r1, sp
  3c:	f7ff fffe 	bl	0 <isStringSame>
  40:	3510      	adds	r5, #16
  42:	b110      	cbz	r0, 4a <fileSeekName+0x4a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:379
            return( 4 + i );
  44:	3404      	adds	r4, #4
  46:	b2a0      	uxth	r0, r4
  48:	e006      	b.n	58 <fileSeekName+0x58>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:370
u16 fileSeekName( u8 *ucName )
{
    u32 i, ii;
    u8 ucBuffer[ 16 ];
    
    for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  4a:	3401      	adds	r4, #1
  4c:	4b04      	ldr	r3, [pc, #16]	; (60 <fileSeekName+0x60>)
  4e:	6a1a      	ldr	r2, [r3, #32]
  50:	4698      	mov	r8, r3
  52:	4294      	cmp	r4, r2
  54:	d3da      	bcc.n	c <fileSeekName+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:383
        if( isStringSame( ucName, ucBuffer ) ){
            return( 4 + i );
        } // if
    } // for

    return( 0 );
  56:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:384
}
  58:	b004      	add	sp, #16
  5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  5e:	bf00      	nop
  60:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetName:

00000000 <fileGetName>:
fileGetName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:341
    // This function is incremental in nature and designed to provided
    // listing information
    u32 ulAddress;
    u8 i;

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   0:	e92d4b12 	.word	0xe92d4b12
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:335
{
    return( pygmyRootVolume.MaxFiles );
}

u16 fileGetName( u16 uiFileEntry, u8 *ucName )
{
   4:	41f0      	rors	r0, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:341
    // This function is incremental in nature and designed to provided
    // listing information
    u32 ulAddress;
    u8 i;

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   6:	6a1a      	ldr	r2, [r3, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:335
{
    return( pygmyRootVolume.MaxFiles );
}

u16 fileGetName( u16 uiFileEntry, u8 *ucName )
{
   8:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:341
    // This function is incremental in nature and designed to provided
    // listing information
    u32 ulAddress;
    u8 i;

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
   a:	4290      	cmp	r0, r2
   c:	d818      	bhi.n	40 <fileGetName+0x40>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:345
        return( 0 );
    } // if

    ulAddress = pygmyRootVolume.ActiveFiles + 64 + ( uiFileEntry * 16 );
   e:	691e      	ldr	r6, [r3, #16]
  10:	2400      	movs	r4, #0
  12:	3640      	adds	r6, #64	; 0x40
  14:	eb06 1600 	add.w	r6, r6, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:348

    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN; i++ ){
        ucName[ i ] = flashReadByte( ulAddress + i );
  18:	19a0      	adds	r0, r4, r6
  1a:	f7ff fffe 	bl	0 <fileGetName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:350
        if( ucName[ i ] == 0xFF ){
            ucName[ i ] = '\0';
  1e:	28ff      	cmp	r0, #255	; 0xff
  20:	bf08      	it	eq
  22:	2000      	moveq	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:345

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
        return( 0 );
    } // if

    ulAddress = pygmyRootVolume.ActiveFiles + 64 + ( uiFileEntry * 16 );
  24:	b2e5      	uxtb	r5, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:349

    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN; i++ ){
        ucName[ i ] = flashReadByte( ulAddress + i );
        if( ucName[ i ] == 0xFF ){
  26:	5538      	strb	r0, [r7, r4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:352
            ucName[ i ] = '\0';
        } // if
        if( ucName[ i ] == '\0' ){
  28:	b908      	cbnz	r0, 2e <fileGetName+0x2e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:353
            if( !i ){
  2a:	b91d      	cbnz	r5, 34 <fileGetName+0x34>
  2c:	e00b      	b.n	46 <fileGetName+0x46>
  2e:	3401      	adds	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:347
        return( 0 );
    } // if

    ulAddress = pygmyRootVolume.ActiveFiles + 64 + ( uiFileEntry * 16 );

    for( i = 0; i < PYGMY_FILE_MAXFILENAMELEN; i++ ){
  30:	2c0c      	cmp	r4, #12
  32:	d1f1      	bne.n	18 <fileGetName+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:362
            } // else
        } // if
    } // for
    
    // return the ID of the file to use to load length
    return( flashReadWord( ulAddress + 14 ) );
  34:	f106 000e 	add.w	r0, r6, #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:363
}
  38:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:362
            } // else
        } // if
    } // for
    
    // return the ID of the file to use to load length
    return( flashReadWord( ulAddress + 14 ) );
  3c:	f7ff bffe 	b.w	0 <fileGetName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:342
    // listing information
    u32 ulAddress;
    u8 i;

    if( uiFileEntry > pygmyRootVolume.MaxFiles ){
        return( 0 );
  40:	2000      	movs	r0, #0
  42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:354
        if( ucName[ i ] == 0xFF ){
            ucName[ i ] = '\0';
        } // if
        if( ucName[ i ] == '\0' ){
            if( !i ){
                return( 0 );
  46:	4628      	mov	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:363
        } // if
    } // for
    
    // return the ID of the file to use to load length
    return( flashReadWord( ulAddress + 14 ) );
}
  48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4c:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeSpace:

00000000 <fileGetFreeSpace>:
fileGetFreeSpace():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:208
    
    return( ucName );
}

u32 fileGetFreeSpace( void )
{
   0:	2400b570 	.word	0x2400b570
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:214
    u32 ulFreeSpace;
    u16 i;
    u8 ucByte;

    // Count unallocated and erased tags
    for( i = 0, ulFreeSpace = 0; i < pygmyRootVolume.Sectors; i++ ){
   4:	4625      	mov	r5, r4
   6:	e00c      	b.n	22 <fileGetFreeSpace+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:215
        ucByte = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
   8:	6970      	ldr	r0, [r6, #20]
   a:	eb00 0084 	add.w	r0, r0, r4, lsl #2
   e:	f7ff fffe 	bl	0 <fileGetFreeSpace>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:216
        if( !ucByte || ucByte == 0xFF ){
  12:	3801      	subs	r0, #1
  14:	b2c0      	uxtb	r0, r0
  16:	28fd      	cmp	r0, #253	; 0xfd
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:217
            ulFreeSpace += pygmyRootVolume.SectorSize;
  18:	bf84      	itt	hi
  1a:	8bb3      	ldrhhi	r3, [r6, #28]
  1c:	18ed      	addhi	r5, r5, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:214
    u32 ulFreeSpace;
    u16 i;
    u8 ucByte;

    // Count unallocated and erased tags
    for( i = 0, ulFreeSpace = 0; i < pygmyRootVolume.Sectors; i++ ){
  1e:	3401      	adds	r4, #1
  20:	b2a4      	uxth	r4, r4
  22:	4e03      	ldr	r6, [pc, #12]	; (30 <fileGetFreeSpace+0x30>)
  24:	69b3      	ldr	r3, [r6, #24]
  26:	429c      	cmp	r4, r3
  28:	d3ee      	bcc.n	8 <fileGetFreeSpace+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:222
            ulFreeSpace += pygmyRootVolume.SectorSize;
        } // if
    } // for

    return( ulFreeSpace );
}
  2a:	4628      	mov	r0, r5
  2c:	bd70      	pop	{r4, r5, r6, pc}
  2e:	bf00      	nop
  30:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetVolumeName:

00000000 <fileGetVolumeName>:
fileGetVolumeName():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:193
{
    return( pygmyFile->Attributes & EOF );
}

u8 *fileGetVolumeName( u8 *ucName )
{
   0:	2400b538 	.word	0x2400b538
   4:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:196
    u8 i, ucByte;

    for( i = 0, ucName[ 0 ] = 0; i < 13; i++ ){
   6:	7004      	strb	r4, [r0, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:197
        ucByte = flashReadByte( pygmyRootVolume.ActiveFiles + i );
   8:	4b05      	ldr	r3, [pc, #20]	; (20 <fileGetVolumeName+0x20>)
   a:	6918      	ldr	r0, [r3, #16]
   c:	1820      	adds	r0, r4, r0
   e:	f7ff fffe 	bl	0 <fileGetVolumeName>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:198
        ucName[ i ] = ucByte;
  12:	5528      	strb	r0, [r5, r4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:199
        if( !ucByte ){
  14:	b110      	cbz	r0, 1c <fileGetVolumeName+0x1c>
  16:	3401      	adds	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:196

u8 *fileGetVolumeName( u8 *ucName )
{
    u8 i, ucByte;

    for( i = 0, ucName[ 0 ] = 0; i < 13; i++ ){
  18:	2c0d      	cmp	r4, #13
  1a:	d1f5      	bne.n	8 <fileGetVolumeName+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:205
            break;
        } // if
    } // for
    
    return( ucName );
}
  1c:	4628      	mov	r0, r5
  1e:	bd38      	pop	{r3, r4, r5, pc}
  20:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadBuffer:

00000000 <flashReadBuffer>:
flashReadBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1165
void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   0:	4b0d      	ldr	r3, [pc, #52]	; (38 <flashReadBuffer+0x38>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1161
	
	return( ucByte );    
}

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4615      	mov	r5, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1165
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1161
	
	return( ucByte );    
}

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
   a:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1165
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
   c:	615a      	str	r2, [r3, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1164

void flashReadBuffer( u32 ulAddress, u8 *ucBuffer, u16 uiLen )
{
    u16 i;

    ulAddress = ulAddress | 0x03000000;
   e:	f040 7140 	orr.w	r1, r0, #50331648	; 0x3000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1166
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
  12:	480a      	ldr	r0, [pc, #40]	; (2c <flashReadBuffer+0x2c>)
  14:	f7ff fffe 	bl	0 <flashReadBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1167
    for( i = 0; i < uiLen; i++ ){
  18:	2600      	movs	r6, #0
  1a:	e006      	b.n	2a <flashReadBuffer+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1168
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
  1c:	4807      	ldr	r0, [pc, #28]	; (3c <flashReadBuffer+0x3c>)
  1e:	f7ff fffe 	bl	0 <flashReadBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1167
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    for( i = 0; i < uiLen; i++ ){
  22:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1168
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
  24:	f804 0b01 	strb.w	r0, [r4], #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1167
    u16 i;

    ulAddress = ulAddress | 0x03000000;
    FLASH_CS_LOW; 
    spiWriteLong( &pygmyFlashSPI, ulAddress );
    for( i = 0; i < uiLen; i++ ){
  28:	b2b6      	uxth	r6, r6
  2a:	42ae      	cmp	r6, r5
  2c:	d3f6      	bcc.n	1c <flashReadBuffer+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1170
        ucBuffer[ i ] = spiReadByte( &pygmyFlashSPI );
    } // for
    FLASH_CS_HIGH;   
  2e:	4b02      	ldr	r3, [pc, #8]	; (38 <flashReadBuffer+0x38>)
  30:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  34:	611a      	str	r2, [r3, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1171
}
  36:	bd70      	pop	{r4, r5, r6, pc}
  38:	40010c00 	.word	0x40010c00
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadStatus:

00000000 <flashReadStatus>:
flashReadStatus():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1174

u8 flashReadStatus( void )
{
   0:	4c06b538 	.word	0x4c06b538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1177
    u8 ucByte;
    
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1178
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_RDSR );
   8:	2105      	movs	r1, #5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1177

u8 flashReadStatus( void )
{
    u8 ucByte;
    
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1178
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_RDSR );
   c:	4804      	ldr	r0, [pc, #16]	; (20 <flashReadStatus+0x20>)
   e:	f7ff fffe 	bl	0 <flashReadStatus>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1179
    ucByte = spiReadByte( &pygmyFlashSPI );
  12:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadStatus+0x10>)
  14:	f7ff fffe 	bl	0 <flashReadStatus>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1180
    FLASH_CS_HIGH;
  18:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1183

    return( ucByte );
}
  1a:	bd38      	pop	{r3, r4, r5, pc}
  1c:	40010c00 	.word	0x40010c00
  20:	00000000 	.word	0x00000000

Disassembly of section .text.flashReadID:

00000000 <flashReadID>:
flashReadID():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1186

u8 flashReadID( void )
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1189
    u8 ucByte;
    
    FLASH_CS_LOW;
   2:	4c09      	ldr	r4, [pc, #36]	; (28 <flashReadID+0x28>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1190
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_JEDECID );
   8:	219f      	movs	r1, #159	; 0x9f
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1189

u8 flashReadID( void )
{
    u8 ucByte;
    
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1190
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_JEDECID );
   c:	4807      	ldr	r0, [pc, #28]	; (2c <flashReadID+0x2c>)
   e:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1191
    ucByte = spiReadByte( &pygmyFlashSPI ); // Manufacturer
  12:	4806      	ldr	r0, [pc, #24]	; (1c <flashReadID+0x1c>)
  14:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1192
    ucByte = spiReadByte( &pygmyFlashSPI ); // Type
  18:	4804      	ldr	r0, [pc, #16]	; (14 <flashReadID+0x14>)
  1a:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1193
    ucByte = spiReadByte( &pygmyFlashSPI ); // Capacity
  1e:	4803      	ldr	r0, [pc, #12]	; (10 <flashReadID+0x10>)
  20:	f7ff fffe 	bl	0 <flashReadID>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1194
    FLASH_CS_HIGH;
  24:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1198

    return( ucByte );
    
}
  26:	bd38      	pop	{r3, r4, r5, pc}
  28:	40010c00 	.word	0x40010c00
  2c:	00000000 	.word	0x00000000

Disassembly of section .text.flashWaitForBusy:

00000000 <flashWaitForBusy>:
flashWaitForBusy():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1226
    
    return( 1 );
}

void flashWaitForBusy( void )
{
   0:	b508      	push	{r3, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1227
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
   2:	f7ff fffe 	bl	0 <flashWaitForBusy>
   6:	f010 0f01 	tst.w	r0, #1
   a:	d1fa      	bne.n	2 <flashWaitForBusy+0x2>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1228
}
   c:	bd08      	pop	{r3, pc}

Disassembly of section .text.flashChipErase:

00000000 <flashChipErase>:
flashChipErase():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1213
    FLASH_CS_HIGH;
    flashWaitForBusy();
}

u8 flashChipErase( void )
{
   0:	b538      	push	{r3, r4, r5, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1214
    FLASH_CS_LOW;
   2:	4c09      	ldr	r4, [pc, #36]	; (28 <flashChipErase+0x28>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1215
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   8:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1214
    flashWaitForBusy();
}

u8 flashChipErase( void )
{
    FLASH_CS_LOW;
   a:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1215
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   c:	4807      	ldr	r0, [pc, #28]	; (2c <flashChipErase+0x2c>)
   e:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1216
    FLASH_CS_HIGH;
  12:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1218
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_ERASE_ALL );
  14:	4805      	ldr	r0, [pc, #20]	; (2c <flashChipErase+0x2c>)
  16:	2160      	movs	r1, #96	; 0x60
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1217
u8 flashChipErase( void )
{
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  18:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1218
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_ERASE_ALL );
  1a:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1219
    FLASH_CS_HIGH;
  1e:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1220
    flashWaitForBusy( );
  20:	f7ff fffe 	bl	0 <flashChipErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1223
    
    return( 1 );
}
  24:	2001      	movs	r0, #1
  26:	bd38      	pop	{r3, r4, r5, pc}
  28:	40010c00 	.word	0x40010c00
  2c:	00000000 	.word	0x00000000

Disassembly of section .text.flashSectorErase:

00000000 <flashSectorErase>:
flashSectorErase():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1201
    return( ucByte );
    
}

void flashSectorErase( u32 ulSector )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1203
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
   2:	4c0a      	ldr	r4, [pc, #40]	; (2c <flashSectorErase+0x2c>)
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1201
    return( ucByte );
    
}

void flashSectorErase( u32 ulSector )
{
   8:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1204
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   a:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1203
}

void flashSectorErase( u32 ulSector )
{
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
   c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1204
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
   e:	4808      	ldr	r0, [pc, #32]	; (30 <flashSectorErase+0x30>)
  10:	f7ff fffe 	bl	0 <flashSectorErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1205
    FLASH_CS_HIGH;
  14:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1207
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulSector );
  16:	4806      	ldr	r0, [pc, #24]	; (30 <flashSectorErase+0x30>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1206
{
    ulSector |= 0x20000000; // 4KB Sector Erase
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  18:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1207
    spiWriteLong( &pygmyFlashSPI, ulSector );
  1a:	f046 5100 	orr.w	r1, r6, #536870912	; 0x20000000
  1e:	f7ff fffe 	bl	0 <flashSectorErase>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1208
    FLASH_CS_HIGH;
  22:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1210
    flashWaitForBusy();
}
  24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1209
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN );
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulSector );
    FLASH_CS_HIGH;
    flashWaitForBusy();
  28:	f7ff bffe 	b.w	0 <flashSectorErase>
  2c:	40010c00 	.word	0x40010c00
  30:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteByte:

00000000 <flashWriteByte>:
flashWriteByte():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1268
    }
}


void flashWriteByte( u32 ulAddress, u8 ucByte )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1271
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
   4:	4c0c      	ldr	r4, [pc, #48]	; (38 <flashWriteByte+0x38>)
   6:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1268
    }
}


void flashWriteByte( u32 ulAddress, u8 ucByte )
{
   a:	4607      	mov	r7, r0
   c:	460e      	mov	r6, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1271
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
   e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1272
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN unlocks write capability for one operation
  10:	2106      	movs	r1, #6
  12:	480a      	ldr	r0, [pc, #40]	; (3c <flashWriteByte+0x3c>)
  14:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1273
    FLASH_CS_HIGH;
  18:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1275
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
  1a:	f047 7100 	orr.w	r1, r7, #33554432	; 0x2000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1274
    // Mask 32 bit long to make sure MSB is clear for instruction
    ulAddress |= 0x02000000;
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN unlocks write capability for one operation
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  1e:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1275
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
  20:	4806      	ldr	r0, [pc, #24]	; (3c <flashWriteByte+0x3c>)
  22:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1276
    spiWriteByte( &pygmyFlashSPI, ucByte ); // Write data byte
  26:	4805      	ldr	r0, [pc, #20]	; (3c <flashWriteByte+0x3c>)
  28:	4631      	mov	r1, r6
  2a:	f7ff fffe 	bl	0 <flashWriteByte>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1277
    FLASH_CS_HIGH;
  2e:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1279
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
}
  30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1278
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
    spiWriteLong( &pygmyFlashSPI, ulAddress ); // Write instruction and 3 address bytes
    spiWriteByte( &pygmyFlashSPI, ucByte ); // Write data byte
    FLASH_CS_HIGH;
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
  34:	f7ff bffe 	b.w	0 <flashWriteByte>
  38:	40010c00 	.word	0x40010c00
  3c:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteBuffer:

00000000 <flashWriteBuffer>:
flashWriteBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1257
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
    } // if
}

void flashWriteBuffer( u32 ulAddress, u16 uiLen , u8 *ucBuffer )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	4617      	mov	r7, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1261
    // Function returns 1 for all bytes good, 0 for failure of one or more bytes
    u32 i;
    
    for( i = 0; i < uiLen; i++ ){
   8:	2600      	movs	r6, #0
   a:	e004      	b.n	16 <flashWriteBuffer+0x16>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1262
        flashWriteByte( ulAddress + i, ucBuffer[ i ] );
   c:	1970      	adds	r0, r6, r5
   e:	5db9      	ldrb	r1, [r7, r6]
  10:	f7ff fffe 	bl	0 <flashWriteBuffer>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1261
void flashWriteBuffer( u32 ulAddress, u16 uiLen , u8 *ucBuffer )
{
    // Function returns 1 for all bytes good, 0 for failure of one or more bytes
    u32 i;
    
    for( i = 0; i < uiLen; i++ ){
  14:	3601      	adds	r6, #1
  16:	42a6      	cmp	r6, r4
  18:	d3f8      	bcc.n	c <flashWriteBuffer+0xc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1264
        flashWriteByte( ulAddress + i, ucBuffer[ i ] );
    }
}
  1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.flashWriteString:

00000000 <flashWriteString>:
flashWriteString():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1246
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
    } // for
}

void flashWriteString( u32 ulAddress, u8 ucTerminate, u8 *ucBuffer )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
   4:	4615      	mov	r5, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1248

    for( ; *ucBuffer; ){
   6:	e003      	b.n	10 <flashWriteString+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1249
        flashWriteByte( ulAddress++, *(ucBuffer++) );
   8:	1c46      	adds	r6, r0, #1
   a:	f7ff fffe 	bl	0 <flashWriteString>
   e:	4630      	mov	r0, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1248
}

void flashWriteString( u32 ulAddress, u8 ucTerminate, u8 *ucBuffer )
{

    for( ; *ucBuffer; ){
  10:	f815 1b01 	ldrb.w	r1, [r5], #1
  14:	2900      	cmp	r1, #0
  16:	d1f7      	bne.n	8 <flashWriteString+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1251
        flashWriteByte( ulAddress++, *(ucBuffer++) );
    } // for
    if( ucTerminate ){
  18:	b11c      	cbz	r4, 22 <flashWriteString+0x22>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1254
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
    } // if
}
  1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1252

    for( ; *ucBuffer; ){
        flashWriteByte( ulAddress++, *(ucBuffer++) );
    } // for
    if( ucTerminate ){
        flashWriteByte( ulAddress++, 0 ); // Terminate string with NULL if true
  1e:	f7ff bffe 	b.w	0 <flashWriteString>
  22:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.flashWriteLong:

00000000 <flashWriteLong>:
flashWriteLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1237
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
}

void flashWriteLong( u32 ulAddress, u32 ulLong )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460e      	mov	r6, r1
   6:	2418      	movs	r4, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1241
    u8 i;
    
    for( i = 0; i < 4; i++ ){
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
   8:	fa36 f104 	lsrs.w	r1, r6, r4
   c:	4628      	mov	r0, r5
   e:	b2c9      	uxtb	r1, r1
  10:	3c08      	subs	r4, #8
  12:	f7ff fffe 	bl	0 <flashWriteLong>
  16:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1240

void flashWriteLong( u32 ulAddress, u32 ulLong )
{
    u8 i;
    
    for( i = 0; i < 4; i++ ){
  18:	f114 0f08 	cmn.w	r4, #8
  1c:	d1f4      	bne.n	8 <flashWriteLong+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1243
        flashWriteByte( ulAddress + i, (u8)( ulLong >> ( ( 3 - i ) * 8 ) ) );
    } // for
}
  1e:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.fileWriteLength:

00000000 <fileWriteLength>:
fileWriteLength():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:658
    
    return( 0 ); 
}

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:661
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   2:	4c13      	ldr	r4, [pc, #76]	; (50 <fileWriteLength+0x50>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:658
    
    return( 0 ); 
}

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
   4:	460d      	mov	r5, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:661
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   6:	89c0      	ldrh	r0, [r0, #14]
   8:	2101      	movs	r1, #1
   a:	6b26      	ldr	r6, [r4, #48]	; 0x30
   c:	f7ff fffe 	bl	0 <fileWriteLength>
  10:	8ba3      	ldrh	r3, [r4, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:663
    
    for( i = 0; i < 128; ){
  12:	2400      	movs	r4, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:661

u8 fileWriteLength( PYGMYFILE *pygmyFile, u32 ulLength )
{
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
  14:	fb03 6600 	mla	r6, r3, r0, r6
  18:	19a7      	adds	r7, r4, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:664
    
    for( i = 0; i < 128; ){
        ulTmp = flashReadLong( ulAddress + i );
  1a:	4638      	mov	r0, r7
  1c:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:666
        
        if( ulTmp == 0xFFFFFFFF ){
  20:	f1b0 3fff 	cmp.w	r0, #4294967295
  24:	d105      	bne.n	32 <fileWriteLength+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:667
            flashWriteLong( ulAddress + i, ulLength );
  26:	4638      	mov	r0, r7
  28:	4629      	mov	r1, r5
  2a:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:668
            return( 1 );
  2e:	2001      	movs	r0, #1
  30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:669
        } else if( ulTmp ){ //ulTmp != 0xFFFFFFFF && ulTmp != 0x00000000 ){
  32:	b128      	cbz	r0, 40 <fileWriteLength+0x40>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:670
            if( ulTmp == ulLength ){ // Don't waste a write cycle if Length hasn't changed
  34:	42a8      	cmp	r0, r5
  36:	d008      	beq.n	4a <fileWriteLength+0x4a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:673
                return( 1 );
            } // if
            flashWriteLong( ulAddress + i, 0x00000000 );
  38:	4638      	mov	r0, r7
  3a:	2100      	movs	r1, #0
  3c:	f7ff fffe 	bl	0 <fileWriteLength>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:675
        } // if
        i += 4;
  40:	3404      	adds	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:663
{
    u32 i, ulTmp, ulAddress;

    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
    
    for( i = 0; i < 128; ){
  42:	2c80      	cmp	r4, #128	; 0x80
  44:	d1e8      	bne.n	18 <fileWriteLength+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:678
            flashWriteLong( ulAddress + i, 0x00000000 );
        } // if
        i += 4;
    } // if
    
    return( 0 );
  46:	2000      	movs	r0, #0
  48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:671
        if( ulTmp == 0xFFFFFFFF ){
            flashWriteLong( ulAddress + i, ulLength );
            return( 1 );
        } else if( ulTmp ){ //ulTmp != 0xFFFFFFFF && ulTmp != 0x00000000 ){
            if( ulTmp == ulLength ){ // Don't waste a write cycle if Length hasn't changed
                return( 1 );
  4a:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:679
        } // if
        i += 4;
    } // if
    
    return( 0 );
}
  4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4e:	bf00      	nop
  50:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteWord:

00000000 <flashWriteWord>:
flashWriteWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1231
{
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1232
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
   4:	0a09      	lsrs	r1, r1, #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1231
{
    for( ; PYGMY_FLASH_STATUS_BUSY & flashReadStatus( ); );    
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
   6:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1232
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
   8:	f7ff fffe 	bl	0 <flashWriteWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1233
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
   c:	1c68      	adds	r0, r5, #1
   e:	b2e1      	uxtb	r1, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1234
}
  10:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1233
}

void flashWriteWord( u32 ulAddress, u16 uiWord )
{
    flashWriteByte( ulAddress, (u8)( uiWord >> 8 ) );
    flashWriteByte( ulAddress + 1, (u8) uiWord );    
  14:	f7ff bffe 	b.w	0 <flashWriteWord>

Disassembly of section .text.fileDeleteFATEntry:

00000000 <fileDeleteFATEntry>:
fileDeleteFATEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:589
    
    return( 1 );
}

u8 fileDeleteFATEntry( u16 uiID_File, u8 ucID_Sector )
{
   0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:594
    u32 i, ii;
    u16 uiTmpID, uiDeleted;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
   4:	f04f 0900 	mov.w	r9, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:589
    
    return( 1 );
}

u8 fileDeleteFATEntry( u16 uiID_File, u8 ucID_Sector )
{
   8:	4606      	mov	r6, r0
   a:	460d      	mov	r5, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:594
    u32 i, ii;
    u16 uiTmpID, uiDeleted;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
   c:	464c      	mov	r4, r9
   e:	e032      	b.n	76 <fileDeleteFATEntry+0x76>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:596
        ii = i * 4;
        uiTmpID = flashReadByte( pygmyRootVolume.ActiveFAT + ii + 2 ) << 8;
  10:	6978      	ldr	r0, [r7, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:594
{
    u32 i, ii;
    u16 uiTmpID, uiDeleted;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
  12:	ea4f 0884 	mov.w	r8, r4, lsl #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:596
        ii = i * 4;
        uiTmpID = flashReadByte( pygmyRootVolume.ActiveFAT + ii + 2 ) << 8;
  16:	3002      	adds	r0, #2
  18:	4440      	add	r0, r8
  1a:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  1e:	0200      	lsls	r0, r0, #8
  20:	fa1f fa80 	uxth.w	sl, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:597
        uiTmpID |= flashReadByte( pygmyRootVolume.ActiveFAT + ii + 3 );
  24:	6978      	ldr	r0, [r7, #20]
  26:	3003      	adds	r0, #3
  28:	4440      	add	r0, r8
  2a:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  2e:	ea4a 0a00 	orr.w	sl, sl, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:598
        if( uiTmpID == uiID_File ){
  32:	fa1f fa8a 	uxth.w	sl, sl
  36:	45b2      	cmp	sl, r6
  38:	d11c      	bne.n	74 <fileDeleteFATEntry+0x74>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:599
            if( !ucID_Sector ){
  3a:	b93d      	cbnz	r5, 4c <fileDeleteFATEntry+0x4c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:600
                flashWriteByte( pygmyRootVolume.ActiveFAT + ii, 0 );
  3c:	6978      	ldr	r0, [r7, #20]
  3e:	4629      	mov	r1, r5
  40:	4440      	add	r0, r8
  42:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:601
                uiDeleted = 1;
  46:	f04f 0901 	mov.w	r9, #1
  4a:	e013      	b.n	74 <fileDeleteFATEntry+0x74>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:602
            } else if( ucID_Sector == flashReadByte( pygmyRootVolume.ActiveFAT + ii + 1 ) ){
  4c:	6978      	ldr	r0, [r7, #20]
  4e:	3001      	adds	r0, #1
  50:	4440      	add	r0, r8
  52:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  56:	4285      	cmp	r5, r0
  58:	d10c      	bne.n	74 <fileDeleteFATEntry+0x74>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:603
                if ( flashReadByte( pygmyRootVolume.ActiveFAT + ii ) ){
  5a:	6978      	ldr	r0, [r7, #20]
  5c:	4440      	add	r0, r8
  5e:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
  62:	b138      	cbz	r0, 74 <fileDeleteFATEntry+0x74>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:604
                    flashWriteByte( pygmyRootVolume.ActiveFAT + ii, 0 );
  64:	6978      	ldr	r0, [r7, #20]
  66:	2100      	movs	r1, #0
  68:	4440      	add	r0, r8
  6a:	f7ff fffe 	bl	0 <fileDeleteFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:605
                    return( 1 );
  6e:	2001      	movs	r0, #1
  70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:594
{
    u32 i, ii;
    u16 uiTmpID, uiDeleted;

    // ucID_Sector == 0 calls for a complete erase
    for( i = 0, uiDeleted = 0; i < pygmyRootVolume.Sectors; i++ ){ // There are as many entries as Sectors
  74:	3401      	adds	r4, #1
  76:	4f04      	ldr	r7, [pc, #16]	; (88 <fileDeleteFATEntry+0x88>)
  78:	69bb      	ldr	r3, [r7, #24]
  7a:	429c      	cmp	r4, r3
  7c:	d3c8      	bcc.n	10 <fileDeleteFATEntry+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:611
                } // if
            } //else if
        } // if
    } // for
 
    return( uiDeleted );
  7e:	fa5f f089 	uxtb.w	r0, r9
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:612
}
  82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  86:	bf00      	nop
  88:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetActiveFAT:

00000000 <fileGetActiveFAT>:
fileGetActiveFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:546
    
    return( 0xFFFF ); // No memory left
}

u32 fileGetActiveFAT( void )
{  
   0:	4c11b510 	.word	0x4c11b510
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:548
    // Warning! Changed to mark ACTIVE table with 0!
    if( flashReadByte( pygmyRootVolume.FAT_A + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1 ) == 0x00 ){
   4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
   6:	8ba2      	ldrh	r2, [r4, #28]
   8:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
   a:	3b01      	subs	r3, #1
   c:	fb00 3002 	mla	r0, r0, r2, r3
  10:	f7ff fffe 	bl	0 <fileGetActiveFAT>
  14:	b908      	cbnz	r0, 1a <fileGetActiveFAT+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:549
        return( pygmyRootVolume.FAT_A ); // Table A Active, last byte is set to 0x00 once inactive
  16:	6be0      	ldr	r0, [r4, #60]	; 0x3c
  18:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:552
    } // if
 
    if( flashReadByte( pygmyRootVolume.FAT_B + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1 ) == 0x00 ){
  1a:	6c23      	ldr	r3, [r4, #64]	; 0x40
  1c:	8ba2      	ldrh	r2, [r4, #28]
  1e:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
  20:	3b01      	subs	r3, #1
  22:	fb00 3002 	mla	r0, r0, r2, r3
  26:	f7ff fffe 	bl	0 <fileGetActiveFAT>
  2a:	b908      	cbnz	r0, 30 <fileGetActiveFAT+0x30>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:553
        return( pygmyRootVolume.FAT_B ); // Table B Active, last byte is set to 0x00 once inactive
  2c:	6c20      	ldr	r0, [r4, #64]	; 0x40
  2e:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:556
    } // if
    
    flashWriteByte( pygmyRootVolume.FAT_A + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  30:	6be3      	ldr	r3, [r4, #60]	; 0x3c
  32:	8ba2      	ldrh	r2, [r4, #28]
  34:	8da0      	ldrh	r0, [r4, #44]	; 0x2c
  36:	3b01      	subs	r3, #1
  38:	fb00 3002 	mla	r0, r0, r2, r3
  3c:	2100      	movs	r1, #0
  3e:	f7ff fffe 	bl	0 <fileGetActiveFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:558
        
    return( pygmyRootVolume.FAT_A );
  42:	6be0      	ldr	r0, [r4, #60]	; 0x3c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:559
}
  44:	bd10      	pop	{r4, pc}
  46:	bf00      	nop
  48:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeFATEntry:

00000000 <fileGetFreeFATEntry>:
fileGetFreeFATEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:488
    
    return( uiFirstEntry );
}

u16 fileGetFreeFATEntry( void )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:496

    // Read MSB of each Entry until 0xFF is found 
    // Return 0xFF for failure, last entry is invalid for a FAT Entry
    // Last Entry would always be reserved for Active Table Byte
    //[ ALLOCATION 1B ][ SEQUENCE 1B ][ FILE 2B ]
    for( i = 0, ucErased = 0; i < pygmyRootVolume.Sectors; i++ ){
   4:	2500      	movs	r5, #0
   6:	462f      	mov	r7, r5
   8:	e00a      	b.n	20 <fileGetFreeFATEntry+0x20>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:497
        ii = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
   a:	6958      	ldr	r0, [r3, #20]
   c:	eb00 0087 	add.w	r0, r0, r7, lsl #2
  10:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:498
        if( ii == 0x00 ){
  14:	b110      	cbz	r0, 1c <fileGetFreeFATEntry+0x1c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:501
            ucErased = 1;
        } // if
        if( ii == 0xFF ){
  16:	28ff      	cmp	r0, #255	; 0xff
  18:	d101      	bne.n	1e <fileGetFreeFATEntry+0x1e>
  1a:	e040      	b.n	9e <fileGetFreeFATEntry+0x9e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:499
    // Last Entry would always be reserved for Active Table Byte
    //[ ALLOCATION 1B ][ SEQUENCE 1B ][ FILE 2B ]
    for( i = 0, ucErased = 0; i < pygmyRootVolume.Sectors; i++ ){
        ii = flashReadByte( pygmyRootVolume.ActiveFAT + ( i * 4 ) );
        if( ii == 0x00 ){
            ucErased = 1;
  1c:	2501      	movs	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:496

    // Read MSB of each Entry until 0xFF is found 
    // Return 0xFF for failure, last entry is invalid for a FAT Entry
    // Last Entry would always be reserved for Active Table Byte
    //[ ALLOCATION 1B ][ SEQUENCE 1B ][ FILE 2B ]
    for( i = 0, ucErased = 0; i < pygmyRootVolume.Sectors; i++ ){
  1e:	3701      	adds	r7, #1
  20:	4b22      	ldr	r3, [pc, #136]	; (ac <fileGetFreeFATEntry+0xac>)
  22:	699a      	ldr	r2, [r3, #24]
  24:	461c      	mov	r4, r3
  26:	4297      	cmp	r7, r2
  28:	d3ef      	bcc.n	a <fileGetFreeFATEntry+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:508
        } // if
    }
    
    // We have deleted entries in the FAT that can be recycled, since we have no free entries
    // To recycle we must swap the tables A to B or B to A
    if( ucErased ){
  2a:	2d00      	cmp	r5, #0
  2c:	d03a      	beq.n	a4 <fileGetFreeFATEntry+0xa4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:509
        pygmyRootVolume.ActiveFAT = fileGetActiveFAT( );
  2e:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:510
        if( pygmyRootVolume.ActiveFAT == pygmyRootVolume.FAT_B ){ 
  32:	6c25      	ldr	r5, [r4, #64]	; 0x40
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:509
    }
    
    // We have deleted entries in the FAT that can be recycled, since we have no free entries
    // To recycle we must swap the tables A to B or B to A
    if( ucErased ){
        pygmyRootVolume.ActiveFAT = fileGetActiveFAT( );
  34:	6160      	str	r0, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:510
        if( pygmyRootVolume.ActiveFAT == pygmyRootVolume.FAT_B ){ 
  36:	42a8      	cmp	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:511
            ulAddress = pygmyRootVolume.FAT_A;
  38:	bf08      	it	eq
  3a:	6be5      	ldreq	r5, [r4, #60]	; 0x3c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:519
        } //else
        
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
  3c:	f04f 37ff 	mov.w	r7, #4294967295
  40:	46a8      	mov	r8, r5
  42:	2600      	movs	r6, #0
  44:	e014      	b.n	70 <fileGetFreeFATEntry+0x70>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:521
            ii = i * 4;
            ulEntry = flashReadLong( pygmyRootVolume.ActiveFAT + ii );
  46:	4b19      	ldr	r3, [pc, #100]	; (ac <fileGetFreeFATEntry+0xac>)
  48:	6958      	ldr	r0, [r3, #20]
  4a:	eb00 0086 	add.w	r0, r0, r6, lsl #2
  4e:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:523
            
            if( ulEntry & 0xFF000000 ){
  52:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:521
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
            ii = i * 4;
            ulEntry = flashReadLong( pygmyRootVolume.ActiveFAT + ii );
  56:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:523
            
            if( ulEntry & 0xFF000000 ){
  58:	d003      	beq.n	62 <fileGetFreeFATEntry+0x62>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:524
                flashWriteLong( ulAddress + ii, ulEntry );
  5a:	4640      	mov	r0, r8
  5c:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
  60:	e003      	b.n	6a <fileGetFreeFATEntry+0x6a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:525
            } else if( ulFAT == 0xFFFFFFFF ){
  62:	f1b7 3fff 	cmp.w	r7, #4294967295
  66:	bf08      	it	eq
  68:	4637      	moveq	r7, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:519
        } //else
        
        // Now that alternate table location is known clear, copy while omitting deleted entries
        // Also, the Active FAT and Files must be updated after copy, at this point ulAddress contains the
        //     destination for sector copy and the ActiveFAT contains 
        for( i = 0, ulFAT = 0xFFFFFFFF; i < pygmyRootVolume.Sectors; i++ ){
  6a:	3601      	adds	r6, #1
  6c:	f108 0804 	add.w	r8, r8, #4
  70:	69a3      	ldr	r3, [r4, #24]
  72:	429e      	cmp	r6, r3
  74:	d3e7      	bcc.n	46 <fileGetFreeFATEntry+0x46>
  76:	2600      	movs	r6, #0
  78:	e005      	b.n	86 <fileGetFreeFATEntry+0x86>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:532
            } // else if
        } // for
        // Now delete original table and make updated table active
        // This will set the Active/Inactive byte to 0xFF, or inactive
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
  7a:	6948      	ldr	r0, [r1, #20]
  7c:	fb02 0006 	mla	r0, r2, r6, r0
  80:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:531
                ulFAT = i; // Only assign ulFAT on first recycled Entry
            } // else if
        } // for
        // Now delete original table and make updated table active
        // This will set the Active/Inactive byte to 0xFF, or inactive
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
  84:	3601      	adds	r6, #1
  86:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
  88:	4908      	ldr	r1, [pc, #32]	; (ac <fileGetFreeFATEntry+0xac>)
  8a:	429e      	cmp	r6, r3
  8c:	8ba2      	ldrh	r2, [r4, #28]
  8e:	d3f4      	bcc.n	7a <fileGetFreeFATEntry+0x7a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:537
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        // Finally clear last byte of FAT table to mark as unused
        // Warning! Changed to mark ACTIVE table with 0!
        pygmyRootVolume.ActiveFAT = ulAddress; // Now update the ActiveFAT to the updated table
        flashWriteByte( pygmyRootVolume.ActiveFAT + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  90:	1e68      	subs	r0, r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:536
        for( i = 0; i < pygmyRootVolume.FATSectors; i++ ){ // If more then 1 sector reserved for each A and B
            flashSectorErase( pygmyRootVolume.ActiveFAT + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        // Finally clear last byte of FAT table to mark as unused
        // Warning! Changed to mark ACTIVE table with 0!
        pygmyRootVolume.ActiveFAT = ulAddress; // Now update the ActiveFAT to the updated table
  92:	614d      	str	r5, [r1, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:537
        flashWriteByte( pygmyRootVolume.ActiveFAT + (pygmyRootVolume.FATSectors * pygmyRootVolume.SectorSize) - 1, 0x00 );
  94:	fb02 0003 	mla	r0, r2, r3, r0
  98:	2100      	movs	r1, #0
  9a:	f7ff fffe 	bl	0 <fileGetFreeFATEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:539
        
        return( (u16)ulFAT ); // Return the recycled value
  9e:	b2b8      	uxth	r0, r7
  a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:542
    } // if 
    
    return( 0xFFFF ); // No memory left
  a4:	f64f 70ff 	movw	r0, #65535	; 0xffff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:543
}
  a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  ac:	00000000 	.word	0x00000000

Disassembly of section .text.fileGetFreeFileEntry:

00000000 <fileGetFreeFileEntry>:
fileGetFreeFileEntry():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:387

    return( 0 );
}

u16 fileGetFreeFileEntry( void )
{
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:395
    u8 ucBuffer[ 16 ];

    // Read MSB of each Entry until 0xFF is found
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );
   4:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
   8:	4f37      	ldr	r7, [pc, #220]	; (e8 <fileGetFreeFileEntry+0xe8>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:397

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
   a:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:395
    u8 ucBuffer[ 16 ];

    // Read MSB of each Entry until 0xFF is found
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );
   e:	6138      	str	r0, [r7, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:397

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
  10:	d063      	beq.n	da <fileGetFreeFileEntry+0xda>
  12:	2504      	movs	r5, #4
  14:	2400      	movs	r4, #0
  16:	e00e      	b.n	36 <fileGetFreeFileEntry+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:402
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
  18:	6918      	ldr	r0, [r3, #16]
  1a:	eb00 1005 	add.w	r0, r0, r5, lsl #4
  1e:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:403
        if( ii == 0xFF ){
  22:	28ff      	cmp	r0, #255	; 0xff
  24:	d102      	bne.n	2c <fileGetFreeFileEntry+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:404
            return( 4 + i );
  26:	b2a8      	uxth	r0, r5
  28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:406
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  2c:	b914      	cbnz	r4, 34 <fileGetFreeFileEntry+0x34>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:407
            uiErased = 4 + i; // Store deleted entry, if no entries left we will free up and use
  2e:	2800      	cmp	r0, #0
  30:	bf08      	it	eq
  32:	462c      	moveq	r4, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:406
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
        if( ii == 0xFF ){
            return( 4 + i );
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  34:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:401

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  36:	6a3a      	ldr	r2, [r7, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:406
        ii = flashReadByte( pygmyRootVolume.ActiveFiles + ( ( i + 4 ) * 16 ) );
        if( ii == 0xFF ){
            return( 4 + i );
        } // if
        if( !uiErased && !ii ){ // We have a deleted entry
  38:	1f29      	subs	r1, r5, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:401

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
    } // if
    
    for( i = 0, uiErased = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  3a:	4291      	cmp	r1, r2
  3c:	4b2a      	ldr	r3, [pc, #168]	; (e8 <fileGetFreeFileEntry+0xe8>)
  3e:	d3eb      	bcc.n	18 <fileGetFreeFileEntry+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:411
        if( !uiErased && !ii ){ // We have a deleted entry
            uiErased = 4 + i; // Store deleted entry, if no entries left we will free up and use
        } // if
    } // for
    // If we exit the loop then we are out of memory
    if( uiErased ){
  40:	2c00      	cmp	r4, #0
  42:	d04d      	beq.n	e0 <fileGetFreeFileEntry+0xe0>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:413
        // Create pointer to unused Table set
        if( pygmyRootVolume.ActiveFiles == pygmyRootVolume.Files_B ){ 
  44:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  46:	691a      	ldr	r2, [r3, #16]
  48:	42aa      	cmp	r2, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:414
            ulAddress = pygmyRootVolume.Files_A;
  4a:	bf08      	it	eq
  4c:	6b5d      	ldreq	r5, [r3, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:418
        } else{
            ulAddress = pygmyRootVolume.Files_B;
        }// if
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
  4e:	2600      	movs	r6, #0
  50:	e006      	b.n	60 <fileGetFreeFileEntry+0x60>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:419
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
  52:	4b25      	ldr	r3, [pc, #148]	; (e8 <fileGetFreeFileEntry+0xe8>)
  54:	8b98      	ldrh	r0, [r3, #28]
  56:	fb00 5006 	mla	r0, r0, r6, r5
  5a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:418
        if( pygmyRootVolume.ActiveFiles == pygmyRootVolume.Files_B ){ 
            ulAddress = pygmyRootVolume.Files_A;
        } else{
            ulAddress = pygmyRootVolume.Files_B;
        }// if
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
  5e:	3601      	adds	r6, #1
  60:	8d7b      	ldrh	r3, [r7, #42]	; 0x2a
  62:	429e      	cmp	r6, r3
  64:	d3f5      	bcc.n	52 <fileGetFreeFileEntry+0x52>
  66:	2600      	movs	r6, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:423
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
  68:	6938      	ldr	r0, [r7, #16]
  6a:	1830      	adds	r0, r6, r0
  6c:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
  70:	4601      	mov	r1, r0
  72:	1970      	adds	r0, r6, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:422
        }// if
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
  74:	3601      	adds	r6, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:423
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
  76:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:422
        }// if
        for( i = 0; i < pygmyRootVolume.FilesSectors; i++ ){
            flashSectorErase( ulAddress + ( i * pygmyRootVolume.SectorSize ) );
        } // for
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
  7a:	2e40      	cmp	r6, #64	; 0x40
  7c:	d1f4      	bne.n	68 <fileGetFreeFileEntry+0x68>
  7e:	f04f 0900 	mov.w	r9, #0
  82:	e01b      	b.n	bc <fileGetFreeFileEntry+0xbc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:429
        } // for
        
        for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
            ii = ( i + 4 ) * 16;
            // Test first byte, if marked deleted ( 0 ), then skip entry since 0xFF cannot be written to 0xFF in flash
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
  84:	f8d8 0010 	ldr.w	r0, [r8, #16]
  88:	1830      	adds	r0, r6, r0
  8a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:430
            if( !ucBuffer[ 0 ] ){
  8e:	b190      	cbz	r0, b6 <fileGetFreeFileEntry+0xb6>
  90:	f04f 0800 	mov.w	r8, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:434
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
                ucBuffer[ iii ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii + iii );  
  94:	6938      	ldr	r0, [r7, #16]
  96:	1830      	adds	r0, r6, r0
  98:	4440      	add	r0, r8
  9a:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:435
                if( ucBuffer[ iii ] != 0xFF ){
  9e:	28ff      	cmp	r0, #255	; 0xff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:434
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
            if( !ucBuffer[ 0 ] ){
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
                ucBuffer[ iii ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii + iii );  
  a0:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:435
                if( ucBuffer[ iii ] != 0xFF ){
  a2:	d003      	beq.n	ac <fileGetFreeFileEntry+0xac>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:436
                    flashWriteByte( ulAddress + ii + iii, ucBuffer[ iii ] );
  a4:	1970      	adds	r0, r6, r5
  a6:	4440      	add	r0, r8
  a8:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:433
            // Test first byte, if marked deleted ( 0 ), then skip entry since 0xFF cannot be written to 0xFF in flash
            ucBuffer[ 0 ] = flashReadByte( pygmyRootVolume.ActiveFiles + ii );
            if( !ucBuffer[ 0 ] ){
                continue;
            } // if
            for( iii = 0; iii < 16; iii++ ){
  ac:	f108 0801 	add.w	r8, r8, #1
  b0:	f1b8 0f10 	cmp.w	r8, #16
  b4:	d1ee      	bne.n	94 <fileGetFreeFileEntry+0x94>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:426
        
        for( i = 0; i < 64; i++ ){ // Copy first 64 bytes of Volume descriptor to new sector
            flashWriteByte( ulAddress + i, flashReadByte( pygmyRootVolume.ActiveFiles + i ) );
        } // for
        
        for( i = 0; i < pygmyRootVolume.MaxFiles; i++ ){
  b6:	f109 0901 	add.w	r9, r9, #1
  ba:	3610      	adds	r6, #16
  bc:	6a3b      	ldr	r3, [r7, #32]
  be:	f8df 8028 	ldr.w	r8, [pc, #40]	; e8 <fileGetFreeFileEntry+0xe8>
  c2:	4599      	cmp	r9, r3
  c4:	d3de      	bcc.n	84 <fileGetFreeFileEntry+0x84>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:441
                    flashWriteByte( ulAddress + ii + iii, ucBuffer[ iii ] );
                } // if
            } // for
        } // for
        // Now set first byte of ActiveFiles to 0 to delete
        flashWriteByte( pygmyRootVolume.ActiveFiles, 0x00 );
  c6:	f8d8 0010 	ldr.w	r0, [r8, #16]
  ca:	2100      	movs	r1, #0
  cc:	f7ff fffe 	bl	0 <fileGetFreeFileEntry>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:442
        pygmyRootVolume.ActiveFiles = ulAddress;
  d0:	f8c8 5010 	str.w	r5, [r8, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:444
    
        return( uiErased ); // This was the location of the first known deleted entry, now free
  d4:	b2a0      	uxth	r0, r4
  d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:398
    // First four entries are always reserved for File Volume Descriptor

    pygmyRootVolume.ActiveFiles = fileGetActiveFiles( );

    if( pygmyRootVolume.ActiveFiles == 0xFFFFFFFF ){ 
        return( 0 );
  da:	2000      	movs	r0, #0
  dc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:447
        pygmyRootVolume.ActiveFiles = ulAddress;
    
        return( uiErased ); // This was the location of the first known deleted entry, now free
    } // if

    return( 0 );
  e0:	4620      	mov	r0, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:448
}
  e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  e6:	bf00      	nop
  e8:	00000000 	.word	0x00000000

Disassembly of section .text.fileAllocateFAT:

00000000 <fileAllocateFAT>:
fileAllocateFAT():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:314

    return( 1 );
}

u16 fileAllocateFAT( u16 uiID_File, u8 ucID_Sector )
{
   0:	41f0e92d 	.word	0x41f0e92d
   4:	4607      	mov	r7, r0
   6:	4688      	mov	r8, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:317
    u32 ulFAT, ulAddress;

    ulFAT = fileGetFreeFATEntry( );
   8:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:318
    if( ulFAT != 0xFFFF ){
   c:	f64f 73ff 	movw	r3, #65535	; 0xffff
  10:	4298      	cmp	r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:317

u16 fileAllocateFAT( u16 uiID_File, u8 ucID_Sector )
{
    u32 ulFAT, ulAddress;

    ulFAT = fileGetFreeFATEntry( );
  12:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:318
    if( ulFAT != 0xFFFF ){
  14:	d018      	beq.n	48 <fileAllocateFAT+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:319
        flashSectorErase( pygmyRootVolume.FirstFileSector + ( ulFAT * pygmyRootVolume.SectorSize ) );
  16:	4c0e      	ldr	r4, [pc, #56]	; (50 <fileAllocateFAT+0x50>)
  18:	6b23      	ldr	r3, [r4, #48]	; 0x30
  1a:	8ba0      	ldrh	r0, [r4, #28]
  1c:	fb00 3005 	mla	r0, r0, r5, r3
  20:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:321
        ulAddress = ulFAT * 4;
        flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, 0x7F ); // 0x7F = Allocated
  24:	6960      	ldr	r0, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:320
    u32 ulFAT, ulAddress;

    ulFAT = fileGetFreeFATEntry( );
    if( ulFAT != 0xFFFF ){
        flashSectorErase( pygmyRootVolume.FirstFileSector + ( ulFAT * pygmyRootVolume.SectorSize ) );
        ulAddress = ulFAT * 4;
  26:	00ab      	lsls	r3, r5, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:321
        flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, 0x7F ); // 0x7F = Allocated
  28:	1818      	adds	r0, r3, r0
  2a:	217f      	movs	r1, #127	; 0x7f
  2c:	1c5e      	adds	r6, r3, #1
  2e:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:322
        flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, ucID_Sector ); // 0x00 and 0xFF reserved for error
  32:	6960      	ldr	r0, [r4, #20]
  34:	4641      	mov	r1, r8
  36:	1830      	adds	r0, r6, r0
  38:	f7ff fffe 	bl	0 <fileAllocateFAT>
  3c:	6960      	ldr	r0, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:323
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress, uiID_File );      
  3e:	4639      	mov	r1, r7
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:322
    ulFAT = fileGetFreeFATEntry( );
    if( ulFAT != 0xFFFF ){
        flashSectorErase( pygmyRootVolume.FirstFileSector + ( ulFAT * pygmyRootVolume.SectorSize ) );
        ulAddress = ulFAT * 4;
        flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, 0x7F ); // 0x7F = Allocated
        flashWriteByte( pygmyRootVolume.ActiveFAT + ulAddress++, ucID_Sector ); // 0x00 and 0xFF reserved for error
  40:	3001      	adds	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:323
        flashWriteWord( pygmyRootVolume.ActiveFAT + ulAddress, uiID_File );      
  42:	1980      	adds	r0, r0, r6
  44:	f7ff fffe 	bl	0 <fileAllocateFAT>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:327
    } // if

    return( ulFAT );
}
  48:	4628      	mov	r0, r5
  4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4e:	bf00      	nop
  50:	00000000 	.word	0x00000000

Disassembly of section .text.fileAllocateContiguousFATEntries:

00000000 <fileAllocateContiguousFATEntries>:
fileAllocateContiguousFATEntries():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:468
    
    return( 0xFFFF ); // 0xFFFF indicates error
}

u16 fileAllocateContiguousFATEntries( u16 uiID, u16 uiEntries )
{
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   4:	4681      	mov	r9, r0
   6:	4688      	mov	r8, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:471
    u16 i, uiEntry, uiFirstEntry;
    
    for( i = 1; i < uiEntries; i++ ){
   8:	2700      	movs	r7, #0
   a:	2601      	movs	r6, #1
   c:	e018      	b.n	40 <fileAllocateContiguousFATEntries+0x40>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:472
        uiEntry = fileGetFreeFATEntry( );
   e:	f7ff fffe 	bl	0 <fileAllocateContiguousFATEntries>
  12:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:474
        if( i == 1 ){
            uiFirstEntry = uiEntry;
  14:	2e01      	cmp	r6, #1
  16:	bf08      	it	eq
  18:	4604      	moveq	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:476
        } // if
        print( COM3, "\rEntry: %d", uiEntry );
  1a:	490e      	ldr	r1, [pc, #56]	; (54 <fileAllocateContiguousFATEntries+0x54>)
  1c:	2003      	movs	r0, #3
  1e:	462a      	mov	r2, r5
  20:	f7ff fffe 	bl	0 <print>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:477
        if( !(uiEntry == uiFirstEntry + ( i - 1 ) ) || uiEntry == 0xFFFF ){
  24:	19e3      	adds	r3, r4, r7
  26:	429d      	cmp	r5, r3
  28:	f64f 73ff 	movw	r3, #65535	; 0xffff
  2c:	d10b      	bne.n	46 <fileAllocateContiguousFATEntries+0x46>
  2e:	3701      	adds	r7, #1
  30:	429d      	cmp	r5, r3
  32:	d00a      	beq.n	4a <fileAllocateContiguousFATEntries+0x4a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:480
            return( 0xFFFF );
        } // if
        fileAllocateFAT( uiID, i );
  34:	b2f1      	uxtb	r1, r6
  36:	4648      	mov	r0, r9
  38:	f7ff fffe 	bl	0 <fileAllocateContiguousFATEntries>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:471

u16 fileAllocateContiguousFATEntries( u16 uiID, u16 uiEntries )
{
    u16 i, uiEntry, uiFirstEntry;
    
    for( i = 1; i < uiEntries; i++ ){
  3c:	3601      	adds	r6, #1
  3e:	b2b6      	uxth	r6, r6
  40:	4546      	cmp	r6, r8
  42:	d3e4      	bcc.n	e <fileAllocateContiguousFATEntries+0xe>
  44:	e002      	b.n	4c <fileAllocateContiguousFATEntries+0x4c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:478
        if( i == 1 ){
            uiFirstEntry = uiEntry;
        } // if
        print( COM3, "\rEntry: %d", uiEntry );
        if( !(uiEntry == uiFirstEntry + ( i - 1 ) ) || uiEntry == 0xFFFF ){
            return( 0xFFFF );
  46:	461c      	mov	r4, r3
  48:	e000      	b.n	4c <fileAllocateContiguousFATEntries+0x4c>
  4a:	462c      	mov	r4, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:485
        fileAllocateFAT( uiID, i );
        
    } // for
    
    return( uiFirstEntry );
}
  4c:	4620      	mov	r0, r4
  4e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  52:	bf00      	nop
  54:	00000000 	.word	0x00000000

Disassembly of section .text.filePreAllocate:

00000000 <filePreAllocate>:
filePreAllocate():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:705

    return( 0 ); // Return the only invalid file length on error
}

u32 filePreAllocate( PYGMYFILE *pygmyFile, u32 ulSize )
{   
   0:	b510      	push	{r4, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:715

    u32 i, ulSectors, ulSector, ulAddress;

    // Do not pre-allocate on a read-only file, or one with date
    // already saved. 
    if( !( pygmyFile->Attributes & WRITE ) || pygmyFile->Length || pygmyFile->Index ){
   2:	7c03      	ldrb	r3, [r0, #16]
   4:	f013 0f02 	tst.w	r3, #2
   8:	d003      	beq.n	12 <filePreAllocate+0x12>
   a:	6843      	ldr	r3, [r0, #4]
   c:	b90b      	cbnz	r3, 12 <filePreAllocate+0x12>
   e:	6883      	ldr	r3, [r0, #8]
  10:	b113      	cbz	r3, 18 <filePreAllocate+0x18>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:716
        print( COM3, "\rWrong Attribs" );
  12:	2003      	movs	r0, #3
  14:	490f      	ldr	r1, [pc, #60]	; (54 <filePreAllocate+0x54>)
  16:	e014      	b.n	42 <filePreAllocate+0x42>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:719
        return( 0 );
    } // if
    ulSectors = ( ulSize + 128 ) / pygmyRootVolume.SectorSize;
  18:	4c0f      	ldr	r4, [pc, #60]	; (58 <filePreAllocate+0x58>)
  1a:	f101 0280 	add.w	r2, r1, #128	; 0x80
  1e:	8ba3      	ldrh	r3, [r4, #28]
  20:	fbb2 f1f3 	udiv	r1, r2, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:720
    if( ( ulSize + 128 ) % pygmyRootVolume.SectorSize ){
  24:	fb03 2311 	mls	r3, r3, r1, r2
  28:	b103      	cbz	r3, 2c <filePreAllocate+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:721
        ++ulSectors;
  2a:	3101      	adds	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:723
    } // if
    ulSector = fileAllocateContiguousFATEntries( pygmyFile->ID_File, ulSectors );
  2c:	89c0      	ldrh	r0, [r0, #14]
  2e:	b289      	uxth	r1, r1
  30:	f7ff fffe 	bl	0 <filePreAllocate>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:724
    if( ulSector == 0xFFFF || ulSector == 0 ){
  34:	f64f 73ff 	movw	r3, #65535	; 0xffff
  38:	4298      	cmp	r0, r3
  3a:	d000      	beq.n	3e <filePreAllocate+0x3e>
  3c:	b928      	cbnz	r0, 4a <filePreAllocate+0x4a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:725
        print( COM3, "\rNon Contiguous" );
  3e:	4907      	ldr	r1, [pc, #28]	; (5c <filePreAllocate+0x5c>)
  40:	2003      	movs	r0, #3
  42:	f7ff fffe 	bl	0 <print>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:726
        return( 0 );
  46:	2000      	movs	r0, #0
  48:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:728
    } // if
    ulAddress = ( ulSector * pygmyRootVolume.SectorSize ) + 128;
  4a:	8ba3      	ldrh	r3, [r4, #28]
  4c:	4358      	muls	r0, r3
  4e:	3080      	adds	r0, #128	; 0x80
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:734
    //for( i = 0; i < ulSectors; i++ ){
    //    fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + i );
    //} // for
 
    return( ulAddress );
}
  50:	bd10      	pop	{r4, pc}
  52:	bf00      	nop
  54:	0000000b 	.word	0x0000000b
  58:	00000000 	.word	0x00000000
  5c:	0000001a 	.word	0x0000001a

Disassembly of section .text.filePutChar:

00000000 <filePutChar>:
filePutChar():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:760

    return( 1 );
}

u8 filePutChar( PYGMYFILE *pygmyFile, u8 ucChar )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:763
    u32 i, ulAddress;

    if( !( pygmyFile->Attributes & WRITE ) ){ 
   4:	7c00      	ldrb	r0, [r0, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:760

    return( 1 );
}

u8 filePutChar( PYGMYFILE *pygmyFile, u8 ucChar )
{
   6:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:763
    u32 i, ulAddress;

    if( !( pygmyFile->Attributes & WRITE ) ){ 
   8:	f010 0002 	ands.w	r0, r0, #2
   c:	d02f      	beq.n	6e <filePutChar+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:766
        return( 0 ); // In Write mode, Length and Index must match or memory corruption will occur
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
   e:	4d18      	ldr	r5, [pc, #96]	; (70 <filePutChar+0x70>)
  10:	68a6      	ldr	r6, [r4, #8]
  12:	8bab      	ldrh	r3, [r5, #28]
  14:	3680      	adds	r6, #128	; 0x80
  16:	fbb6 f2f3 	udiv	r2, r6, r3
  1a:	fb03 6612 	mls	r6, r3, r2, r6
  1e:	b996      	cbnz	r6, 46 <filePutChar+0x46>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:767
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
  20:	7b21      	ldrb	r1, [r4, #12]
  22:	89e0      	ldrh	r0, [r4, #14]
  24:	3101      	adds	r1, #1
  26:	b2c9      	uxtb	r1, r1
  28:	f7ff fffe 	bl	0 <filePutChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:768
        if( i == 0xFFFF ){
  2c:	f64f 73ff 	movw	r3, #65535	; 0xffff
  30:	4298      	cmp	r0, r3
  32:	d01b      	beq.n	6c <filePutChar+0x6c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:771
            return( 0 ); // memory is full!
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  34:	8bab      	ldrh	r3, [r5, #28]
  36:	6b2a      	ldr	r2, [r5, #48]	; 0x30
  38:	fbb2 f3f3 	udiv	r3, r2, r3
  3c:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:772
        ++pygmyFile->ID_Sector;     
  3e:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:771
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
        if( i == 0xFFFF ){
            return( 0 ); // memory is full!
        } // if
        pygmyFile->Sector = i + ( pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize );
  40:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:772
        ++pygmyFile->ID_Sector;     
  42:	3301      	adds	r3, #1
  44:	81a3      	strh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:774
    } // if
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize );
  46:	68a2      	ldr	r2, [r4, #8]
  48:	8bab      	ldrh	r3, [r5, #28]
  4a:	3280      	adds	r2, #128	; 0x80
  4c:	fbb2 f1f3 	udiv	r1, r2, r3
  50:	fb03 2211 	mls	r2, r3, r1, r2
  54:	6820      	ldr	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:775
    flashWriteByte( ulAddress, ucChar );
  56:	4639      	mov	r1, r7
  58:	fb00 2003 	mla	r0, r0, r3, r2
  5c:	f7ff fffe 	bl	0 <filePutChar>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:777
    
    ++pygmyFile->Index;
  60:	68a3      	ldr	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:780
    pygmyFile->Length = pygmyFile->Index;

    return( 1 );
  62:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:777
        ++pygmyFile->ID_Sector;     
    } // if
    ulAddress = ( pygmyFile->Sector * pygmyRootVolume.SectorSize ) + ((( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize );
    flashWriteByte( ulAddress, ucChar );
    
    ++pygmyFile->Index;
  64:	3301      	adds	r3, #1
  66:	60a3      	str	r3, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:778
    pygmyFile->Length = pygmyFile->Index;
  68:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:780

    return( 1 );
  6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:769
        return( 0 ); // In Write mode, Length and Index must match or memory corruption will occur
    } // if
    if( !( (( pygmyFile->Index + 128 ) ) % pygmyRootVolume.SectorSize ) ){      
        i = fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector + 1 );
        if( i == 0xFFFF ){
            return( 0 ); // memory is full!
  6c:	4630      	mov	r0, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:781
    
    ++pygmyFile->Index;
    pygmyFile->Length = pygmyFile->Index;

    return( 1 );
}
  6e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  70:	00000000 	.word	0x00000000

Disassembly of section .text.filePutLong:

00000000 <filePutLong>:
filePutLong():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:796
    } // else
}

void filePutLong( PYGMYFILE *pygmyFile, u32 ulData, u8 ucEndian )
{
    if( ucEndian == BIGENDIAN ){
   0:	2a01      	cmp	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:795
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
    } // else
}

void filePutLong( PYGMYFILE *pygmyFile, u32 ulData, u8 ucEndian )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:796
    if( ucEndian == BIGENDIAN ){
   8:	d10f      	bne.n	2a <filePutLong+0x2a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:797
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
   a:	0e09      	lsrs	r1, r1, #24
   c:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:798
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
  10:	0c21      	lsrs	r1, r4, #16
  12:	b2c9      	uxtb	r1, r1
  14:	4628      	mov	r0, r5
  16:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:799
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
  1a:	0a21      	lsrs	r1, r4, #8
  1c:	b2c9      	uxtb	r1, r1
  1e:	4628      	mov	r0, r5
  20:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:800
        filePutChar( pygmyFile, (u8) ulData );
  24:	4628      	mov	r0, r5
  26:	b2e1      	uxtb	r1, r4
  28:	e00e      	b.n	48 <filePutLong+0x48>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:802
    } else {
        filePutChar( pygmyFile, (u8) ulData );
  2a:	b2c9      	uxtb	r1, r1
  2c:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:803
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
  30:	0a21      	lsrs	r1, r4, #8
  32:	b2c9      	uxtb	r1, r1
  34:	4628      	mov	r0, r5
  36:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:804
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
  3a:	0c21      	lsrs	r1, r4, #16
  3c:	b2c9      	uxtb	r1, r1
  3e:	4628      	mov	r0, r5
  40:	f7ff fffe 	bl	0 <filePutLong>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:805
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
  44:	4628      	mov	r0, r5
  46:	0e21      	lsrs	r1, r4, #24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:807
    } // else
}
  48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:805
        filePutChar( pygmyFile, (u8) ulData );
    } else {
        filePutChar( pygmyFile, (u8) ulData );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 8 ) );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 16 ) );
        filePutChar( pygmyFile, (u8)((u32) ulData >> 24 ) );
  4c:	f7ff bffe 	b.w	0 <filePutLong>

Disassembly of section .text.filePutWord:

00000000 <filePutWord>:
filePutWord():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:785
    return( 1 );
}

void filePutWord( PYGMYFILE *pygmyFile, u16 uiData, u8 ucEndian )
{
    if( ucEndian == BIGENDIAN ){
   0:	2a01      	cmp	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:784

    return( 1 );
}

void filePutWord( PYGMYFILE *pygmyFile, u16 uiData, u8 ucEndian )
{
   2:	b570      	push	{r4, r5, r6, lr}
   4:	4605      	mov	r5, r0
   6:	460c      	mov	r4, r1
   8:	ea4f 2611 	mov.w	r6, r1, lsr #8
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:785
    if( ucEndian == BIGENDIAN ){
   c:	d105      	bne.n	1a <filePutWord+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:786
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
   e:	4631      	mov	r1, r6
  10:	f7ff fffe 	bl	0 <filePutWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:787
        filePutChar( pygmyFile, (u8)uiData );
  14:	4628      	mov	r0, r5
  16:	b2e1      	uxtb	r1, r4
  18:	e004      	b.n	24 <filePutWord+0x24>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:789
    } else {
        filePutChar( pygmyFile, (u8)uiData );
  1a:	b2c9      	uxtb	r1, r1
  1c:	f7ff fffe 	bl	0 <filePutWord>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:790
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
  20:	4628      	mov	r0, r5
  22:	4631      	mov	r1, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:792
    } // else
}
  24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:790
    if( ucEndian == BIGENDIAN ){
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
        filePutChar( pygmyFile, (u8)uiData );
    } else {
        filePutChar( pygmyFile, (u8)uiData );
        filePutChar( pygmyFile, (u8)((u16) uiData >> 8 ) );
  28:	f7ff bffe 	b.w	0 <filePutWord>

Disassembly of section .text.filePutString:

00000000 <filePutString>:
filePutString():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:749

    return( 1 );
}

u8 filePutString( PYGMYFILE *pygmyFile, u8 *ucString )
{   
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:750
    for( ; *ucString; ){
   6:	e003      	b.n	10 <filePutString+0x10>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:751
        if( !filePutChar( pygmyFile, *(ucString++) ) ){
   8:	4628      	mov	r0, r5
   a:	f7ff fffe 	bl	0 <filePutString>
   e:	b120      	cbz	r0, 1a <filePutString+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:750
    return( 1 );
}

u8 filePutString( PYGMYFILE *pygmyFile, u8 *ucString )
{   
    for( ; *ucString; ){
  10:	f814 1b01 	ldrb.w	r1, [r4], #1
  14:	2900      	cmp	r1, #0
  16:	d1f7      	bne.n	8 <filePutString+0x8>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:756
        if( !filePutChar( pygmyFile, *(ucString++) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  18:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:757
}
  1a:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.filePutBuffer:

00000000 <filePutBuffer>:
filePutBuffer():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:738
    return( ulAddress );
}


u8 filePutBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
   0:	b570      	push	{r4, r5, r6, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
   6:	4616      	mov	r6, r2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:739
    for( ; uiLen--; ){
   8:	e007      	b.n	1a <filePutBuffer+0x1a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:740
        if( !filePutChar( pygmyFile, *(ucBuffer++) ) ){
   a:	4628      	mov	r0, r5
   c:	f816 1b01 	ldrb.w	r1, [r6], #1
  10:	f7ff fffe 	bl	0 <filePutBuffer>
  14:	3c01      	subs	r4, #1
  16:	b2a4      	uxth	r4, r4
  18:	b110      	cbz	r0, 20 <filePutBuffer+0x20>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:739
}


u8 filePutBuffer( PYGMYFILE *pygmyFile, u16 uiLen, u8 *ucBuffer )
{
    for( ; uiLen--; ){
  1a:	2c00      	cmp	r4, #0
  1c:	d1f5      	bne.n	a <filePutBuffer+0xa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:745
        if( !filePutChar( pygmyFile, *(ucBuffer++) ) ){
            return( 0 );
        } // if
    } // for

    return( 1 );
  1e:	2001      	movs	r0, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:746
}
  20:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.fileClose:

00000000 <fileClose>:
fileClose():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:615
 
    return( uiDeleted );
}

u8 fileClose( PYGMYFILE *pygmyFile )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:625
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   4:	4e25      	ldr	r6, [pc, #148]	; (9c <fileClose+0x9c>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:615
 
    return( uiDeleted );
}

u8 fileClose( PYGMYFILE *pygmyFile )
{
   6:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:625
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
   8:	2101      	movs	r1, #1
   a:	89c0      	ldrh	r0, [r0, #14]
   c:	6b35      	ldr	r5, [r6, #48]	; 0x30
   e:	f7ff fffe 	bl	0 <fileClose>
  12:	8bb7      	ldrh	r7, [r6, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:626
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  14:	6861      	ldr	r1, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:625
    // ID_Sector 1 moves the current Sector to the newly allocated address

    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
  16:	fb07 5700 	mla	r7, r7, r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:626
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  1a:	4620      	mov	r0, r4
  1c:	f7ff fffe 	bl	0 <fileClose>
  20:	4605      	mov	r5, r0
  22:	2800      	cmp	r0, #0
  24:	d133      	bne.n	8e <fileClose+0x8e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:630
        return( 1 );
    } // if
    // Out of length slots in Sector, Handle Sector copy and re-allocation
    fileDeleteFATEntry( pygmyFile->ID_File, 1 ); // Deletes on first sequential FAT entry
  26:	2101      	movs	r1, #1
  28:	89e0      	ldrh	r0, [r4, #14]
  2a:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:631
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
  2e:	2101      	movs	r1, #1
  30:	89e0      	ldrh	r0, [r4, #14]
  32:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:632
    if( ulAddress2 == 0xFFFF ){
  36:	f64f 73ff 	movw	r3, #65535	; 0xffff
  3a:	4298      	cmp	r0, r3
  3c:	d02a      	beq.n	94 <fileClose+0x94>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:635
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
    } // if
    ulAddress2 += pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
  3e:	f8b6 801c 	ldrh.w	r8, [r6, #28]
  42:	6b33      	ldr	r3, [r6, #48]	; 0x30
  44:	fbb3 f3f8 	udiv	r3, r3, r8
  48:	18c0      	adds	r0, r0, r3
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:636
    if( pygmyFile->ID_Sector == 1 ){
  4a:	89a3      	ldrh	r3, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:639
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
  4c:	fb08 f800 	mul.w	r8, r8, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:636
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
    if( ulAddress2 == 0xFFFF ){
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
    } // if
    ulAddress2 += pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
    if( pygmyFile->ID_Sector == 1 ){
  50:	2b01      	cmp	r3, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:637
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
  52:	bf08      	it	eq
  54:	6020      	streq	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:641
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
  56:	2580      	movs	r5, #128	; 0x80
  58:	e00a      	b.n	70 <fileClose+0x70>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:642
        ucByte = flashReadByte( ulAddress + i );
  5a:	19e8      	adds	r0, r5, r7
  5c:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:643
        if( ucByte != 0xFF ) {// Don't attempt to erase the erased
  60:	28ff      	cmp	r0, #255	; 0xff
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:642
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
        ucByte = flashReadByte( ulAddress + i );
  62:	4601      	mov	r1, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:643
        if( ucByte != 0xFF ) {// Don't attempt to erase the erased
  64:	d003      	beq.n	6e <fileClose+0x6e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:644
            flashWriteByte( ulAddress2 + i, ucByte ); 
  66:	eb05 0008 	add.w	r0, r5, r8
  6a:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:646
        } // if
        ++i;
  6e:	3501      	adds	r5, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:641
    if( pygmyFile->ID_Sector == 1 ){
        pygmyFile->Sector = ulAddress2; // Sector must be updated if we are still in sector 1
    } // if
    ulAddress2 *= pygmyRootVolume.SectorSize;
    
    for( i = 128; i < pygmyRootVolume.SectorSize;  ){
  70:	8bb3      	ldrh	r3, [r6, #28]
  72:	429d      	cmp	r5, r3
  74:	d3f1      	bcc.n	5a <fileClose+0x5a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:649
            flashWriteByte( ulAddress2 + i, ucByte ); 
        } // if
        ++i;
    } // for
    
    flashSectorErase( ulAddress );// Pre-erase to speed next write operation
  76:	4638      	mov	r0, r7
  78:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:650
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
  7c:	4620      	mov	r0, r4
  7e:	6861      	ldr	r1, [r4, #4]
  80:	f7ff fffe 	bl	0 <fileClose>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:627
    u32 i, ulAddress, ulAddress2;
    u8 ucByte;
    
    ulAddress = pygmyRootVolume.FirstFileSector + ( fileGetFAT( pygmyFile->ID_File, 1 ) * pygmyRootVolume.SectorSize );
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
        return( 1 );
  84:	3800      	subs	r0, #0
  86:	bf18      	it	ne
  88:	2001      	movne	r0, #1
  8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  8e:	2001      	movs	r0, #1
  90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:633
    } // if
    // Out of length slots in Sector, Handle Sector copy and re-allocation
    fileDeleteFATEntry( pygmyFile->ID_File, 1 ); // Deletes on first sequential FAT entry
    ulAddress2 = fileAllocateFAT( pygmyFile->ID_File, 1 ); // Allocates new sector to replace first FAT entry
    if( ulAddress2 == 0xFFFF ){
        return( 0 ); // Time to panic, there is no room left to complete operation and we have run out of options
  94:	4628      	mov	r0, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:655
    if( fileWriteLength( pygmyFile, pygmyFile->Length ) ){
        return( 1 ); 
    } // if
    
    return( 0 ); 
}
  96:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  9a:	bf00      	nop
  9c:	00000000 	.word	0x00000000

Disassembly of section .text.fileRename:

00000000 <fileRename>:
fileRename():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:279

    return( 1 );
}

u8 fileRename( u8 *ucCurrentName, u8 *ucName )
{
   0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   4:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:284
    u32 ulFileEntry;
    u16 uiFileID;
    u8 ucAttrib;
 
    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
   6:	4608      	mov	r0, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:279

    return( 1 );
}

u8 fileRename( u8 *ucCurrentName, u8 *ucName )
{
   8:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:284
    u32 ulFileEntry;
    u16 uiFileID;
    u8 ucAttrib;
 
    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
   a:	f7ff fffe 	bl	0 <fileRename>
   e:	2800      	cmp	r0, #0
  10:	d041      	beq.n	96 <fileRename+0x96>
  12:	4628      	mov	r0, r5
  14:	f7ff fffe 	bl	0 <fileRename>
  18:	2800      	cmp	r0, #0
  1a:	d03c      	beq.n	96 <fileRename+0x96>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:287
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
  1c:	4628      	mov	r0, r5
  1e:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:288
    if( !ulFileEntry || fileSeekName( ucName ) ){
  22:	4605      	mov	r5, r0
  24:	2800      	cmp	r0, #0
  26:	d033      	beq.n	90 <fileRename+0x90>
  28:	4638      	mov	r0, r7
  2a:	f7ff fffe 	bl	0 <fileRename>
  2e:	4681      	mov	r9, r0
  30:	2800      	cmp	r0, #0
  32:	d12f      	bne.n	94 <fileRename+0x94>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:292
        return( 0 );
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  34:	4c19      	ldr	r4, [pc, #100]	; (9c <fileRename+0x9c>)
  36:	6923      	ldr	r3, [r4, #16]
  38:	eb03 1805 	add.w	r8, r3, r5, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:293
    ucAttrib = flashReadByte( ulFileEntry + 13 );
  3c:	f108 000d 	add.w	r0, r8, #13
  40:	f7ff fffe 	bl	0 <fileRename>
  44:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:294
    uiFileID = flashReadWord( ulFileEntry + 14 );
  46:	f108 000e 	add.w	r0, r8, #14
  4a:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:295
    flashWriteByte( ulFileEntry, 0x00 ); // Delete old entry by setting first byte to NULL
  4e:	4649      	mov	r1, r9
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:294
        return( 0 );
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
    ucAttrib = flashReadByte( ulFileEntry + 13 );
    uiFileID = flashReadWord( ulFileEntry + 14 );
  50:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:295
    flashWriteByte( ulFileEntry, 0x00 ); // Delete old entry by setting first byte to NULL
  52:	4640      	mov	r0, r8
  54:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:297
    
    ulFileEntry = fileGetFreeFileEntry( );
  58:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:298
    if( !ulFileEntry ){
  5c:	b1d8      	cbz	r0, 96 <fileRename+0x96>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:302
        return( 0 ); // This can only happen in the case of memory failure
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  5e:	6924      	ldr	r4, [r4, #16]
  60:	eb04 1400 	add.w	r4, r4, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:303
    flashWriteBuffer( ulFileEntry, len( ucName )+1, ucName );
  64:	4638      	mov	r0, r7
  66:	f7ff fffe 	bl	0 <len>
  6a:	1c41      	adds	r1, r0, #1
  6c:	463a      	mov	r2, r7
  6e:	4620      	mov	r0, r4
  70:	b289      	uxth	r1, r1
  72:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:304
    flashWriteByte( ulFileEntry+13, ucAttrib );
  76:	f104 000d 	add.w	r0, r4, #13
  7a:	4631      	mov	r1, r6
  7c:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:308
    // Next we write the ID, this starts as the physical offset of the entry
    // This tag cannot be used to identify the entry location since the tag will follow the
    // file through name changes, etc. If ID changes, all associated FAT Entries are lost
    flashWriteWord( ulFileEntry+14, uiFileID );
  80:	f104 000e 	add.w	r0, r4, #14
  84:	4629      	mov	r1, r5
  86:	f7ff fffe 	bl	0 <fileRename>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:310

    return( 1 );
  8a:	2001      	movs	r0, #1
  8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:289
    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
    if( !ulFileEntry || fileSeekName( ucName ) ){
        return( 0 );
  94:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:311
    // This tag cannot be used to identify the entry location since the tag will follow the
    // file through name changes, etc. If ID changes, all associated FAT Entries are lost
    flashWriteWord( ulFileEntry+14, uiFileID );

    return( 1 );
}
  96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  9a:	bf00      	nop
  9c:	00000000 	.word	0x00000000

Disassembly of section .text.fileCopy:

00000000 <fileCopy>:
fileCopy():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:242

    return( 1 );
}

u8 fileCopy( u8 *ucCurrentName, u8 *ucName )
{
   0:	41f0e92d 	.word	0x41f0e92d
   4:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:248
    PYGMYFILE pygmyFile1, pygmyFile2;
    u32 ulFileEntry;
    u16 uiFileID;
    u8 ucAttrib;

    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
   6:	4608      	mov	r0, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:242

    return( 1 );
}

u8 fileCopy( u8 *ucCurrentName, u8 *ucName )
{
   8:	460f      	mov	r7, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:248
    PYGMYFILE pygmyFile1, pygmyFile2;
    u32 ulFileEntry;
    u16 uiFileID;
    u8 ucAttrib;

    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
   a:	f7ff fffe 	bl	0 <fileCopy>
   e:	2800      	cmp	r0, #0
  10:	d03d      	beq.n	8e <fileCopy+0x8e>
  12:	4628      	mov	r0, r5
  14:	f7ff fffe 	bl	0 <fileCopy>
  18:	2800      	cmp	r0, #0
  1a:	d038      	beq.n	8e <fileCopy+0x8e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:251
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
  1c:	4628      	mov	r0, r5
  1e:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:252
    if( !ulFileEntry || fileSeekName( ucName ) ){
  22:	4604      	mov	r4, r0
  24:	b380      	cbz	r0, 88 <fileCopy+0x88>
  26:	4638      	mov	r0, r7
  28:	f7ff fffe 	bl	0 <fileCopy>
  2c:	bb70      	cbnz	r0, 8c <fileCopy+0x8c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:256
        return( 0 );
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  2e:	f8df 8064 	ldr.w	r8, [pc, #100]	; 94 <fileCopy+0x94>
  32:	f8d8 3010 	ldr.w	r3, [r8, #16]
  36:	eb03 1404 	add.w	r4, r3, r4, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:257
    ucAttrib = flashReadByte( ulFileEntry + 13 );
  3a:	f104 000d 	add.w	r0, r4, #13
  3e:	f7ff fffe 	bl	0 <fileCopy>
  42:	4606      	mov	r6, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:258
    uiFileID = flashReadWord( ulFileEntry + 14 );
  44:	f104 000e 	add.w	r0, r4, #14
  48:	f7ff fffe 	bl	0 <fileCopy>
  4c:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:260
    
    ulFileEntry = fileGetFreeFileEntry( );
  4e:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:261
    if( !ulFileEntry ){
  52:	b1e0      	cbz	r0, 8e <fileCopy+0x8e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:265
        return( 0 ); // This can only happen in the case of memory failure
    } // if

    ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  54:	f8d8 4010 	ldr.w	r4, [r8, #16]
  58:	eb04 1400 	add.w	r4, r4, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:266
    flashWriteBuffer( ulFileEntry, len( ucName )+1, ucName );
  5c:	4638      	mov	r0, r7
  5e:	f7ff fffe 	bl	0 <len>
  62:	1c41      	adds	r1, r0, #1
  64:	463a      	mov	r2, r7
  66:	4620      	mov	r0, r4
  68:	b289      	uxth	r1, r1
  6a:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:267
    flashWriteByte( ulFileEntry+13, ucAttrib );
  6e:	f104 000d 	add.w	r0, r4, #13
  72:	4631      	mov	r1, r6
  74:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:271
    // Next we write the ID, this starts as the physical offset of the entry
    // This tag cannot be used to identify the entry location since the tag will follow the
    // file through name changes, etc. If ID changes, all associated FAT Entries are lost
    flashWriteWord( ulFileEntry+14, uiFileID );
  78:	f104 000e 	add.w	r0, r4, #14
  7c:	4629      	mov	r1, r5
  7e:	f7ff fffe 	bl	0 <fileCopy>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:275
    
    //Next Copy data

    return( 1 );
  82:	2001      	movs	r0, #1
  84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:253
    if( !fileIsValidName( ucName ) || !fileIsValidName( ucCurrentName ) ){
        return( 0 );
    } // if
    ulFileEntry = fileSeekName( ucCurrentName );
    if( !ulFileEntry || fileSeekName( ucName ) ){
        return( 0 );
  8c:	2000      	movs	r0, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:276
    flashWriteWord( ulFileEntry+14, uiFileID );
    
    //Next Copy data

    return( 1 );
}
  8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  92:	bf00      	nop
  94:	00000000 	.word	0x00000000

Disassembly of section .text.flashWriteEnable:

00000000 <flashWriteEnable>:
flashWriteEnable():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1282
    FLASH_CS_HIGH;
    flashWaitForBusy(); // Busy must be clear before next write cycle may start
}

void flashWriteEnable( void )
{
   0:	4c1ab538 	.word	0x4c1ab538
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1293
        FLASH_CS_INIT; // To be defined in profile
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
   4:	f44f 5580 	mov.w	r5, #4096	; 0x1000
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1288
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
   8:	6863      	ldr	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1294
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
   a:	4819      	ldr	r0, [pc, #100]	; (70 <flashWriteEnable+0x70>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1288
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
   c:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  10:	6063      	str	r3, [r4, #4]
  12:	6863      	ldr	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1294
        FLASH_SCK_INIT;
        FLASH_MISO_INIT;
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
  14:	2106      	movs	r1, #6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1288
    // Must be called before any write operations to FLASH
    #ifndef __PYGMY_BOOT
        spiConfig( &pygmyFlashSPI, FLASH_CS, FLASH_SCK, FLASH_MISO, FLASH_MOSI );
    #endif
    #ifdef __PYGMY_BOOT
        FLASH_CS_INIT; // To be defined in profile
  16:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
  1a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1289
        FLASH_SCK_INIT;
  1c:	6863      	ldr	r3, [r4, #4]
  1e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
  22:	6063      	str	r3, [r4, #4]
  24:	6863      	ldr	r3, [r4, #4]
  26:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
  2a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1290
        FLASH_MISO_INIT;
  2c:	6863      	ldr	r3, [r4, #4]
  2e:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
  32:	6063      	str	r3, [r4, #4]
  34:	6863      	ldr	r3, [r4, #4]
  36:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
  3a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1291
        FLASH_MOSI_INIT; 
  3c:	6863      	ldr	r3, [r4, #4]
  3e:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
  42:	6063      	str	r3, [r4, #4]
  44:	6863      	ldr	r3, [r4, #4]
  46:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
  4a:	6063      	str	r3, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1293
    #endif
    FLASH_CS_LOW;
  4c:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1294
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
  4e:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1295
    FLASH_CS_HIGH;
  52:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1297
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WRSR );
  54:	4806      	ldr	r0, [pc, #24]	; (70 <flashWriteEnable+0x70>)
  56:	2101      	movs	r1, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1296
        FLASH_MOSI_INIT; 
    #endif
    FLASH_CS_LOW;
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WREN ); // WREN must be written before status register may be modified
    FLASH_CS_HIGH;
    FLASH_CS_LOW;
  58:	6165      	str	r5, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1297
    spiWriteByte( &pygmyFlashSPI, PYGMY_FLASH_WRSR );
  5a:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1298
    spiWriteByte( &pygmyFlashSPI, 0 );
  5e:	4804      	ldr	r0, [pc, #16]	; (70 <flashWriteEnable+0x70>)
  60:	2100      	movs	r1, #0
  62:	f7ff fffe 	bl	0 <flashWriteEnable>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1299
    FLASH_CS_HIGH;
  66:	6125      	str	r5, [r4, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1300
}
  68:	bd38      	pop	{r3, r4, r5, pc}
  6a:	bf00      	nop
  6c:	40010c00 	.word	0x40010c00
  70:	00000000 	.word	0x00000000

Disassembly of section .text.fileFormat:

00000000 <fileFormat>:
fileFormat():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:975
    
    return( 1 );
}

u32 fileFormat( u8 *ucName )
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:988
            return( 0 );
        } // if
    #endif
    // Start by erasing chip
    
    flashWriteEnable( );
   2:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:989
    flashChipErase( );
   6:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:990
    ulCapacity = flashReadID( );
   a:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:998
    // If ID is for FLASH, use the following settings:
        ucAttribs = READ|WRITE|MEDIAFLASH;
        uiSectorSize = 0x1000;
    // If ID is for RAM, use the following settings:
        // ToDo: Add RAM test and settings
    if( ulCapacity == SST_ID_32M ){
   e:	284a      	cmp	r0, #74	; 0x4a
  10:	d009      	beq.n	26 <fileFormat+0x26>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1002
        //print( COM3, "4MB" );
        uiSectors = 1024;
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
  12:	2841      	cmp	r0, #65	; 0x41
  14:	d00b      	beq.n	2e <fileFormat+0x2e>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1007
        //print( COM3, "2MB" );
        uiSectors = 512;
        uiSecPerFAT = 2;
        //ucAttribs = READ|WRITE|MEDIAFLASH;
    } else if( ulCapacity == SST_ID_8M ){
  16:	288e      	cmp	r0, #142	; 0x8e
  18:	d00d      	beq.n	36 <fileFormat+0x36>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:991
    // Start by erasing chip
    
    flashWriteEnable( );
    flashChipErase( );
    ulCapacity = flashReadID( );
    uiSecPerFAT = 1;
  1a:	2401      	movs	r4, #1
  1c:	288d      	cmp	r0, #141	; 0x8d
  1e:	bf0c      	ite	eq
  20:	2580      	moveq	r5, #128	; 0x80
  22:	2500      	movne	r5, #0
  24:	e00a      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1001
    // If ID is for RAM, use the following settings:
        // ToDo: Add RAM test and settings
    if( ulCapacity == SST_ID_32M ){
        //print( COM3, "4MB" );
        uiSectors = 1024;
        uiSecPerFAT = 4;
  26:	2404      	movs	r4, #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1000
        uiSectorSize = 0x1000;
    // If ID is for RAM, use the following settings:
        // ToDo: Add RAM test and settings
    if( ulCapacity == SST_ID_32M ){
        //print( COM3, "4MB" );
        uiSectors = 1024;
  28:	f44f 6580 	mov.w	r5, #1024	; 0x400
  2c:	e006      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1005
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
        //print( COM3, "2MB" );
        uiSectors = 512;
        uiSecPerFAT = 2;
  2e:	2402      	movs	r4, #2
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1004
        //print( COM3, "4MB" );
        uiSectors = 1024;
        uiSecPerFAT = 4;
    } else if( ulCapacity == SST_ID_16M ){
        //print( COM3, "2MB" );
        uiSectors = 512;
  30:	f44f 7500 	mov.w	r5, #512	; 0x200
  34:	e002      	b.n	3c <fileFormat+0x3c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:991
    // Start by erasing chip
    
    flashWriteEnable( );
    flashChipErase( );
    ulCapacity = flashReadID( );
    uiSecPerFAT = 1;
  36:	2401      	movs	r4, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1009
        uiSectors = 512;
        uiSecPerFAT = 2;
        //ucAttribs = READ|WRITE|MEDIAFLASH;
    } else if( ulCapacity == SST_ID_8M ){
        //print( COM3, "1MB" );
        uiSectors = 256;
  38:	f44f 7580 	mov.w	r5, #256	; 0x100
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1024
        if( ucName[ 0 ] ){ // As long as first char of name field is non-null, name is optional
            flashWriteString( PYGMY_FILE_VOLUME_FIELD_NAME, TRUE, ucName );
        } // if
    #endif
    flashWriteByte( PYGMY_FILE_VOLUME_FIELD_ATTRIB, ucAttribs );
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORS, uiSecPerFAT * 252 ); //uiSectors - ( uiSecPerFAT * 2 ) );
  3c:	26fc      	movs	r6, #252	; 0xfc
  3e:	fb06 f704 	mul.w	r7, r6, r4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1023
        // Next write optional volume name, if needed
        if( ucName[ 0 ] ){ // As long as first char of name field is non-null, name is optional
            flashWriteString( PYGMY_FILE_VOLUME_FIELD_NAME, TRUE, ucName );
        } // if
    #endif
    flashWriteByte( PYGMY_FILE_VOLUME_FIELD_ATTRIB, ucAttribs );
  42:	200f      	movs	r0, #15
  44:	210b      	movs	r1, #11
  46:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1024
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORS, uiSecPerFAT * 252 ); //uiSectors - ( uiSecPerFAT * 2 ) );
  4a:	f64f 71fc 	movw	r1, #65532	; 0xfffc
  4e:	2010      	movs	r0, #16
  50:	ea07 0101 	and.w	r1, r7, r1
  54:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1025
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_SECTORSIZE, uiSectorSize ); // hard coded to SST family sectors size
  58:	2012      	movs	r0, #18
  5a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  5e:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1026
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_MAXFILES, uiSecPerFAT * 252 );
  62:	2014      	movs	r0, #20
  64:	4639      	mov	r1, r7
  66:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1028
    // Media size is defined as total sectors minus FILE and FAT sectors * SECTOR SIZE
    ulCapacity = ( uiSectors - ( uiSecPerFAT * 2 ) ) * uiSectorSize;
  6a:	0063      	lsls	r3, r4, #1
  6c:	1aed      	subs	r5, r5, r3
  6e:	032d      	lsls	r5, r5, #12
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1029
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_MEDIASIZE, ulCapacity );
  70:	2018      	movs	r0, #24
  72:	4629      	mov	r1, r5
  74:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1030
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_ENTRIESPERFAT, 252 );
  78:	201c      	movs	r0, #28
  7a:	4631      	mov	r1, r6
  7c:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1031
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FILESSECTORS, uiSecPerFAT );
  80:	201e      	movs	r0, #30
  82:	4621      	mov	r1, r4
  84:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1032
    flashWriteWord( PYGMY_FILE_VOLUME_FIELD_FATSECTORS, uiSecPerFAT );
  88:	2020      	movs	r0, #32
  8a:	4621      	mov	r1, r4
  8c:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1033
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FIRSTFILESECTOR, ( ( uiSecPerFAT * 5 ) * uiSectorSize ) );
  90:	f44f 41a0 	mov.w	r1, #20480	; 0x5000
  94:	4361      	muls	r1, r4
  96:	2022      	movs	r0, #34	; 0x22
  98:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1034
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_A, 0x00000000 );
  9c:	2026      	movs	r0, #38	; 0x26
  9e:	2100      	movs	r1, #0
  a0:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1035
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FILES_B, uiSecPerFAT * uiSectorSize );
  a4:	0321      	lsls	r1, r4, #12
  a6:	202a      	movs	r0, #42	; 0x2a
  a8:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1036
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FAT_A, ( ( uiSecPerFAT * 2 ) * uiSectorSize ) );
  ac:	0361      	lsls	r1, r4, #13
  ae:	202e      	movs	r0, #46	; 0x2e
  b0:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1037
    flashWriteLong( PYGMY_FILE_VOLUME_FIELD_FAT_B, ( ( uiSecPerFAT * 3 ) * uiSectorSize ) );
  b4:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  b8:	2032      	movs	r0, #50	; 0x32
  ba:	4361      	muls	r1, r4
  bc:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1038
    flashWriteByte( ( ( uiSecPerFAT * 4 ) * uiSectorSize ) - 1, 0x00 );
  c0:	03a0      	lsls	r0, r4, #14
  c2:	3801      	subs	r0, #1
  c4:	2100      	movs	r1, #0
  c6:	f7ff fffe 	bl	0 <fileFormat>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:1041
    
    return( ulCapacity );
}       
  ca:	4628      	mov	r0, r5
  cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.fileMountRoot:

00000000 <fileMountRoot>:
fileMountRoot():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:938
    return( ucBuffer[ ucIndex++ ] );
}
#endif

u8 fileMountRoot( void )//Volume( void )//PYGMYFILEVOLUME *pygmyFileVolume )
{
   0:	b570      	push	{r4, r5, r6, lr}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:943
    u32 ulTableOffset;
    
    flashWriteEnable( );
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    pygmyRootVolume.Files_A = 0;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
   2:	4d2b      	ldr	r5, [pc, #172]	; (b0 <fileMountRoot+0xb0>)
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:941

u8 fileMountRoot( void )//Volume( void )//PYGMYFILEVOLUME *pygmyFileVolume )
{
    u32 ulTableOffset;
    
    flashWriteEnable( );
   4:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:943
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    pygmyRootVolume.Files_A = 0;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
   8:	2600      	movs	r6, #0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:944
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
   a:	202a      	movs	r0, #42	; 0x2a
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:943
{
    u32 ulTableOffset;
    
    flashWriteEnable( );
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    pygmyRootVolume.Files_A = 0;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
   c:	636e      	str	r6, [r5, #52]	; 0x34
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:944
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
   e:	f7ff fffe 	bl	0 <fileMountRoot>
  12:	63a8      	str	r0, [r5, #56]	; 0x38
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:946
    
    ulTableOffset = fileGetActiveFiles();
  14:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:947
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
  18:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:946
    flashWriteEnable( );
    // Note that the Files_A and Files_B values are static and will not change, both Files A/B will be same in both tables 
    pygmyRootVolume.Files_A = 0;//Pygmy_FLASH_ReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_A );
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
    
    ulTableOffset = fileGetActiveFiles();
  1c:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:947
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
  1e:	d108      	bne.n	32 <fileMountRoot+0x32>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:948
        fileFormat( "" );
  20:	4824      	ldr	r0, [pc, #144]	; (b4 <fileMountRoot+0xb4>)
  22:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:949
        ulTableOffset = fileGetActiveFiles();
  26:	f7ff fffe 	bl	0 <fileMountRoot>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:950
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
  2a:	f1b0 3fff 	cmp.w	r0, #4294967295
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:949
    pygmyRootVolume.Files_B = flashReadLong( PYGMY_FILE_VOLUME_FIELD_FILES_B );
    
    ulTableOffset = fileGetActiveFiles();
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
        fileFormat( "" );
        ulTableOffset = fileGetActiveFiles();
  2e:	4604      	mov	r4, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:950
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
  30:	d03b      	beq.n	aa <fileMountRoot+0xaa>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:957
        } // if
    } // if
    
    // Add code to copy volume name to structure here, if needed
     
    pygmyRootVolume.Attributes = flashReadByte( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_ATTRIB );
  32:	f104 000f 	add.w	r0, r4, #15
  36:	f7ff fffe 	bl	0 <fileMountRoot>
  3a:	81e8      	strh	r0, [r5, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:958
    pygmyRootVolume.Sectors = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_SECTORS );
  3c:	f104 0010 	add.w	r0, r4, #16
  40:	f7ff fffe 	bl	0 <fileMountRoot>
  44:	61a8      	str	r0, [r5, #24]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:959
    pygmyRootVolume.SectorSize = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_SECTORSIZE );
  46:	f104 0012 	add.w	r0, r4, #18
  4a:	f7ff fffe 	bl	0 <fileMountRoot>
  4e:	83a8      	strh	r0, [r5, #28]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:960
    pygmyRootVolume.MaxFiles = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_MAXFILES );
  50:	f104 0014 	add.w	r0, r4, #20
  54:	f7ff fffe 	bl	0 <fileMountRoot>
  58:	6228      	str	r0, [r5, #32]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:961
    pygmyRootVolume.MediaSize = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_MEDIASIZE );
  5a:	f104 0018 	add.w	r0, r4, #24
  5e:	f7ff fffe 	bl	0 <fileMountRoot>
  62:	6268      	str	r0, [r5, #36]	; 0x24
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:962
    pygmyRootVolume.EntriesPerFAT = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_ENTRIESPERFAT );
  64:	f104 001c 	add.w	r0, r4, #28
  68:	f7ff fffe 	bl	0 <fileMountRoot>
  6c:	8528      	strh	r0, [r5, #40]	; 0x28
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:963
    pygmyRootVolume.FilesSectors = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FILESSECTORS );
  6e:	f104 001e 	add.w	r0, r4, #30
  72:	f7ff fffe 	bl	0 <fileMountRoot>
  76:	8568      	strh	r0, [r5, #42]	; 0x2a
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:964
    pygmyRootVolume.FATSectors = flashReadWord( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FATSECTORS );
  78:	f104 0020 	add.w	r0, r4, #32
  7c:	f7ff fffe 	bl	0 <fileMountRoot>
  80:	85a8      	strh	r0, [r5, #44]	; 0x2c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:965
    pygmyRootVolume.FirstFileSector = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FIRSTFILESECTOR );
  82:	f104 0022 	add.w	r0, r4, #34	; 0x22
  86:	f7ff fffe 	bl	0 <fileMountRoot>
  8a:	6328      	str	r0, [r5, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:966
    pygmyRootVolume.FAT_A = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_A );
  8c:	f104 002e 	add.w	r0, r4, #46	; 0x2e
  90:	f7ff fffe 	bl	0 <fileMountRoot>
  94:	63e8      	str	r0, [r5, #60]	; 0x3c
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:967
    pygmyRootVolume.FAT_B = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_B );
  96:	f104 0032 	add.w	r0, r4, #50	; 0x32
  9a:	f7ff fffe 	bl	0 <fileMountRoot>
  9e:	6428      	str	r0, [r5, #64]	; 0x40
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:969
    
    pygmyRootVolume.ActiveFAT = fileGetActiveFAT();
  a0:	f7ff fffe 	bl	0 <fileMountRoot>
  a4:	6168      	str	r0, [r5, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:971
    
    return( 1 );
  a6:	2001      	movs	r0, #1
  a8:	bd70      	pop	{r4, r5, r6, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:951
    ulTableOffset = fileGetActiveFiles();
    if( ulTableOffset == 0xFFFFFFFF ){ // May not have been formatted
        fileFormat( "" );
        ulTableOffset = fileGetActiveFiles();
        if( ulTableOffset == 0xFFFFFFFF ){ // After format this means memory failure
            return( 0 );
  aa:	4630      	mov	r0, r6
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:972
    pygmyRootVolume.FAT_B = flashReadLong( ulTableOffset + PYGMY_FILE_VOLUME_FIELD_FAT_B );
    
    pygmyRootVolume.ActiveFAT = fileGetActiveFAT();
    
    return( 1 );
}
  ac:	bd70      	pop	{r4, r5, r6, pc}
  ae:	bf00      	nop
  b0:	00000000 	.word	0x00000000
  b4:	0000002a 	.word	0x0000002a

Disassembly of section .text.fileDelete:

00000000 <fileDelete>:
fileDelete():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:574
    
    return( 0xFFFFFFFF ); // both Files tables inactive means memory failure
}

u8 fileDelete( u8 *ucName )
{
   0:	4604b510 	.word	0x4604b510
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:577
    u16 uiFileEntry;

    fileMountRoot( );
   4:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:578
    uiFileEntry = fileSeekName( ucName );
   8:	4620      	mov	r0, r4
   a:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:579
    if( !uiFileEntry )
   e:	4604      	mov	r4, r0
  10:	b160      	cbz	r0, 2c <fileDelete+0x2c>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:581
        return( 0 );
    flashWriteByte( pygmyRootVolume.ActiveFiles + ( uiFileEntry * 16 ), 0 ); // First byte 0 marks as deleted
  12:	4b07      	ldr	r3, [pc, #28]	; (30 <fileDelete+0x30>)
  14:	2100      	movs	r1, #0
  16:	6918      	ldr	r0, [r3, #16]
  18:	eb00 1004 	add.w	r0, r0, r4, lsl #4
  1c:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:583
    // Next find all FAT entries with the ID uiFleEntry and Delete
    fileDeleteFATEntry( uiFileEntry, 0 ); // 0 erases all FAT Entries with ID uiFileEntry
  20:	4620      	mov	r0, r4
  22:	2100      	movs	r1, #0
  24:	f7ff fffe 	bl	0 <fileDelete>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:585
    
    return( 1 );
  28:	2001      	movs	r0, #1
  2a:	bd10      	pop	{r4, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:586
}
  2c:	bd10      	pop	{r4, pc}
  2e:	bf00      	nop
  30:	00000000 	.word	0x00000000

Disassembly of section .text.fileOpen:

00000000 <fileOpen>:
fileOpen():
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:84

PYGMYFILEVOLUME pygmyRootVolume;
PYGMYSPIPORT pygmyFlashSPI;

u8 fileOpen( PYGMYFILE *pygmyFile, u8 *ucName, u8 ucAttrib )
{
   0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   4:	4604      	mov	r4, r0
   6:	4688      	mov	r8, r1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:88
    u32 ulFileEntry;
    u32 ulEntryAddress, ulNameMatch;

    if( ucAttrib ){
   8:	b10a      	cbz	r2, e <fileOpen+0xe>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:89
        pygmyFile->Attributes = ucAttrib;
   a:	7402      	strb	r2, [r0, #16]
   c:	e001      	b.n	12 <fileOpen+0x12>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:91
    } else{ 
        pygmyFile->Attributes = READ;
   e:	2301      	movs	r3, #1
  10:	7403      	strb	r3, [r0, #16]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:93
    } // else
    fileMountRoot( );
  12:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:95
    
    if( !fileIsValidName( ucName ) ){
  16:	4640      	mov	r0, r8
  18:	f7ff fffe 	bl	0 <fileOpen>
  1c:	2800      	cmp	r0, #0
  1e:	d069      	beq.n	f4 <fileOpen+0xf4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:99
       return( 0 );
    } // if
    
    ulNameMatch = fileSeekName( ucName );
  20:	4640      	mov	r0, r8
  22:	f7ff fffe 	bl	0 <fileOpen>
  26:	4606      	mov	r6, r0
  28:	4605      	mov	r5, r0
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:100
    if( !ulNameMatch && ( pygmyFile->Attributes & READ ) ){
  2a:	b918      	cbnz	r0, 34 <fileOpen+0x34>
  2c:	7c23      	ldrb	r3, [r4, #16]
  2e:	f013 0f01 	tst.w	r3, #1
  32:	d15d      	bne.n	f0 <fileOpen+0xf0>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:103
        return( 0 );
    } // if
    copyString( ucName, pygmyFile->Name );
  34:	f104 0718 	add.w	r7, r4, #24
  38:	4640      	mov	r0, r8
  3a:	4639      	mov	r1, r7
  3c:	f7ff fffe 	bl	0 <copyString>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:104
    pygmyFile->Resource = NULL;
  40:	2300      	movs	r3, #0
  42:	6163      	str	r3, [r4, #20]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:105
    if( ( pygmyFile->Attributes & WRITE ) && 
  44:	7c23      	ldrb	r3, [r4, #16]
  46:	f013 0f02 	tst.w	r3, #2
  4a:	d029      	beq.n	a0 <fileOpen+0xa0>
  4c:	b12e      	cbz	r6, 5a <fileOpen+0x5a>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:106
        !( ulNameMatch && ( pygmyFile->Attributes & APPEND ) ) ){
  4e:	f013 0f04 	tst.w	r3, #4
  52:	d125      	bne.n	a0 <fileOpen+0xa0>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:108
        if ( ulNameMatch ){ // File exists and we are in write mode, delete
            fileDelete( pygmyFile->Name ); // If file exists and not in append mode, file must be deleted
  54:	4638      	mov	r0, r7
  56:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:111
            ulNameMatch = 0;
        } // if    
        ulFileEntry = fileGetFreeFileEntry( );
  5a:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:113
        ulNameMatch = ulFileEntry;
        if( !ulFileEntry ){
  5e:	4605      	mov	r5, r0
  60:	2800      	cmp	r0, #0
  62:	d047      	beq.n	f4 <fileOpen+0xf4>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:117
            return( 0 ); // No Sectors left to allocate     
        } // if
        //[ FILENAME 13B ][ ATTRIB 1B ][ ID_File 2B ] ( 16B total )
        ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
  64:	4b24      	ldr	r3, [pc, #144]	; (f8 <fileOpen+0xf8>)
  66:	691e      	ldr	r6, [r3, #16]
  68:	eb06 1600 	add.w	r6, r6, r0, lsl #4
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:119
        //Pygmy_FLASH_WriteString( ulFileEntry, pygmyFile->Name );
        flashWriteBuffer( ulFileEntry, len( pygmyFile->Name )+1, pygmyFile->Name );
  6c:	4638      	mov	r0, r7
  6e:	f7ff fffe 	bl	0 <len>
  72:	1c41      	adds	r1, r0, #1
  74:	463a      	mov	r2, r7
  76:	4630      	mov	r0, r6
  78:	b289      	uxth	r1, r1
  7a:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:120
        flashWriteByte( ulFileEntry+13, (WRITE|READ) );//pygmyFile->Attributes );
  7e:	f106 000d 	add.w	r0, r6, #13
  82:	2103      	movs	r1, #3
  84:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:122
        pygmyFile->ID_File = ulNameMatch;
        pygmyFile->ID_Sector = 1;
  88:	2201      	movs	r2, #1
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:123
        flashWriteWord( ulFileEntry+14, pygmyFile->ID_File );
  8a:	f106 000e 	add.w	r0, r6, #14
  8e:	4629      	mov	r1, r5
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:121
        //[ FILENAME 13B ][ ATTRIB 1B ][ ID_File 2B ] ( 16B total )
        ulFileEntry = pygmyRootVolume.ActiveFiles + ( ulFileEntry * 16); // Each file Entry exactly 16 bytes
        //Pygmy_FLASH_WriteString( ulFileEntry, pygmyFile->Name );
        flashWriteBuffer( ulFileEntry, len( pygmyFile->Name )+1, pygmyFile->Name );
        flashWriteByte( ulFileEntry+13, (WRITE|READ) );//pygmyFile->Attributes );
        pygmyFile->ID_File = ulNameMatch;
  90:	81e5      	strh	r5, [r4, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:122
        pygmyFile->ID_Sector = 1;
  92:	81a2      	strh	r2, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:123
        flashWriteWord( ulFileEntry+14, pygmyFile->ID_File );
  94:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:124
        fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector );    
  98:	89e0      	ldrh	r0, [r4, #14]
  9a:	7b21      	ldrb	r1, [r4, #12]
  9c:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:127
    } // if 
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
  a0:	4e15      	ldr	r6, [pc, #84]	; (f8 <fileOpen+0xf8>)
  a2:	6930      	ldr	r0, [r6, #16]
  a4:	300e      	adds	r0, #14
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:128
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
  a6:	eb00 1005 	add.w	r0, r0, r5, lsl #4
  aa:	f7ff fffe 	bl	0 <fileOpen>
  ae:	81e0      	strh	r0, [r4, #14]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:129
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
  b0:	f7ff fffe 	bl	0 <fileOpen>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:130
    pygmyFile->Sector = pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
  b4:	8bb3      	ldrh	r3, [r6, #28]
  b6:	6b32      	ldr	r2, [r6, #48]	; 0x30
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:129
        fileAllocateFAT( pygmyFile->ID_File, pygmyFile->ID_Sector );    
    } // if 
    
    ulEntryAddress = pygmyRootVolume.ActiveFiles + ( ulNameMatch * 16); // Each file Entry exactly 16 bytes
    pygmyFile->ID_File = flashReadWord( ulEntryAddress + 14 ); // last two bytes store ID
    pygmyFile->Length = fileGetLength( pygmyFile->ID_File );  
  b8:	6060      	str	r0, [r4, #4]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:130
    pygmyFile->Sector = pygmyRootVolume.FirstFileSector / pygmyRootVolume.SectorSize;
  ba:	fbb2 f2f3 	udiv	r2, r2, r3
  be:	6022      	str	r2, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:131
    pygmyFile->ID_Sector = 1;
  c0:	2201      	movs	r2, #1
  c2:	81a2      	strh	r2, [r4, #12]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:132
    if( pygmyFile->Attributes & APPEND ){
  c4:	7c22      	ldrb	r2, [r4, #16]
  c6:	f012 0204 	ands.w	r2, r2, #4
  ca:	d006      	beq.n	da <fileOpen+0xda>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:133
        pygmyFile->Index = pygmyFile->Length;
  cc:	60a0      	str	r0, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:134
        pygmyFile->ID_Sector += ( ( pygmyFile->Length + 128 ) / pygmyRootVolume.SectorSize );
  ce:	3080      	adds	r0, #128	; 0x80
  d0:	fbb0 f3f3 	udiv	r3, r0, r3
  d4:	3301      	adds	r3, #1
  d6:	81a3      	strh	r3, [r4, #12]
  d8:	e000      	b.n	dc <fileOpen+0xdc>
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:136
    } else{
        pygmyFile->Index = 0;
  da:	60a2      	str	r2, [r4, #8]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:138
    } // else
    pygmyFile->Sector += fileGetFAT( pygmyFile->ID_File, pygmyFile->ID_Sector );
  dc:	89e0      	ldrh	r0, [r4, #14]
  de:	7b21      	ldrb	r1, [r4, #12]
  e0:	6825      	ldr	r5, [r4, #0]
  e2:	f7ff fffe 	bl	0 <fileOpen>
  e6:	1940      	adds	r0, r0, r5
  e8:	6020      	str	r0, [r4, #0]
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:140

    return( 1 );
  ea:	2001      	movs	r0, #1
  ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
C:\Users\MightyDubster\Documents\Projects\pygmyos\core/pygmy_file.c:141
}
  f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  f8:	00000000 	.word	0x00000000
